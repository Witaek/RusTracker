{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2","program":"/home/guilhem/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","soapysdr","/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"log\"","-C","metadata=339e378a272ec5be","-C","extra-filename=-339e378a272ec5be","--out-dir","/home/guilhem/git/RusTracker/source/target/rls/debug/deps","-L","dependency=/home/guilhem/git/RusTracker/source/target/rls/debug/deps","--extern","log=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/liblog-ba0afbb7033fa694.rmeta","--extern","num_complex=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libnum_complex-67ecb9269061d4ed.rmeta","--extern","soapysdr_sys=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libsoapysdr_sys-6bbb88ccad6db9cb.rmeta","--cap-lints","allow","-L","native=/usr/lib/x86_64-linux-gnu","-L","native=/home/guilhem/git/RusTracker/source/target/rls/debug/build/soapysdr-sys-ce0a09b634f8400c/out","--error-format=json","--sysroot","/home/guilhem/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libsoapysdr-339e378a272ec5be.rmeta"},"prelude":{"crate_id":{"name":"soapysdr","disambiguator":[3867589608967983687,0]},"crate_root":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src","external_crates":[{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":20,"id":{"name":"soapysdr_sys","disambiguator":[17100516708924547519,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":21,"id":{"name":"num_complex","disambiguator":[7877697534875860844,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":22,"id":{"name":"num_traits","disambiguator":[17857894811583946901,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":23,"id":{"name":"log","disambiguator":[8147683544257590759,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}}],"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":0,"byte_end":1950,"line_start":1,"line_end":54,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":316,"byte_end":320,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"alias_span":null,"name":"Args","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":322,"byte_end":334,"line_start":11,"line_end":11,"column_start":22,"column_end":34},"alias_span":null,"name":"ArgsIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":368,"byte_end":375,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"alias_span":null,"name":"ArgInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":407,"byte_end":416,"line_start":17,"line_end":17,"column_start":18,"column_end":27},"alias_span":null,"name":"enumerate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":418,"byte_end":424,"line_start":17,"line_end":17,"column_start":29,"column_end":35},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":426,"byte_end":434,"line_start":17,"line_end":17,"column_start":37,"column_end":45},"alias_span":null,"name":"RxStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":436,"byte_end":444,"line_start":17,"line_end":17,"column_start":47,"column_end":55},"alias_span":null,"name":"TxStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":446,"byte_end":451,"line_start":17,"line_end":17,"column_start":57,"column_end":62},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":453,"byte_end":462,"line_start":17,"line_end":17,"column_start":64,"column_end":73},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":464,"byte_end":473,"line_start":17,"line_end":17,"column_start":75,"column_end":84},"alias_span":null,"name":"Direction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":394},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":475,"byte_end":480,"line_start":17,"line_end":17,"column_start":86,"column_end":91},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":513,"byte_end":519,"line_start":20,"line_end":20,"column_start":18,"column_end":24},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":521,"byte_end":533,"line_start":20,"line_end":20,"column_start":26,"column_end":38},"alias_span":null,"name":"StreamSample","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":0,"byte_end":1950,"line_start":1,"line_end":54,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462}],"decl_id":null,"docs":" [SoapySDR](https://github.com/pothosware/SoapySDR/wiki) provides a hardware abstraction layer\n for transmitting and receiving with many software defined radio devices.","sig":null,"attributes":[{"value":"/ [SoapySDR](https://github.com/pothosware/SoapySDR/wiki) provides a hardware abstraction layer","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":0,"byte_end":97,"line_start":1,"line_end":1,"column_start":1,"column_end":98}},{"value":"/ for transmitting and receiving with many software defined radio devices.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":98,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":179,"byte_end":182,"line_start":4,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2195,"byte_end":2199,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Args","qualname":"::args::Args","value":"","parent":null,"children":[],"decl_id":null,"docs":" A list of key=value pairs.\n","sig":null,"attributes":[{"value":"/ A list of key=value pairs.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2153,"byte_end":2183,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2391,"byte_end":2394,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Args>::new","value":"pub fn new() -> Args","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty `Args` list\n","sig":null,"attributes":[{"value":"/ Create a new, empty `Args` list","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2344,"byte_end":2379,"line_start":20,"line_end":20,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2564,"byte_end":2572,"line_start":29,"line_end":29,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Args>::from_raw","value":"pub unsafe fn from_raw(SoapySDRKwargs) -> Args","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2636,"byte_end":2642,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Args>::as_raw","value":"pub fn as_raw(&mut Self) -> *mut SoapySDRKwargs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2727,"byte_end":2739,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"as_raw_const","qualname":"<Args>::as_raw_const","value":"pub fn as_raw_const(&Self) -> *const SoapySDRKwargs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3531,"byte_end":3534,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"set","qualname":"<Args>::set","value":"pub fn set<K: Into<Vec<u8>>, V: Into<Vec<u8>>>(&mut Self, K, V)","parent":null,"children":[],"decl_id":null,"docs":" Append a key-value pair to the arguments list","sig":null,"attributes":[{"value":"/ Append a key-value pair to the arguments list","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3245,"byte_end":3294,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3299,"byte_end":3302,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3307,"byte_end":3320,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3325,"byte_end":3332,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use soapysdr::Args;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3337,"byte_end":3360,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"/ let mut args = Args::new();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3365,"byte_end":3396,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/ args.set(\"driver\", \"lime\");","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3401,"byte_end":3432,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3437,"byte_end":3444,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3449,"byte_end":3452,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3457,"byte_end":3469,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/  * if `key` or `value` contain null bytes","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3474,"byte_end":3519,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4150,"byte_end":4153,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"get","qualname":"<Args>::get","value":"pub fn get<'a>(&'a Self, &str) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Get the value corresponding to a key in the arguments list.","sig":null,"attributes":[{"value":"/ Get the value corresponding to a key in the arguments list.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3889,"byte_end":3952,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3957,"byte_end":3960,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ### Example:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3965,"byte_end":3981,"line_start":78,"line_end":78,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3986,"byte_end":3993,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use soapysdr::Args;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":3998,"byte_end":4021,"line_start":80,"line_end":80,"column_start":5,"column_end":28}},{"value":"/ let args: Args = \"serial=123456\".into();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4026,"byte_end":4070,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(args.get(\"serial\"), Some(\"123456\"));","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4075,"byte_end":4126,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4131,"byte_end":4138,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4802,"byte_end":4806,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"iter","qualname":"<Args>::iter","value":"pub fn iter(&Self) -> ArgsIterator","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the (key, value) pairs in the arguments list.","sig":null,"attributes":[{"value":"/ Get an iterator over the (key, value) pairs in the arguments list.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4394,"byte_end":4464,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4469,"byte_end":4472,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ### Example:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4477,"byte_end":4493,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4498,"byte_end":4505,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use soapysdr::Args;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4510,"byte_end":4533,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let args: Args = \"driver=lime, serial=123456\".into();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4538,"byte_end":4595,"line_start":98,"line_end":98,"column_start":5,"column_end":62}},{"value":"/ let mut i = args.iter();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4600,"byte_end":4628,"line_start":99,"line_end":99,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(i.next(), Some((\"driver\", \"lime\")));","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4633,"byte_end":4684,"line_start":100,"line_end":100,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(i.next(), Some((\"serial\", \"123456\")));","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4689,"byte_end":4742,"line_start":101,"line_end":101,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(i.next(), None);","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4747,"byte_end":4778,"line_start":102,"line_end":102,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4783,"byte_end":4790,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6990,"byte_end":7002,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"ArgsIterator","qualname":"::args::ArgsIterator","value":"ArgsIterator {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" An iterator over the `(&key, &value)` pairs in an `Args` list.\n","sig":null,"attributes":[{"value":"/ An iterator over the `(&key, &value)` pairs in an `Args` list.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6912,"byte_end":6978,"line_start":189,"line_end":189,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":475},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7650,"byte_end":7654,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Bool","qualname":"::arginfo::ArgType::Bool","value":"ArgType::Bool","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7660,"byte_end":7665,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Float","qualname":"::arginfo::ArgType::Float","value":"ArgType::Float","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":479},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7671,"byte_end":7674,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Int","qualname":"::arginfo::ArgType::Int","value":"ArgType::Int","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":481},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7680,"byte_end":7686,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"String","qualname":"::arginfo::ArgType::String","value":"ArgType::String","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7692,"byte_end":7707,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::arginfo::ArgType::__Nonexhaustive","value":"ArgType::__Nonexhaustive","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":474},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7636,"byte_end":7643,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"ArgType","qualname":"::arginfo::ArgType","value":"pub enum ArgType { Bool, Float, Int, String, __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8295,"byte_end":8302,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"ArgInfo","qualname":"::arginfo::ArgInfo","value":"ArgInfo { key, value, name, description, units, data_type, options }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" Metadata about supported arguments.\n","sig":null,"attributes":[{"value":"/ Metadata about supported arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8244,"byte_end":8283,"line_start":29,"line_end":29,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":124},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8359,"byte_end":8362,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"key","qualname":"::arginfo::ArgInfo::key","value":"std::string::String","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The key used to identify the argument\n","sig":null,"attributes":[{"value":"/ The key used to identify the argument","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8309,"byte_end":8350,"line_start":31,"line_end":31,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":125},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8442,"byte_end":8447,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"value","qualname":"::arginfo::ArgInfo::value","value":"std::string::String","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The default value of the argument when not specified\n","sig":null,"attributes":[{"value":"/ The default value of the argument when not specified","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8377,"byte_end":8433,"line_start":34,"line_end":34,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8511,"byte_end":8515,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"name","qualname":"::arginfo::ArgInfo::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The displayable name of the argument\n","sig":null,"attributes":[{"value":"/ The displayable name of the argument","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8462,"byte_end":8502,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":127},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8590,"byte_end":8601,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"description","qualname":"::arginfo::ArgInfo::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":"  A brief description about the argument\n","sig":null,"attributes":[{"value":"/  A brief description about the argument","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8538,"byte_end":8581,"line_start":40,"line_end":40,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8675,"byte_end":8680,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"units","qualname":"::arginfo::ArgInfo::units","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The units of the argument: dB, Hz, etc\n","sig":null,"attributes":[{"value":"/ The units of the argument: dB, Hz, etc","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8624,"byte_end":8666,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8745,"byte_end":8754,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"name":"data_type","qualname":"::arginfo::ArgInfo::data_type","value":"arginfo::ArgType","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The data type of the argument\n","sig":null,"attributes":[{"value":"/ The data type of the argument","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8703,"byte_end":8736,"line_start":46,"line_end":46,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":130},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8905,"byte_end":8912,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"options","qualname":"::arginfo::ArgInfo::options","value":"std::vec::Vec<(std::string::String, std::option::Option<std::string::String>)>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" A discrete list of possible values.","sig":null,"attributes":[{"value":"/ A discrete list of possible values.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8770,"byte_end":8809,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8814,"byte_end":8817,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ When specified, the argument should be restricted to this options set.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":8822,"byte_end":8896,"line_start":51,"line_end":51,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10505,"byte_end":10512,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::device::ErrorCode::Timeout","value":"ErrorCode::Timeout","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned when read has a timeout.\n","sig":null,"attributes":[{"value":"/ Returned when read has a timeout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10463,"byte_end":10500,"line_start":18,"line_end":18,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":500},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10573,"byte_end":10584,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"name":"StreamError","qualname":"::device::ErrorCode::StreamError","value":"ErrorCode::StreamError","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned for non-specific stream errors.\n","sig":null,"attributes":[{"value":"/ Returned for non-specific stream errors.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10524,"byte_end":10568,"line_start":21,"line_end":21,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10700,"byte_end":10710,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"name":"Corruption","qualname":"::device::ErrorCode::Corruption","value":"ErrorCode::Corruption","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned when read has data corruption.\n For example, the driver saw a malformed packet.\n","sig":null,"attributes":[{"value":"/ Returned when read has data corruption.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10596,"byte_end":10639,"line_start":24,"line_end":24,"column_start":5,"column_end":48}},{"value":"/ For example, the driver saw a malformed packet.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10644,"byte_end":10695,"line_start":25,"line_end":25,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10829,"byte_end":10837,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::device::ErrorCode::Overflow","value":"ErrorCode::Overflow","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned when read has an overflow condition.\n For example, and internal buffer has filled.\n","sig":null,"attributes":[{"value":"/ Returned when read has an overflow condition.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10722,"byte_end":10771,"line_start":28,"line_end":28,"column_start":5,"column_end":54}},{"value":"/ For example, and internal buffer has filled.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10776,"byte_end":10824,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10968,"byte_end":10980,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"name":"NotSupported","qualname":"::device::ErrorCode::NotSupported","value":"ErrorCode::NotSupported","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned when a requested operation or flag setting\n is not supported by the underlying implementation.\n","sig":null,"attributes":[{"value":"/ Returned when a requested operation or flag setting","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10849,"byte_end":10904,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"/ is not supported by the underlying implementation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10909,"byte_end":10963,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11111,"byte_end":11120,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"TimeError","qualname":"::device::ErrorCode::TimeError","value":"ErrorCode::TimeError","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned when a the device encountered a stream time\n which was expired (late) or too early to process.\n","sig":null,"attributes":[{"value":"/ Returned when a the device encountered a stream time","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10992,"byte_end":11048,"line_start":36,"line_end":36,"column_start":5,"column_end":61}},{"value":"/ which was expired (late) or too early to process.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11053,"byte_end":11106,"line_start":37,"line_end":37,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":515},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11249,"byte_end":11258,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"name":"Underflow","qualname":"::device::ErrorCode::Underflow","value":"ErrorCode::Underflow","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Returned when write caused an underflow condition.\n For example, a continuous stream was interrupted.\n","sig":null,"attributes":[{"value":"/ Returned when write caused an underflow condition.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11132,"byte_end":11186,"line_start":40,"line_end":40,"column_start":5,"column_end":59}},{"value":"/ For example, a continuous stream was interrupted.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11191,"byte_end":11244,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":518},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11326,"byte_end":11331,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"name":"Other","qualname":"::device::ErrorCode::Other","value":"ErrorCode::Other","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Error without a specific code, see error string\n","sig":null,"attributes":[{"value":"/ Error without a specific code, see error string","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11270,"byte_end":11321,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11361,"byte_end":11376,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::device::ErrorCode::__Nonexhaustive","value":"ErrorCode::__Nonexhaustive","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":496},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10447,"byte_end":10456,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"ErrorCode","qualname":"::device::ErrorCode","value":"pub enum ErrorCode {\n    Timeout = ,\n    StreamError = ,\n    Corruption = ,\n    Overflow = ,\n    NotSupported = ,\n    TimeError = ,\n    Underflow = ,\n    Other = ,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521}],"decl_id":null,"docs":" An error code from SoapySDR\n","sig":null,"attributes":[{"value":"/ An error code from SoapySDR","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10342,"byte_end":10373,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"repr(i32)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":10374,"byte_end":10386,"line_start":15,"line_end":15,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12078,"byte_end":12083,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Error","qualname":"::device::Error","value":"Error { code, message }","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" An error type combining an error code and a string message\n","sig":null,"attributes":[{"value":"/ An error type combining an error code and a string message","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11974,"byte_end":12036,"line_start":66,"line_end":66,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":538},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12094,"byte_end":12098,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"code","qualname":"::device::Error::code","value":"device::ErrorCode","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12119,"byte_end":12126,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"message","qualname":"::device::Error::message","value":"std::string::String","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":548},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12561,"byte_end":12563,"line_start":90,"line_end":90,"column_start":5,"column_end":7},"name":"Tx","qualname":"::device::Direction::Tx","value":"Direction::Tx","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" Transmit direction\n","sig":null,"attributes":[{"value":"/ Transmit direction","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12534,"byte_end":12556,"line_start":89,"line_end":89,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12611,"byte_end":12613,"line_start":93,"line_end":93,"column_start":5,"column_end":7},"name":"Rx","qualname":"::device::Direction::Rx","value":"Direction::Rx","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" Receive direction\n","sig":null,"attributes":[{"value":"/ Receive direction","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12585,"byte_end":12606,"line_start":92,"line_end":92,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":547},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12518,"byte_end":12527,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"Direction","qualname":"::device::Direction","value":"pub enum Direction { Tx = , Rx = , }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":551}],"decl_id":null,"docs":" Transmit or Receive\n","sig":null,"attributes":[{"value":"/ Transmit or Receive","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12421,"byte_end":12444,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"repr(u32)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12445,"byte_end":12457,"line_start":86,"line_end":86,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":13119,"byte_end":13125,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"Device","qualname":"::device::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":" An opened SDR hardware device.\n","sig":null,"attributes":[{"value":"/ An opened SDR hardware device.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":13056,"byte_end":13090,"line_start":118,"line_end":118,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16111,"byte_end":16120,"line_start":229,"line_end":229,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::device::enumerate","value":"pub fn enumerate<A: Into<Args>>(A) -> Result<Vec<Args>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Enumerate a list of available devices on the system.","sig":null,"attributes":[{"value":"/ Enumerate a list of available devices on the system.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15725,"byte_end":15781,"line_start":216,"line_end":216,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15782,"byte_end":15785,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ `args`: a set of arguments to filter the devices returned.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15786,"byte_end":15848,"line_start":218,"line_end":218,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15849,"byte_end":15852,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ # Example (list all devices)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15853,"byte_end":15885,"line_start":220,"line_end":220,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15886,"byte_end":15893,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/ for dev in soapysdr::enumerate(\"\").unwrap() {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15894,"byte_end":15943,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/     println!(\"{}\", dev);","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15944,"byte_end":15972,"line_start":223,"line_end":223,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15973,"byte_end":15978,"line_start":224,"line_end":224,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15979,"byte_end":15986,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15987,"byte_end":15990,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ This function returns a list of argument lists that can be passed to `Device::new()` to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":15991,"byte_end":16082,"line_start":227,"line_end":227,"column_start":1,"column_end":92}},{"value":"/ open the device.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16083,"byte_end":16103,"line_start":228,"line_end":228,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16697,"byte_end":16700,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"new","qualname":"<Device>::new","value":"pub fn new<A: Into<Args>>(A) -> Result<Device, Error>","parent":null,"children":[],"decl_id":null,"docs":" Find and open a device matching a set of filters.","sig":null,"attributes":[{"value":"/ Find and open a device matching a set of filters.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16517,"byte_end":16570,"line_start":240,"line_end":240,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16575,"byte_end":16578,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16583,"byte_end":16596,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16601,"byte_end":16608,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ let mut d = soapysdr::Device::new(\"type=null\").unwrap();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16613,"byte_end":16673,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16678,"byte_end":16685,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16935,"byte_end":16946,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"null_device","qualname":"<Device>::null_device","value":"pub fn null_device() -> Device","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17204,"byte_end":17214,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"driver_key","qualname":"<Device>::driver_key","value":"pub fn driver_key(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" A key that uniquely identifies the device driver.","sig":null,"attributes":[{"value":"/ A key that uniquely identifies the device driver.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17014,"byte_end":17067,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17072,"byte_end":17075,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This key identifies the underlying implementation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17080,"byte_end":17134,"line_start":260,"line_end":260,"column_start":5,"column_end":59}},{"value":"/ Several variants of a product may share a driver.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17139,"byte_end":17192,"line_start":261,"line_end":261,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17517,"byte_end":17529,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"hardware_key","qualname":"<Device>::hardware_key","value":"pub fn hardware_key(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" A key that uniquely identifies the hardware.","sig":null,"attributes":[{"value":"/ A key that uniquely identifies the hardware.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17358,"byte_end":17406,"line_start":268,"line_end":268,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17411,"byte_end":17414,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This key should be meaningful to the user to optimize for the underlying hardware.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17419,"byte_end":17505,"line_start":270,"line_end":270,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17971,"byte_end":17984,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"hardware_info","qualname":"<Device>::hardware_info","value":"pub fn hardware_info(&Self) -> Result<Args, Error>","parent":null,"children":[],"decl_id":null,"docs":" Query a dictionary of available device information.","sig":null,"attributes":[{"value":"/ Query a dictionary of available device information.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17673,"byte_end":17728,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17733,"byte_end":17736,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This dictionary can any number of values like","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17741,"byte_end":17790,"line_start":279,"line_end":279,"column_start":5,"column_end":54}},{"value":"/ vendor name, product name, revisions, serials...","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17795,"byte_end":17847,"line_start":280,"line_end":280,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17852,"byte_end":17855,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This information can be displayed to the user","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17860,"byte_end":17909,"line_start":282,"line_end":282,"column_start":5,"column_end":54}},{"value":"/ to help identify the instantiated device.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":17914,"byte_end":17959,"line_start":283,"line_end":283,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18207,"byte_end":18223,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"name":"frontend_mapping","qualname":"<Device>::frontend_mapping","value":"pub fn frontend_mapping(&Self, Direction) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the mapping configuration string.\n","sig":null,"attributes":[{"value":"/ Get the mapping configuration string.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18154,"byte_end":18195,"line_start":290,"line_end":290,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18565,"byte_end":18585,"line_start":300,"line_end":300,"column_start":12,"column_end":32},"name":"set_frontend_mapping","qualname":"<Device>::set_frontend_mapping","value":"pub fn set_frontend_mapping<S: Into<Vec<u8>>>(&Self, Direction, S)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the frontend mapping of available DSP units to RF frontends.","sig":null,"attributes":[{"value":"/ Set the frontend mapping of available DSP units to RF frontends.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18413,"byte_end":18481,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18486,"byte_end":18489,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This controls channel mapping and channel availability.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18494,"byte_end":18553,"line_start":299,"line_end":299,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18993,"byte_end":19005,"line_start":309,"line_end":309,"column_start":12,"column_end":24},"name":"num_channels","qualname":"<Device>::num_channels","value":"pub fn num_channels(&Self, Direction) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a number of channels given the streaming direction\n","sig":null,"attributes":[{"value":"/ Get a number of channels given the streaming direction","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":18923,"byte_end":18981,"line_start":308,"line_end":308,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19250,"byte_end":19262,"line_start":316,"line_end":316,"column_start":12,"column_end":24},"name":"channel_info","qualname":"<Device>::channel_info","value":"pub fn channel_info(&Self, Direction, usize) -> Result<Args, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get channel info given the streaming direction\n","sig":null,"attributes":[{"value":"/ Get channel info given the streaming direction","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19188,"byte_end":19238,"line_start":315,"line_end":315,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19642,"byte_end":19653,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"full_duplex","qualname":"<Device>::full_duplex","value":"pub fn full_duplex(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Find out if the specified channel is full or half duplex.","sig":null,"attributes":[{"value":"/ Find out if the specified channel is full or half duplex.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19496,"byte_end":19557,"line_start":322,"line_end":322,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19562,"byte_end":19565,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `true` for full duplex, `false` for half duplex.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19570,"byte_end":19630,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19920,"byte_end":19934,"line_start":332,"line_end":332,"column_start":12,"column_end":26},"name":"stream_formats","qualname":"<Device>::stream_formats","value":"pub fn stream_formats(&Self, Direction, usize) -> Result<Vec<Format>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Query a list of the available stream formats.\n","sig":null,"attributes":[{"value":"/ Query a list of the available stream formats.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":19859,"byte_end":19908,"line_start":331,"line_end":331,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":20735,"byte_end":20755,"line_start":349,"line_end":349,"column_start":12,"column_end":32},"name":"native_stream_format","qualname":"<Device>::native_stream_format","value":"pub fn native_stream_format(&Self, Direction, usize)\n-> Result<(Format, f64), Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the hardware's native stream format and full-scale value for this channel.","sig":null,"attributes":[{"value":"/ Get the hardware's native stream format and full-scale value for this channel.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":20501,"byte_end":20583,"line_start":345,"line_end":345,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":20588,"byte_end":20591,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This is the format used by the underlying transport layer,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":20596,"byte_end":20658,"line_start":347,"line_end":347,"column_start":5,"column_end":67}},{"value":"/ and the direct buffer access API calls (when available).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":20663,"byte_end":20723,"line_start":348,"line_end":348,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":21397,"byte_end":21413,"line_start":363,"line_end":363,"column_start":12,"column_end":28},"name":"stream_args_info","qualname":"<Device>::stream_args_info","value":"pub fn stream_args_info(&Self, Direction, usize)\n-> Result<Vec<ArgInfo>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Query the argument info description for stream args.\n","sig":null,"attributes":[{"value":"/ Query the argument info description for stream args.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":21329,"byte_end":21385,"line_start":362,"line_end":362,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":21719,"byte_end":21728,"line_start":370,"line_end":370,"column_start":12,"column_end":21},"name":"rx_stream","qualname":"<Device>::rx_stream","value":"pub fn rx_stream<E: StreamSample>(&Self, &[usize])\n-> Result<RxStream<E>, Error>","parent":null,"children":[],"decl_id":null,"docs":"  Initialize an RX stream given a list of channels\n","sig":null,"attributes":[{"value":"/  Initialize an RX stream given a list of channels","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":21654,"byte_end":21707,"line_start":369,"line_end":369,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":21945,"byte_end":21959,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"rx_stream_args","qualname":"<Device>::rx_stream_args","value":"pub fn rx_stream_args<E: StreamSample, A: Into<Args>>(&Self, &[usize], A)\n-> Result<RxStream<E>, Error>","parent":null,"children":[],"decl_id":null,"docs":"  Initialize an RX stream given a list of channels and stream arguments.\n","sig":null,"attributes":[{"value":"/  Initialize an RX stream given a list of channels and stream arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":21858,"byte_end":21933,"line_start":374,"line_end":374,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":22816,"byte_end":22825,"line_start":397,"line_end":397,"column_start":12,"column_end":21},"name":"tx_stream","qualname":"<Device>::tx_stream","value":"pub fn tx_stream<E: StreamSample>(&Self, &[usize])\n-> Result<TxStream<E>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize a TX stream given a list of channels and stream arguments.\n","sig":null,"attributes":[{"value":"/ Initialize a TX stream given a list of channels and stream arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":22731,"byte_end":22804,"line_start":396,"line_end":396,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":23040,"byte_end":23054,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"tx_stream_args","qualname":"<Device>::tx_stream_args","value":"pub fn tx_stream_args<E: StreamSample, A: Into<Args>>(&Self, &[usize], A)\n-> Result<TxStream<E>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize a TX stream given a list of channels and stream arguments.\n","sig":null,"attributes":[{"value":"/ Initialize a TX stream given a list of channels and stream arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":22955,"byte_end":23028,"line_start":401,"line_end":401,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":23848,"byte_end":23856,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"antennas","qualname":"<Device>::antennas","value":"pub fn antennas(&Self, Direction, usize) -> Result<Vec<String>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of available antennas to select on a given chain.\n","sig":null,"attributes":[{"value":"/ Get a list of available antennas to select on a given chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":23772,"byte_end":23836,"line_start":421,"line_end":421,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24146,"byte_end":24157,"line_start":429,"line_end":429,"column_start":12,"column_end":23},"name":"set_antenna","qualname":"<Device>::set_antenna","value":"pub fn set_antenna<S: Into<Vec<u8>>>(&Self, Direction, usize, S)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the selected antenna on a chain.\n","sig":null,"attributes":[{"value":"/ Set the selected antenna on a chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24094,"byte_end":24134,"line_start":428,"line_end":428,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24557,"byte_end":24564,"line_start":438,"line_end":438,"column_start":12,"column_end":19},"name":"antenna","qualname":"<Device>::antenna","value":"pub fn antenna(&Self, Direction, usize) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the selected antenna on a chain.\n","sig":null,"attributes":[{"value":"/ Get the selected antenna on a chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24505,"byte_end":24545,"line_start":437,"line_end":437,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24911,"byte_end":24929,"line_start":447,"line_end":447,"column_start":12,"column_end":30},"name":"has_dc_offset_mode","qualname":"<Device>::has_dc_offset_mode","value":"pub fn has_dc_offset_mode(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Does the device support automatic DC offset corrections?","sig":null,"attributes":[{"value":"/ Does the device support automatic DC offset corrections?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24771,"byte_end":24831,"line_start":444,"line_end":444,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24836,"byte_end":24839,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Returns true if automatic corrections are supported","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":24844,"byte_end":24899,"line_start":446,"line_end":446,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25208,"byte_end":25226,"line_start":454,"line_end":454,"column_start":12,"column_end":30},"name":"set_dc_offset_mode","qualname":"<Device>::set_dc_offset_mode","value":"pub fn set_dc_offset_mode(&Self, Direction, usize, bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic DC offset corrections mode.\n","sig":null,"attributes":[{"value":"/ Enable or disable automatic DC offset corrections mode.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25137,"byte_end":25196,"line_start":453,"line_end":453,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25543,"byte_end":25557,"line_start":462,"line_end":462,"column_start":12,"column_end":26},"name":"dc_offset_mode","qualname":"<Device>::dc_offset_mode","value":"pub fn dc_offset_mode(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if automatic DC offset mode is enabled\n","sig":null,"attributes":[{"value":"/ Returns true if automatic DC offset mode is enabled","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25476,"byte_end":25531,"line_start":461,"line_end":461,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25901,"byte_end":25914,"line_start":471,"line_end":471,"column_start":12,"column_end":25},"name":"has_dc_offset","qualname":"<Device>::has_dc_offset","value":"pub fn has_dc_offset(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Does the device support frontend DC offset corrections?","sig":null,"attributes":[{"value":"/ Does the device support frontend DC offset corrections?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25765,"byte_end":25824,"line_start":468,"line_end":468,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25829,"byte_end":25832,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Returns true if manual corrections are supported","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":25837,"byte_end":25889,"line_start":470,"line_end":470,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26260,"byte_end":26273,"line_start":480,"line_end":480,"column_start":12,"column_end":25},"name":"set_dc_offset","qualname":"<Device>::set_dc_offset","value":"pub fn set_dc_offset(&Self, Direction, usize, f64, f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the frontend DC offset correction.","sig":null,"attributes":[{"value":"/ Set the frontend DC offset correction.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26118,"byte_end":26160,"line_start":477,"line_end":477,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26165,"byte_end":26168,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ The offsets are configured for each of the I and Q components (1.0 max)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26173,"byte_end":26248,"line_start":479,"line_end":479,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26614,"byte_end":26623,"line_start":488,"line_end":488,"column_start":12,"column_end":21},"name":"dc_offset","qualname":"<Device>::dc_offset","value":"pub fn dc_offset(&Self, Direction, usize) -> Result<(f64, f64), Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the frontend DC offset correction for (I, Q), 1.0 max\n","sig":null,"attributes":[{"value":"/ Get the frontend DC offset correction for (I, Q), 1.0 max","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26541,"byte_end":26602,"line_start":487,"line_end":487,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27098,"byte_end":27112,"line_start":500,"line_end":500,"column_start":12,"column_end":26},"name":"has_iq_balance","qualname":"<Device>::has_iq_balance","value":"pub fn has_iq_balance(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Does the device support frontend IQ balance correction?","sig":null,"attributes":[{"value":"/ Does the device support frontend IQ balance correction?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":26957,"byte_end":27016,"line_start":497,"line_end":497,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27021,"byte_end":27024,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Returns true if IQ balance corrections are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27029,"byte_end":27086,"line_start":499,"line_end":499,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27461,"byte_end":27475,"line_start":509,"line_end":509,"column_start":12,"column_end":26},"name":"set_iq_balance","qualname":"<Device>::set_iq_balance","value":"pub fn set_iq_balance(&Self, Direction, usize, f64, f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the frontend IQ balance correction","sig":null,"attributes":[{"value":"/ Set the frontend IQ balance correction","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27317,"byte_end":27359,"line_start":506,"line_end":506,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27364,"byte_end":27367,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ The correction is configured for each of the I and Q components (1.0 max)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27372,"byte_end":27449,"line_start":508,"line_end":508,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27822,"byte_end":27832,"line_start":517,"line_end":517,"column_start":12,"column_end":22},"name":"iq_balance","qualname":"<Device>::iq_balance","value":"pub fn iq_balance(&Self, Direction, usize) -> Result<(f64, f64), Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the frontend IQ balance correction for (I, Q), 1.0 max\n","sig":null,"attributes":[{"value":"/ Get the frontend IQ balance correction for (I, Q), 1.0 max","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":27748,"byte_end":27810,"line_start":516,"line_end":516,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28281,"byte_end":28291,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"list_gains","qualname":"<Device>::list_gains","value":"pub fn list_gains(&Self, Direction, usize) -> Result<Vec<String>, Error>","parent":null,"children":[],"decl_id":null,"docs":" List available amplification elements.","sig":null,"attributes":[{"value":"/ List available amplification elements.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28167,"byte_end":28209,"line_start":526,"line_end":526,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28214,"byte_end":28217,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Elements should be in order RF to baseband.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28222,"byte_end":28269,"line_start":528,"line_end":528,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28589,"byte_end":28602,"line_start":536,"line_end":536,"column_start":12,"column_end":25},"name":"has_gain_mode","qualname":"<Device>::has_gain_mode","value":"pub fn has_gain_mode(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Does the device support automatic gain control?\n","sig":null,"attributes":[{"value":"/ Does the device support automatic gain control?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28526,"byte_end":28577,"line_start":535,"line_end":535,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28863,"byte_end":28876,"line_start":543,"line_end":543,"column_start":12,"column_end":25},"name":"set_gain_mode","qualname":"<Device>::set_gain_mode","value":"pub fn set_gain_mode(&Self, Direction, usize, bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic gain control.\n","sig":null,"attributes":[{"value":"/ Enable or disable automatic gain control.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":28806,"byte_end":28851,"line_start":542,"line_end":542,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29187,"byte_end":29196,"line_start":551,"line_end":551,"column_start":12,"column_end":21},"name":"gain_mode","qualname":"<Device>::gain_mode","value":"pub fn gain_mode(&Self, Direction, usize) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if automatic gain control is enabled\n","sig":null,"attributes":[{"value":"/ Returns true if automatic gain control is enabled","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29122,"byte_end":29175,"line_start":550,"line_end":550,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29601,"byte_end":29609,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"set_gain","qualname":"<Device>::set_gain","value":"pub fn set_gain(&Self, Direction, usize, f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the overall amplification in a chain.","sig":null,"attributes":[{"value":"/ Set the overall amplification in a chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29400,"byte_end":29445,"line_start":557,"line_end":557,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29450,"byte_end":29453,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The gain will be distributed automatically across available elements.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29458,"byte_end":29531,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29536,"byte_end":29539,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ `gain`: the new amplification value in dB","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29544,"byte_end":29589,"line_start":561,"line_end":561,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29916,"byte_end":29920,"line_start":570,"line_end":570,"column_start":12,"column_end":16},"name":"gain","qualname":"<Device>::gain","value":"pub fn gain(&Self, Direction, usize) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the overall value of the gain elements in a chain in dB.\n","sig":null,"attributes":[{"value":"/ Get the overall value of the gain elements in a chain in dB.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":29840,"byte_end":29904,"line_start":569,"line_end":569,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30181,"byte_end":30191,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"gain_range","qualname":"<Device>::gain_range","value":"pub fn gain_range(&Self, Direction, usize) -> Result<Range, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the overall range of possible gain values.\n","sig":null,"attributes":[{"value":"/ Get the overall range of possible gain values.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30119,"byte_end":30169,"line_start":576,"line_end":576,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30626,"byte_end":30642,"line_start":588,"line_end":588,"column_start":12,"column_end":28},"name":"set_gain_element","qualname":"<Device>::set_gain_element","value":"pub fn set_gain_element<S: Into<Vec<u8>>>(&Self, Direction, usize, S, f64)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a amplification element in a chain.","sig":null,"attributes":[{"value":"/ Set the value of a amplification element in a chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30397,"byte_end":30453,"line_start":583,"line_end":583,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30458,"byte_end":30461,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30466,"byte_end":30481,"line_start":585,"line_end":585,"column_start":5,"column_end":20}},{"value":"/ * `name`: the name of an amplification element from `Device::list_gains`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30486,"byte_end":30562,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ * `gain`: the new amplification value in dB","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":30567,"byte_end":30614,"line_start":587,"line_end":587,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":31094,"byte_end":31106,"line_start":597,"line_end":597,"column_start":12,"column_end":24},"name":"gain_element","qualname":"<Device>::gain_element","value":"pub fn gain_element<S: Into<Vec<u8>>>(&Self, Direction, usize, S)\n-> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of an individual amplification element in a chain in dB.\n","sig":null,"attributes":[{"value":"/ Get the value of an individual amplification element in a chain in dB.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":31008,"byte_end":31082,"line_start":596,"line_end":596,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":31517,"byte_end":31535,"line_start":605,"line_end":605,"column_start":12,"column_end":30},"name":"gain_element_range","qualname":"<Device>::gain_element_range","value":"pub fn gain_element_range<S: Into<Vec<u8>>>(&Self, Direction, usize, S)\n-> Result<Range, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of possible gain values for a specific element.\n","sig":null,"attributes":[{"value":"/ Get the range of possible gain values for a specific element.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":31440,"byte_end":31505,"line_start":604,"line_end":604,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":31935,"byte_end":31950,"line_start":613,"line_end":613,"column_start":12,"column_end":27},"name":"frequency_range","qualname":"<Device>::frequency_range","value":"pub fn frequency_range(&Self, Direction, usize) -> Result<Vec<Range>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the ranges of overall frequency values.\n","sig":null,"attributes":[{"value":"/ Get the ranges of overall frequency values.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":31876,"byte_end":31923,"line_start":612,"line_end":612,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32437,"byte_end":32446,"line_start":625,"line_end":625,"column_start":12,"column_end":21},"name":"frequency","qualname":"<Device>::frequency","value":"pub fn frequency(&Self, Direction, usize) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the overall center frequency of the chain.","sig":null,"attributes":[{"value":"/ Get the overall center frequency of the chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32185,"byte_end":32235,"line_start":619,"line_end":619,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32240,"byte_end":32243,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/   - For RX, this specifies the down-conversion frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32248,"byte_end":32309,"line_start":621,"line_end":621,"column_start":5,"column_end":66}},{"value":"/   - For TX, this specifies the up-conversion frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32314,"byte_end":32373,"line_start":622,"line_end":622,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32378,"byte_end":32381,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Returns the center frequency in Hz.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32386,"byte_end":32425,"line_start":624,"line_end":624,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33964,"byte_end":33977,"line_start":654,"line_end":654,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Device>::set_frequency","value":"pub fn set_frequency<A: Into<Args>>(&Self, Direction, usize, f64, A)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the center frequency of the chain.","sig":null,"attributes":[{"value":"/ Set the center frequency of the chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32650,"byte_end":32692,"line_start":631,"line_end":631,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32697,"byte_end":32700,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/   - For RX, this specifies the down-conversion frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32705,"byte_end":32766,"line_start":633,"line_end":633,"column_start":5,"column_end":66}},{"value":"/   - For TX, this specifies the up-conversion frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32771,"byte_end":32830,"line_start":634,"line_end":634,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32835,"byte_end":32838,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The default implementation of `set_frequency` will tune the \"RF\"","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32843,"byte_end":32911,"line_start":636,"line_end":636,"column_start":5,"column_end":73}},{"value":"/ component as close as possible to the requested center frequency in Hz.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32916,"byte_end":32991,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ Tuning inaccuracies will be compensated for with the \"BB\" component.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":32996,"byte_end":33068,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33073,"byte_end":33076,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ The `args` can be used to augment the tuning algorithm.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33081,"byte_end":33140,"line_start":640,"line_end":640,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33145,"byte_end":33148,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/   - Use `\"OFFSET\"` to specify an \"RF\" tuning offset,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33153,"byte_end":33209,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/     usually with the intention of moving the LO out of the passband.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33214,"byte_end":33286,"line_start":643,"line_end":643,"column_start":5,"column_end":77}},{"value":"/     The offset will be compensated for using the \"BB\" component.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33291,"byte_end":33359,"line_start":644,"line_end":644,"column_start":5,"column_end":73}},{"value":"/   - Use the name of a component for the key and a frequency in Hz","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33364,"byte_end":33433,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/     as the value (any format) to enforce a specific frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33438,"byte_end":33504,"line_start":646,"line_end":646,"column_start":5,"column_end":71}},{"value":"/     The other components will be tuned with compensation","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33509,"byte_end":33569,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/     to achieve the specified overall frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33574,"byte_end":33625,"line_start":648,"line_end":648,"column_start":5,"column_end":56}},{"value":"/   - Use the name of a component for the key and the value `\"IGNORE\"`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33630,"byte_end":33702,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/     so that the tuning algorithm will avoid altering the component.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33707,"byte_end":33778,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/   - Vendor specific implementations can also use the same args to augment","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33783,"byte_end":33860,"line_start":651,"line_end":651,"column_start":5,"column_end":82}},{"value":"/     tuning in other ways such as specifying fractional vs integer N tuning.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33865,"byte_end":33944,"line_start":652,"line_end":652,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":33949,"byte_end":33952,"line_start":653,"line_end":653,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":34396,"byte_end":34412,"line_start":664,"line_end":664,"column_start":12,"column_end":28},"name":"list_frequencies","qualname":"<Device>::list_frequencies","value":"pub fn list_frequencies(&Self, Direction, usize) -> Result<Vec<String>, Error>","parent":null,"children":[],"decl_id":null,"docs":" List available tunable elements in the chain.","sig":null,"attributes":[{"value":"/ List available tunable elements in the chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":34275,"byte_end":34324,"line_start":661,"line_end":661,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":34329,"byte_end":34332,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Elements should be in order RF to baseband.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":34337,"byte_end":34384,"line_start":663,"line_end":663,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":34727,"byte_end":34752,"line_start":671,"line_end":671,"column_start":12,"column_end":37},"name":"component_frequency_range","qualname":"<Device>::component_frequency_range","value":"pub fn component_frequency_range<S: Into<Vec<u8>>>(&Self, Direction, usize, S)\n-> Result<Vec<Range>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of tunable values for the specified element.\n","sig":null,"attributes":[{"value":"/ Get the range of tunable values for the specified element.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":34653,"byte_end":34715,"line_start":670,"line_end":670,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35197,"byte_end":35216,"line_start":679,"line_end":679,"column_start":12,"column_end":31},"name":"component_frequency","qualname":"<Device>::component_frequency","value":"pub fn component_frequency<S: Into<Vec<u8>>>(&Self, Direction, usize, S)\n-> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the frequency of a tunable element in the chain.\n","sig":null,"attributes":[{"value":"/ Get the frequency of a tunable element in the chain.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35129,"byte_end":35185,"line_start":678,"line_end":678,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":36002,"byte_end":36025,"line_start":697,"line_end":697,"column_start":12,"column_end":35},"name":"set_component_frequency","qualname":"<Device>::set_component_frequency","value":"pub fn set_component_frequency<S: Into<Vec<u8>>,\n                               A: Into<Args>>(&Self, Direction, usize, S, f64,\n                                              A) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tune the center frequency of the specified element.","sig":null,"attributes":[{"value":"/ Tune the center frequency of the specified element.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35562,"byte_end":35617,"line_start":686,"line_end":686,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35622,"byte_end":35625,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/   - For RX, this specifies the down-conversion frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35630,"byte_end":35691,"line_start":688,"line_end":688,"column_start":5,"column_end":66}},{"value":"/   - For TX, this specifies the up-conversion frequency.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35696,"byte_end":35755,"line_start":689,"line_end":689,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35760,"byte_end":35763,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Recommended names used to represent tunable components:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35768,"byte_end":35827,"line_start":691,"line_end":691,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35832,"byte_end":35835,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/   - \"CORR\" - freq error correction in PPM","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35840,"byte_end":35885,"line_start":693,"line_end":693,"column_start":5,"column_end":50}},{"value":"/   - \"RF\" - frequency of the RF frontend","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35890,"byte_end":35933,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/   - \"BB\" - frequency of the baseband DSP","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35938,"byte_end":35982,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":35987,"byte_end":35990,"line_start":696,"line_end":696,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":36531,"byte_end":36550,"line_start":706,"line_end":706,"column_start":12,"column_end":31},"name":"frequency_args_info","qualname":"<Device>::frequency_args_info","value":"pub fn frequency_args_info(&Self, Direction, usize)\n-> Result<Vec<ArgInfo>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Query the argument info description for tune args.\n","sig":null,"attributes":[{"value":"/ Query the argument info description for tune args.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":36465,"byte_end":36519,"line_start":705,"line_end":705,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":36874,"byte_end":36885,"line_start":713,"line_end":713,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<Device>::sample_rate","value":"pub fn sample_rate(&Self, Direction, usize) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the baseband sample rate of the chain in samples per second.\n","sig":null,"attributes":[{"value":"/ Get the baseband sample rate of the chain in samples per second.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":36794,"byte_end":36862,"line_start":712,"line_end":712,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":37170,"byte_end":37185,"line_start":720,"line_end":720,"column_start":12,"column_end":27},"name":"set_sample_rate","qualname":"<Device>::set_sample_rate","value":"pub fn set_sample_rate(&Self, Direction, usize, f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the baseband sample rate of the chain in samples per second.\n","sig":null,"attributes":[{"value":"/ Set the baseband sample rate of the chain in samples per second.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":37090,"byte_end":37158,"line_start":719,"line_end":719,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":37486,"byte_end":37507,"line_start":728,"line_end":728,"column_start":12,"column_end":33},"name":"get_sample_rate_range","qualname":"<Device>::get_sample_rate_range","value":"pub fn get_sample_rate_range(&Self, Direction, usize)\n-> Result<Vec<Range>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of possible baseband sample rates.\n","sig":null,"attributes":[{"value":"/ Get the range of possible baseband sample rates.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":37422,"byte_end":37474,"line_start":727,"line_end":727,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":37807,"byte_end":37816,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"bandwidth","qualname":"<Device>::bandwidth","value":"pub fn bandwidth(&Self, Direction, usize) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the baseband filter width of the chain in Hz\n","sig":null,"attributes":[{"value":"/ Get the baseband filter width of the chain in Hz","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":37743,"byte_end":37795,"line_start":734,"line_end":734,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38084,"byte_end":38097,"line_start":742,"line_end":742,"column_start":12,"column_end":25},"name":"set_bandwidth","qualname":"<Device>::set_bandwidth","value":"pub fn set_bandwidth(&Self, Direction, usize, f64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the baseband filter width of the chain in Hz\n","sig":null,"attributes":[{"value":"/ Set the baseband filter width of the chain in Hz","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38020,"byte_end":38072,"line_start":741,"line_end":741,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38409,"byte_end":38424,"line_start":750,"line_end":750,"column_start":12,"column_end":27},"name":"bandwidth_range","qualname":"<Device>::bandwidth_range","value":"pub fn bandwidth_range(&Self, Direction, usize) -> Result<Vec<Range>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the ranges of possible baseband filter widths.\n","sig":null,"attributes":[{"value":"/ Get the ranges of possible baseband filter widths.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38343,"byte_end":38397,"line_start":749,"line_end":749,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38692,"byte_end":38709,"line_start":757,"line_end":757,"column_start":12,"column_end":29},"name":"list_time_sources","qualname":"<Device>::list_time_sources","value":"pub fn list_time_sources(&Self) -> Result<Vec<String>, Error>","parent":null,"children":[],"decl_id":null,"docs":" List time sources\n","sig":null,"attributes":[{"value":"/ List time sources","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38659,"byte_end":38680,"line_start":756,"line_end":756,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38908,"byte_end":38923,"line_start":762,"line_end":762,"column_start":12,"column_end":27},"name":"get_time_source","qualname":"<Device>::get_time_source","value":"pub fn get_time_source(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the current time source\n","sig":null,"attributes":[{"value":"/ Get the current time source","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":38865,"byte_end":38896,"line_start":761,"line_end":761,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39091,"byte_end":39106,"line_start":767,"line_end":767,"column_start":12,"column_end":27},"name":"set_time_source","qualname":"<Device>::set_time_source","value":"pub fn set_time_source<S: Into<Vec<u8>>>(&Self, S) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the current time source\n","sig":null,"attributes":[{"value":"/ Set the current time source","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39048,"byte_end":39079,"line_start":766,"line_end":766,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39628,"byte_end":39645,"line_start":778,"line_end":778,"column_start":12,"column_end":29},"name":"has_hardware_time","qualname":"<Device>::has_hardware_time","value":"pub fn has_hardware_time(&Self, Option<&str>) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Check whether there is a given hardware time source.\n Hardware time sources are not the same as time sources (at least for UHD Devices)\n UHD supported hw time sources: \"PPS\" or \"\" (i.e. None)\n","sig":null,"attributes":[{"value":"/ Check whether there is a given hardware time source.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39407,"byte_end":39463,"line_start":775,"line_end":775,"column_start":5,"column_end":61}},{"value":"/ Hardware time sources are not the same as time sources (at least for UHD Devices)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39468,"byte_end":39553,"line_start":776,"line_end":776,"column_start":5,"column_end":90}},{"value":"/ UHD supported hw time sources: \"PPS\" or \"\" (i.e. None)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39558,"byte_end":39616,"line_start":777,"line_end":777,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":40022,"byte_end":40039,"line_start":790,"line_end":790,"column_start":12,"column_end":29},"name":"get_hardware_time","qualname":"<Device>::get_hardware_time","value":"pub fn get_hardware_time(&Self, Option<&str>) -> Result<i64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the current timestamp in ns\n","sig":null,"attributes":[{"value":"/ Get the current timestamp in ns","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":39975,"byte_end":40010,"line_start":789,"line_end":789,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":40493,"byte_end":40510,"line_start":803,"line_end":803,"column_start":12,"column_end":29},"name":"set_hardware_time","qualname":"<Device>::set_hardware_time","value":"pub fn set_hardware_time(&Self, Option<&str>, i64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the current hardware timestmap for the given source\n UHD supported hardware times: \"CMD\",\"PPS\",\"UNKNOWN_PPS\"\n","sig":null,"attributes":[{"value":"/ Set the current hardware timestmap for the given source","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":40358,"byte_end":40417,"line_start":801,"line_end":801,"column_start":5,"column_end":64}},{"value":"/ UHD supported hardware times: \"CMD\",\"PPS\",\"UNKNOWN_PPS\"","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":40422,"byte_end":40481,"line_start":802,"line_end":802,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":40884,"byte_end":40902,"line_start":816,"line_end":816,"column_start":12,"column_end":30},"name":"list_clock_sources","qualname":"<Device>::list_clock_sources","value":"pub fn list_clock_sources(&Self) -> Result<Vec<String>, Error>","parent":null,"children":[],"decl_id":null,"docs":" List clock sources\n","sig":null,"attributes":[{"value":"/ List clock sources","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":40850,"byte_end":40872,"line_start":815,"line_end":815,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":41103,"byte_end":41119,"line_start":821,"line_end":821,"column_start":12,"column_end":28},"name":"get_clock_source","qualname":"<Device>::get_clock_source","value":"pub fn get_clock_source(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the current clock source\n","sig":null,"attributes":[{"value":"/ Get the current clock source","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":41059,"byte_end":41091,"line_start":820,"line_end":820,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":41289,"byte_end":41305,"line_start":826,"line_end":826,"column_start":12,"column_end":28},"name":"set_clock_source","qualname":"<Device>::set_clock_source","value":"pub fn set_clock_source<S: Into<Vec<u8>>>(&Self, S) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the current clock source\n","sig":null,"attributes":[{"value":"/ Set the current clock source","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":41245,"byte_end":41277,"line_start":825,"line_end":825,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":41689,"byte_end":41702,"line_start":839,"line_end":839,"column_start":12,"column_end":25},"name":"write_setting","qualname":"<Device>::write_setting","value":"pub fn write_setting<S: Into<Vec<u8>>>(&Self, S, S) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Write a setting\n","sig":null,"attributes":[{"value":"/ Write a setting","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":41658,"byte_end":41677,"line_start":838,"line_end":838,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42123,"byte_end":42135,"line_start":849,"line_end":849,"column_start":12,"column_end":24},"name":"read_setting","qualname":"<Device>::read_setting","value":"pub fn read_setting<S: Into<Vec<u8>>>(&Self, S) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Read a setting\n","sig":null,"attributes":[{"value":"/ Read a setting","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42093,"byte_end":42111,"line_start":848,"line_end":848,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42689,"byte_end":42697,"line_start":872,"line_end":872,"column_start":12,"column_end":20},"name":"RxStream","qualname":"::device::RxStream","value":"RxStream {  }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"decl_id":null,"docs":" A stream open for receiving.","sig":null,"attributes":[{"value":"/ A stream open for receiving.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42469,"byte_end":42501,"line_start":866,"line_end":866,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42502,"byte_end":42505,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ To obtain a RxStream, call [Device::rx_stream]. The type parameter `E` represents the type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42506,"byte_end":42600,"line_start":868,"line_end":868,"column_start":1,"column_end":95}},{"value":"/ of this stream's samples.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42601,"byte_end":42630,"line_start":869,"line_end":869,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42631,"byte_end":42634,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ Streams may involve multiple channels.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":42635,"byte_end":42677,"line_start":871,"line_end":871,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43659,"byte_end":43662,"line_start":902,"line_end":902,"column_start":12,"column_end":15},"name":"mtu","qualname":"<RxStream<E>>::mtu","value":"pub fn mtu(&Self) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the stream's maximum transmission unit (MTU) in number of elements.","sig":null,"attributes":[{"value":"/ Get the stream's maximum transmission unit (MTU) in number of elements.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43334,"byte_end":43409,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43414,"byte_end":43417,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ The MTU specifies the maximum payload transfer in a stream operation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43422,"byte_end":43495,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ This value can be used as a stream buffer allocation size that can","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43500,"byte_end":43570,"line_start":900,"line_end":900,"column_start":5,"column_end":75}},{"value":"/ best optimize throughput given the underlying stream implementation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43575,"byte_end":43647,"line_start":901,"line_end":901,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44024,"byte_end":44032,"line_start":914,"line_end":914,"column_start":12,"column_end":20},"name":"activate","qualname":"<RxStream<E>>::activate","value":"pub fn activate(&mut Self, Option<i64>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Activate a stream.","sig":null,"attributes":[{"value":"/ Activate a stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43823,"byte_end":43845,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43850,"byte_end":43853,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Call `activate` to enable a stream before using `read()`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43858,"byte_end":43918,"line_start":910,"line_end":910,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43923,"byte_end":43926,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43931,"byte_end":43947,"line_start":912,"line_end":912,"column_start":5,"column_end":21}},{"value":"/   * `time_ns` -- optional activation time in nanoseconds","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43952,"byte_end":44012,"line_start":913,"line_end":913,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44742,"byte_end":44752,"line_start":931,"line_end":931,"column_start":12,"column_end":22},"name":"deactivate","qualname":"<RxStream<E>>::deactivate","value":"pub fn deactivate(&mut Self, Option<i64>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Deactivate a stream.\n The implementation will control switches or halt data flow.","sig":null,"attributes":[{"value":"/ Deactivate a stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44542,"byte_end":44566,"line_start":926,"line_end":926,"column_start":5,"column_end":29}},{"value":"/ The implementation will control switches or halt data flow.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44571,"byte_end":44634,"line_start":927,"line_end":927,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44639,"byte_end":44642,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44647,"byte_end":44663,"line_start":929,"line_end":929,"column_start":5,"column_end":21}},{"value":"/   * `time_ns` -- optional deactivation time in nanoseconds","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":44668,"byte_end":44730,"line_start":930,"line_end":930,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45625,"byte_end":45629,"line_start":949,"line_end":949,"column_start":12,"column_end":16},"name":"read","qualname":"<RxStream<E>>::read","value":"pub fn read(&mut Self, &[&mut [E]], i64) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Read samples from the stream into the provided buffers.","sig":null,"attributes":[{"value":"/ Read samples from the stream into the provided buffers.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45228,"byte_end":45287,"line_start":941,"line_end":941,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45292,"byte_end":45295,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ `buffers` contains one destination slice for each channel of this stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45300,"byte_end":45377,"line_start":943,"line_end":943,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45382,"byte_end":45385,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ Returns the number of samples read, which may be smaller than the size of the passed arrays.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45390,"byte_end":45486,"line_start":945,"line_end":945,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45491,"byte_end":45494,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45499,"byte_end":45511,"line_start":947,"line_end":947,"column_start":5,"column_end":17}},{"value":"/  * If `buffers` is not the same length as the `channels` array passed to `Device::rx_stream`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":45516,"byte_end":45613,"line_start":948,"line_end":948,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":351},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46633,"byte_end":46641,"line_start":981,"line_end":981,"column_start":12,"column_end":20},"name":"TxStream","qualname":"::device::TxStream","value":"TxStream {  }","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" A stream open for transmitting.","sig":null,"attributes":[{"value":"/ A stream open for transmitting.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46410,"byte_end":46445,"line_start":975,"line_end":975,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46446,"byte_end":46449,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ To obtain a TxStream, call [Device::tx_stream]. The type parameter `E` represents the type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46450,"byte_end":46544,"line_start":977,"line_end":977,"column_start":1,"column_end":95}},{"value":"/ of this stream's samples.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46545,"byte_end":46574,"line_start":978,"line_end":978,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46575,"byte_end":46578,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ Streams may involve multiple channels.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46579,"byte_end":46621,"line_start":980,"line_end":980,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47566,"byte_end":47569,"line_start":1009,"line_end":1009,"column_start":12,"column_end":15},"name":"mtu","qualname":"<TxStream<E>>::mtu","value":"pub fn mtu(&Self) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the stream's maximum transmission unit (MTU) in number of elements.","sig":null,"attributes":[{"value":"/ Get the stream's maximum transmission unit (MTU) in number of elements.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47241,"byte_end":47316,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47321,"byte_end":47324,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ The MTU specifies the maximum payload transfer in a stream operation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47329,"byte_end":47402,"line_start":1006,"line_end":1006,"column_start":5,"column_end":78}},{"value":"/ This value can be used as a stream buffer allocation size that can","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47407,"byte_end":47477,"line_start":1007,"line_end":1007,"column_start":5,"column_end":75}},{"value":"/ best optimize throughput given the underlying stream implementation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47482,"byte_end":47554,"line_start":1008,"line_end":1008,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47932,"byte_end":47940,"line_start":1021,"line_end":1021,"column_start":12,"column_end":20},"name":"activate","qualname":"<TxStream<E>>::activate","value":"pub fn activate(&mut Self, Option<i64>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Activate a stream.","sig":null,"attributes":[{"value":"/ Activate a stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47730,"byte_end":47752,"line_start":1015,"line_end":1015,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47757,"byte_end":47760,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Call `activate` to enable a stream before using `write()`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47765,"byte_end":47826,"line_start":1017,"line_end":1017,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47831,"byte_end":47834,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47839,"byte_end":47855,"line_start":1019,"line_end":1019,"column_start":5,"column_end":21}},{"value":"/   * `time_ns` -- optional activation time in nanoseconds","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47860,"byte_end":47920,"line_start":1020,"line_end":1020,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":48619,"byte_end":48629,"line_start":1036,"line_end":1036,"column_start":12,"column_end":22},"name":"deactivate","qualname":"<TxStream<E>>::deactivate","value":"pub fn deactivate(&mut Self, Option<i64>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Deactivate a stream.\n The implementation will control switches or halt data flow.","sig":null,"attributes":[{"value":"/ Deactivate a stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":48419,"byte_end":48443,"line_start":1031,"line_end":1031,"column_start":5,"column_end":29}},{"value":"/ The implementation will control switches or halt data flow.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":48448,"byte_end":48511,"line_start":1032,"line_end":1032,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":48516,"byte_end":48519,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":48524,"byte_end":48540,"line_start":1034,"line_end":1034,"column_start":5,"column_end":21}},{"value":"/   * `time_ns` -- optional deactivation time in nanoseconds","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":48545,"byte_end":48607,"line_start":1035,"line_end":1035,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49921,"byte_end":49926,"line_start":1062,"line_end":1062,"column_start":12,"column_end":17},"name":"write","qualname":"<TxStream<E>>::write","value":"pub fn write(&mut Self, &[&[E]], Option<i64>, bool, i64)\n-> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to write samples to the device from the provided buffer.","sig":null,"attributes":[{"value":"/ Attempt to write samples to the device from the provided buffer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49105,"byte_end":49173,"line_start":1046,"line_end":1046,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49178,"byte_end":49181,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The stream must first be [activated](TxStream::activate).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49186,"byte_end":49247,"line_start":1048,"line_end":1048,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49252,"byte_end":49255,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ `buffers` contains one source slice for each channel of the stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49260,"byte_end":49331,"line_start":1050,"line_end":1050,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49336,"byte_end":49339,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ `at_ns` is an optional nanosecond precision device timestamp at which","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49344,"byte_end":49417,"line_start":1052,"line_end":1052,"column_start":5,"column_end":78}},{"value":"/ the device is to begin the transmission (c.f. [get_hardware_time](Device::get_hardware_time)).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49422,"byte_end":49520,"line_start":1053,"line_end":1053,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49525,"byte_end":49528,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ `end_burst` indicates when this packet ends a burst transmission.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49533,"byte_end":49602,"line_start":1055,"line_end":1055,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49607,"byte_end":49610,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ Returns the number of samples written, which may be smaller than the size of the passed arrays.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49615,"byte_end":49714,"line_start":1057,"line_end":1057,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49719,"byte_end":49722,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49727,"byte_end":49739,"line_start":1059,"line_end":1059,"column_start":5,"column_end":17}},{"value":"/  * If `buffers` is not the same length as the `channels` array passed to `Device::tx_stream`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49744,"byte_end":49841,"line_start":1060,"line_end":1060,"column_start":5,"column_end":102}},{"value":"/  * If all the buffers in `buffers` are not the same length.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":49846,"byte_end":49909,"line_start":1061,"line_end":1061,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51897,"byte_end":51906,"line_start":1114,"line_end":1114,"column_start":12,"column_end":21},"name":"write_all","qualname":"<TxStream<E>>::write_all","value":"pub fn write_all(&mut Self, &[&[E]], Option<i64>, bool, i64)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Write all samples to the device.","sig":null,"attributes":[{"value":"/ Write all samples to the device.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51096,"byte_end":51132,"line_start":1097,"line_end":1097,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51137,"byte_end":51140,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This method repeatedly calls [write](TxStream::write) until the entire provided buffer has","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51145,"byte_end":51239,"line_start":1099,"line_end":1099,"column_start":5,"column_end":99}},{"value":"/ been written.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51244,"byte_end":51261,"line_start":1100,"line_end":1100,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51266,"byte_end":51269,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ The stream must first be [activated](TxStream::activate).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51274,"byte_end":51335,"line_start":1102,"line_end":1102,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51340,"byte_end":51343,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ `buffers` contains one source slice for each channel of the stream.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51348,"byte_end":51419,"line_start":1104,"line_end":1104,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51424,"byte_end":51427,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ `at_ns` is an optional nanosecond precision device timestamp at which","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51432,"byte_end":51505,"line_start":1106,"line_end":1106,"column_start":5,"column_end":78}},{"value":"/ the device is to begin the transmission (c.f. [get_hardware_time](Device::get_hardware_time)).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51510,"byte_end":51608,"line_start":1107,"line_end":1107,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51613,"byte_end":51616,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ `end_burst` indicates when this packet ends a burst transmission.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51621,"byte_end":51690,"line_start":1109,"line_end":1109,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51695,"byte_end":51698,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51703,"byte_end":51715,"line_start":1111,"line_end":1111,"column_start":5,"column_end":17}},{"value":"/  * If `buffers` is not the same length as the `channels` array passed to `Device::rx_stream`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51720,"byte_end":51817,"line_start":1112,"line_end":1112,"column_start":5,"column_end":102}},{"value":"/  * If all the buffers in `buffers` are not the same length.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":51822,"byte_end":51885,"line_start":1113,"line_end":1113,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52750,"byte_end":52754,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"CF64","qualname":"::format::Format::CF64","value":"Format::CF64","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex 64-bit floats (complex double)\n","sig":null,"attributes":[{"value":"/ Complex 64-bit floats (complex double)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52703,"byte_end":52745,"line_start":9,"line_end":9,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52807,"byte_end":52811,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"CF32","qualname":"::format::Format::CF32","value":"Format::CF32","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex 32-bit floats (complex float)\n","sig":null,"attributes":[{"value":"/ Complex 32-bit floats (complex float)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52761,"byte_end":52802,"line_start":12,"line_end":12,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52873,"byte_end":52877,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"CS32","qualname":"::format::Format::CS32","value":"Format::CS32","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex signed 32-bit integers (complex int32)\n","sig":null,"attributes":[{"value":"/ Complex signed 32-bit integers (complex int32)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52818,"byte_end":52868,"line_start":15,"line_end":15,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52942,"byte_end":52946,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"CU32","qualname":"::format::Format::CU32","value":"Format::CU32","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex unsigned 32-bit integers (complex uint32)\n","sig":null,"attributes":[{"value":"/ Complex unsigned 32-bit integers (complex uint32)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52884,"byte_end":52937,"line_start":18,"line_end":18,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53008,"byte_end":53012,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"CS16","qualname":"::format::Format::CS16","value":"Format::CS16","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex signed 16-bit integers (complex int16)\n","sig":null,"attributes":[{"value":"/ Complex signed 16-bit integers (complex int16)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52953,"byte_end":53003,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53077,"byte_end":53081,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"CU16","qualname":"::format::Format::CU16","value":"Format::CU16","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex unsigned 16-bit integers (complex uint16)\n","sig":null,"attributes":[{"value":"/ Complex unsigned 16-bit integers (complex uint16)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53019,"byte_end":53072,"line_start":24,"line_end":24,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53137,"byte_end":53141,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"CS12","qualname":"::format::Format::CS12","value":"Format::CS12","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex signed 12-bit integers (3 bytes)\n","sig":null,"attributes":[{"value":"/ Complex signed 12-bit integers (3 bytes)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53088,"byte_end":53132,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53199,"byte_end":53203,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"CU12","qualname":"::format::Format::CU12","value":"Format::CU12","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex unsigned 12-bit integers (3 bytes)\n","sig":null,"attributes":[{"value":"/ Complex unsigned 12-bit integers (3 bytes)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53148,"byte_end":53194,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53263,"byte_end":53266,"line_start":34,"line_end":34,"column_start":5,"column_end":8},"name":"CS8","qualname":"::format::Format::CS8","value":"Format::CS8","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex signed 8-bit integers (complex int8)\n","sig":null,"attributes":[{"value":"/ Complex signed 8-bit integers (complex int8)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53210,"byte_end":53258,"line_start":33,"line_end":33,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53329,"byte_end":53332,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"CU8","qualname":"::format::Format::CU8","value":"Format::CU8","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex unsigned 8-bit integers (complex uint8)\n","sig":null,"attributes":[{"value":"/ Complex unsigned 8-bit integers (complex uint8)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53273,"byte_end":53324,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53386,"byte_end":53389,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"CS4","qualname":"::format::Format::CS4","value":"Format::CS4","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex signed 4-bit integers (1 byte)\n","sig":null,"attributes":[{"value":"/ Complex signed 4-bit integers (1 byte)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53339,"byte_end":53381,"line_start":39,"line_end":39,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53445,"byte_end":53448,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"CU4","qualname":"::format::Format::CU4","value":"Format::CU4","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Complex unsigned 4-bit integers (1 byte)\n","sig":null,"attributes":[{"value":"/ Complex unsigned 4-bit integers (1 byte)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53396,"byte_end":53440,"line_start":42,"line_end":42,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53491,"byte_end":53494,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"F64","qualname":"::format::Format::F64","value":"Format::F64","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real 64-bit floats (double)\n","sig":null,"attributes":[{"value":"/ Real 64-bit floats (double)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53455,"byte_end":53486,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":599},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53536,"byte_end":53539,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"F32","qualname":"::format::Format::F32","value":"Format::F32","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real 32-bit floats (float)\n","sig":null,"attributes":[{"value":"/ Real 32-bit floats (float)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53501,"byte_end":53531,"line_start":48,"line_end":48,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53590,"byte_end":53593,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"S32","qualname":"::format::Format::S32","value":"Format::S32","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real signed 32-bit integers (int32)\n","sig":null,"attributes":[{"value":"/ Real signed 32-bit integers (int32)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53546,"byte_end":53585,"line_start":51,"line_end":51,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53647,"byte_end":53650,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"U32","qualname":"::format::Format::U32","value":"Format::U32","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real unsigned 32-bit integers (uint32)\n","sig":null,"attributes":[{"value":"/ Real unsigned 32-bit integers (uint32)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53600,"byte_end":53642,"line_start":54,"line_end":54,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53701,"byte_end":53704,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"S16","qualname":"::format::Format::S16","value":"Format::S16","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real signed 16-bit integers (int16)\n","sig":null,"attributes":[{"value":"/ Real signed 16-bit integers (int16)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53657,"byte_end":53696,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53758,"byte_end":53761,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"U16","qualname":"::format::Format::U16","value":"Format::U16","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real unsigned 16-bit integers (uint16)\n","sig":null,"attributes":[{"value":"/ Real unsigned 16-bit integers (uint16)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53711,"byte_end":53753,"line_start":60,"line_end":60,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53810,"byte_end":53812,"line_start":64,"line_end":64,"column_start":5,"column_end":7},"name":"S8","qualname":"::format::Format::S8","value":"Format::S8","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real signed 8-bit integers (int8)\n","sig":null,"attributes":[{"value":"/ Real signed 8-bit integers (int8)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53768,"byte_end":53805,"line_start":63,"line_end":63,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":611},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53864,"byte_end":53866,"line_start":67,"line_end":67,"column_start":5,"column_end":7},"name":"U8","qualname":"::format::Format::U8","value":"Format::U8","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Real unsigned 8-bit integers (uint8)\n","sig":null,"attributes":[{"value":"/ Real unsigned 8-bit integers (uint8)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53819,"byte_end":53859,"line_start":66,"line_end":66,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53892,"byte_end":53907,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::format::Format::__Nonexhaustive","value":"Format::__Nonexhaustive","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":572},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52690,"byte_end":52696,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Format","qualname":"::format::Format","value":"pub enum Format {\n    CF64,\n    CF32,\n    CS32,\n    CU32,\n    CS16,\n    CU16,\n    CS12,\n    CU12,\n    CS8,\n    CU8,\n    CS4,\n    CU4,\n    F64,\n    F32,\n    S32,\n    U32,\n    S16,\n    U16,\n    S8,\n    U8,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613}],"decl_id":null,"docs":" Data format of samples\n","sig":null,"attributes":[{"value":"/ Data format of samples","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":52610,"byte_end":52636,"line_start":6,"line_end":6,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":55944,"byte_end":55950,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Format>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the format\n","sig":null,"attributes":[{"value":"/ Get the name of the format","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":55902,"byte_end":55932,"line_start":136,"line_end":136,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56100,"byte_end":56104,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"size","qualname":"<Format>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of one sample in this format\n","sig":null,"attributes":[{"value":"/ Get the size of one sample in this format","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56043,"byte_end":56088,"line_start":142,"line_end":142,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":421},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56759,"byte_end":56771,"line_start":164,"line_end":164,"column_start":18,"column_end":30},"name":"StreamSample","qualname":"::format::StreamSample","value":"StreamSample","parent":null,"children":[{"krate":0,"index":422}],"decl_id":null,"docs":" Trait for sample formats used by a TxStream or RxStream","sig":null,"attributes":[{"value":"/ Trait for sample formats used by a TxStream or RxStream","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56504,"byte_end":56563,"line_start":160,"line_end":160,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56564,"byte_end":56567,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Implementing this trait requires that the type have the same size, alignment, and compatible","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56568,"byte_end":56664,"line_start":162,"line_end":162,"column_start":1,"column_end":97}},{"value":"/ memory representation with the SoapySDR type selected by `STREAM_FORMAT`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56665,"byte_end":56741,"line_start":163,"line_end":163,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":422},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56784,"byte_end":56797,"line_start":165,"line_end":165,"column_start":11,"column_end":24},"name":"STREAM_FORMAT","qualname":"::format::StreamSample::STREAM_FORMAT","value":"Format","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":462},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":711,"byte_end":728,"line_start":26,"line_end":26,"column_start":8,"column_end":25},"name":"configure_logging","qualname":"::configure_logging","value":"pub fn configure_logging()","parent":null,"children":[],"decl_id":null,"docs":" Configures SoapySDR to log to the Rust `log` facility.","sig":null,"attributes":[{"value":"/ Configures SoapySDR to log to the Rust `log` facility.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":537,"byte_end":595,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":596,"byte_end":599,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ With `env_logger`, use e.g `RUST_LOG=soapysdr=info` to control the log level.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":600,"byte_end":681,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"cfg(feature = \"log\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/lib.rs","byte_start":682,"byte_end":703,"line_start":25,"line_end":25,"column_start":1,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2232,"byte_end":2236,"line_start":13,"line_end":13,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2333,"byte_end":2337,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4951,"byte_end":4955,"line_start":109,"line_end":109,"column_start":67,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":5362,"byte_end":5366,"line_start":128,"line_end":128,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":5703,"byte_end":5707,"line_start":140,"line_end":140,"column_start":80,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":5963,"byte_end":5967,"line_start":150,"line_end":150,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6211,"byte_end":6215,"line_start":160,"line_end":160,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6292,"byte_end":6298,"line_start":164,"line_end":164,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6400,"byte_end":6407,"line_start":170,"line_end":170,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6586,"byte_end":6590,"line_start":176,"line_end":176,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":7070,"byte_end":7082,"line_start":195,"line_end":195,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7747,"byte_end":7754,"line_start":16,"line_end":16,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11385,"byte_end":11394,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12168,"byte_end":12173,"line_start":73,"line_end":73,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12342,"byte_end":12347,"line_start":79,"line_end":79,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12657,"byte_end":12662,"line_start":96,"line_end":96,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12870,"byte_end":12881,"line_start":107,"line_end":107,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12906,"byte_end":12917,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12936,"byte_end":12947,"line_start":110,"line_end":110,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":13165,"byte_end":13171,"line_start":124,"line_end":124,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16504,"byte_end":16510,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43009,"byte_end":43017,"line_start":883,"line_end":883,"column_start":39,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43056,"byte_end":43064,"line_start":885,"line_end":885,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43316,"byte_end":43324,"line_start":896,"line_end":896,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46916,"byte_end":46924,"line_start":990,"line_end":990,"column_start":39,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46963,"byte_end":46971,"line_start":992,"line_end":992,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47223,"byte_end":47231,"line_start":1003,"line_end":1003,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53957,"byte_end":53963,"line_start":75,"line_end":75,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":54903,"byte_end":54909,"line_start":105,"line_end":105,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56215,"byte_end":56221,"line_start":148,"line_end":148,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56374,"byte_end":56380,"line_start":154,"line_end":154,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57567,"byte_end":57574,"line_start":177,"line_end":177,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57675,"byte_end":57682,"line_start":179,"line_end":179,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57765,"byte_end":57772,"line_start":180,"line_end":180,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57873,"byte_end":57880,"line_start":182,"line_end":182,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57981,"byte_end":57988,"line_start":184,"line_end":184,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":58071,"byte_end":58078,"line_start":185,"line_end":185,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":58161,"byte_end":58168,"line_start":186,"line_end":186,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":58251,"byte_end":58258,"line_start":187,"line_end":187,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2232,"byte_end":2236,"line_start":13,"line_end":13,"column_start":15,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":2333,"byte_end":2337,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":4951,"byte_end":4955,"line_start":109,"line_end":109,"column_start":67,"column_end":71},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":5362,"byte_end":5366,"line_start":128,"line_end":128,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":5703,"byte_end":5707,"line_start":140,"line_end":140,"column_start":80,"column_end":84},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":5963,"byte_end":5967,"line_start":150,"line_end":150,"column_start":39,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6211,"byte_end":6215,"line_start":160,"line_end":160,"column_start":23,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6292,"byte_end":6298,"line_start":164,"line_end":164,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6400,"byte_end":6407,"line_start":170,"line_end":170,"column_start":29,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":1089},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":6586,"byte_end":6590,"line_start":176,"line_end":176,"column_start":23,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/args.rs","byte_start":7070,"byte_end":7082,"line_start":195,"line_end":195,"column_start":23,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/arginfo.rs","byte_start":7747,"byte_end":7754,"line_start":16,"line_end":16,"column_start":36,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":11385,"byte_end":11394,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12168,"byte_end":12173,"line_start":73,"line_end":73,"column_start":30,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12342,"byte_end":12347,"line_start":79,"line_end":79,"column_start":30,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":537},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12657,"byte_end":12662,"line_start":96,"line_end":96,"column_start":26,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":11000},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12870,"byte_end":12881,"line_start":107,"line_end":107,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12906,"byte_end":12917,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":12936,"byte_end":12947,"line_start":110,"line_end":110,"column_start":15,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":13165,"byte_end":13171,"line_start":124,"line_end":124,"column_start":6,"column_end":12},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":16504,"byte_end":16510,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43009,"byte_end":43017,"line_start":883,"line_end":883,"column_start":39,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43056,"byte_end":43064,"line_start":885,"line_end":885,"column_start":32,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":43316,"byte_end":43324,"line_start":896,"line_end":896,"column_start":23,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46916,"byte_end":46924,"line_start":990,"line_end":990,"column_start":39,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":351},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":46963,"byte_end":46971,"line_start":992,"line_end":992,"column_start":32,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":351},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/device.rs","byte_start":47223,"byte_end":47231,"line_start":1003,"line_end":1003,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":53957,"byte_end":53963,"line_start":75,"line_end":75,"column_start":18,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":54903,"byte_end":54909,"line_start":105,"line_end":105,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56215,"byte_end":56221,"line_start":148,"line_end":148,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":56374,"byte_end":56380,"line_start":154,"line_end":154,"column_start":30,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57567,"byte_end":57574,"line_start":177,"line_end":177,"column_start":30,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57675,"byte_end":57682,"line_start":179,"line_end":179,"column_start":30,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57765,"byte_end":57772,"line_start":180,"line_end":180,"column_start":30,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57873,"byte_end":57880,"line_start":182,"line_end":182,"column_start":30,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":57981,"byte_end":57988,"line_start":184,"line_end":184,"column_start":30,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":58071,"byte_end":58078,"line_start":185,"line_end":185,"column_start":30,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":58161,"byte_end":58168,"line_start":186,"line_end":186,"column_start":30,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/soapysdr-0.3.2/src/format.rs","byte_start":58251,"byte_end":58258,"line_start":187,"line_end":187,"column_start":30,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":21,"index":624},"to":{"krate":0,"index":421}}]}