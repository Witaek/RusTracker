{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0","program":"/home/guilhem/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bindgen","--edition=2018","/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"runtime\"","-C","metadata=09d780d17a187a00","-C","extra-filename=-09d780d17a187a00","--out-dir","/home/guilhem/git/RusTracker/source/target/rls/debug/deps","-L","dependency=/home/guilhem/git/RusTracker/source/target/rls/debug/deps","--extern","bitflags=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libbitflags-1693f043aa7c36ab.rmeta","--extern","cexpr=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libcexpr-24af78cb74baacaa.rmeta","--extern","clang_sys=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libclang_sys-8412b4a0a73bc750.rmeta","--extern","lazy_static=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/liblazy_static-02ff0d0fbc57b9b4.rmeta","--extern","lazycell=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/liblazycell-46f9f5ed4c3bc997.rmeta","--extern","peeking_take_while=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libpeeking_take_while-0d6b58c78b00c322.rmeta","--extern","proc_macro2=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libproc_macro2-06e4dac8f44b7370.rmeta","--extern","quote=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libquote-cb31a46f971b5495.rmeta","--extern","regex=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libregex-fe92df32a3f592eb.rmeta","--extern","rustc_hash=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/librustc_hash-0e1a0245b1123f55.rmeta","--extern","shlex=/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libshlex-10c5bf4832f508f6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/guilhem/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/guilhem/git/RusTracker/source/target/rls/debug/deps/libbindgen-09d780d17a187a00.rmeta"},"prelude":{"crate_id":{"name":"bindgen","disambiguator":[178260636795183926,0]},"crate_root":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src","external_crates":[{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":20,"id":{"name":"bitflags","disambiguator":[3207452234307827990,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[357857839010685936,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":22,"id":{"name":"quote","disambiguator":[11155249285514129203,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/dyngen.rs","num":23,"id":{"name":"proc_macro2","disambiguator":[9923937817139084555,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":24,"id":{"name":"unicode_xid","disambiguator":[3618734582438816029,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":25,"id":{"name":"cexpr","disambiguator":[2459556697581947270,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":26,"id":{"name":"nom","disambiguator":[13875212866311128128,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":27,"id":{"name":"memchr","disambiguator":[16586111845951948113,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":28,"id":{"name":"clang_sys","disambiguator":[1753355730390354417,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":29,"id":{"name":"glob","disambiguator":[10208374470815224366,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":30,"id":{"name":"libc","disambiguator":[2145885144503500942,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":31,"id":{"name":"libloading","disambiguator":[10811970770864456848,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","num":32,"id":{"name":"cfg_if","disambiguator":[3066766633997387739,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/regex_set.rs","num":33,"id":{"name":"regex","disambiguator":[5525505496137805108,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/regex_set.rs","num":34,"id":{"name":"regex_syntax","disambiguator":[16610793715563638278,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","num":35,"id":{"name":"peeking_take_while","disambiguator":[15418615701124953756,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","num":36,"id":{"name":"lazycell","disambiguator":[15703749820110852704,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":37,"id":{"name":"rustc_hash","disambiguator":[2216991663009935997,0]}},{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","num":38,"id":{"name":"shlex","disambiguator":[1381379344727653165,0]}}],"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":0,"byte_end":86785,"line_start":1,"line_end":2549,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5190},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852716,"byte_end":852741,"line_start":3,"line_end":3,"column_start":30,"column_end":55},"alias_span":null,"name":"EnumVariantCustomBehavior","value":"","parent":{"krate":0,"index":3864}},{"kind":"Use","ref_id":{"krate":0,"index":5220},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852743,"byte_end":852759,"line_start":3,"line_end":3,"column_start":57,"column_end":73},"alias_span":null,"name":"EnumVariantValue","value":"","parent":{"krate":0,"index":3864}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852786,"byte_end":852793,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"alias_span":null,"name":"IntKind","value":"","parent":{"krate":0,"index":3864}},{"kind":"Use","ref_id":{"krate":0,"index":4487},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1827,"byte_end":1841,"line_start":68,"line_end":68,"column_start":26,"column_end":40},"alias_span":null,"name":"AliasVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4450},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1843,"byte_end":1856,"line_start":68,"line_end":68,"column_start":42,"column_end":55},"alias_span":null,"name":"EnumVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4474},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1858,"byte_end":1876,"line_start":68,"line_end":68,"column_start":57,"column_end":75},"alias_span":null,"name":"MacroTypeVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4523},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1945,"byte_end":1955,"line_start":71,"line_end":71,"column_start":5,"column_end":15},"alias_span":null,"name":"RustTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1957,"byte_end":1975,"line_start":71,"line_end":71,"column_start":17,"column_end":35},"alias_span":null,"name":"LATEST_STABLE_RUST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4568},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1977,"byte_end":1996,"line_start":71,"line_end":71,"column_start":37,"column_end":56},"alias_span":null,"name":"RUST_TARGET_STRINGS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":0,"byte_end":86785,"line_start":1,"line_end":2549,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":350},{"krate":0,"index":1202},{"krate":0,"index":1216},{"krate":0,"index":3794},{"krate":0,"index":3821},{"krate":0,"index":3840},{"krate":0,"index":3864},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":3912},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3949},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3973},{"krate":0,"index":3976},{"krate":0,"index":3978},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5777},{"krate":0,"index":5779},{"krate":0,"index":5781},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":5796},{"krate":0,"index":5798},{"krate":0,"index":5800},{"krate":0,"index":5802},{"krate":0,"index":5804},{"krate":0,"index":5830},{"krate":0,"index":5833},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5840},{"krate":0,"index":5843},{"krate":0,"index":5845},{"krate":0,"index":5848},{"krate":0,"index":5850},{"krate":0,"index":5853},{"krate":0,"index":5856},{"krate":0,"index":3984},{"krate":0,"index":3991},{"krate":0,"index":5879},{"krate":0,"index":5883},{"krate":0,"index":5885},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":5887},{"krate":0,"index":5968},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4133},{"krate":0,"index":4135},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4165},{"krate":0,"index":5987},{"krate":0,"index":5990},{"krate":0,"index":4171},{"krate":0,"index":5992},{"krate":0,"index":5994},{"krate":0,"index":4173}],"decl_id":null,"docs":" Generate Rust bindings for C and C++ libraries.","sig":null,"attributes":[{"value":"/ Generate Rust bindings for C and C++ libraries.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provide a C/C++ header file, receive Rust FFI code to call into C/C++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":56,"byte_end":129,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ functions and use types defined in the header.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":130,"byte_end":180,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":181,"byte_end":184,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See the [`Builder`](./struct.Builder.html) struct for usage.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":185,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":250,"byte_end":253,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [Users Guide](https://rust-lang.github.io/rust-bindgen/) for","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":254,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ additional documentation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":327,"byte_end":356,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"deny(missing_docs)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":357,"byte_end":379,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"deny(unused_extern_crates)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":380,"byte_end":410,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":498,"byte_end":531,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"recursion_limit = \"128\"","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":564,"byte_end":591,"line_start":16,"line_end":16,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4175},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89403,"byte_end":89409,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::clang::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":4176}],"decl_id":null,"docs":" A cursor into the Clang AST, pointing to an AST node.","sig":null,"attributes":[{"value":"/ A cursor into the Clang AST, pointing to an AST node.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89232,"byte_end":89289,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89290,"byte_end":89293,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ We call the AST node pointed to by the cursor the cursor's \"referent\".","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89294,"byte_end":89368,"line_start":19,"line_end":19,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89947,"byte_end":89950,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"usr","qualname":"<Cursor>::usr","value":"pub fn usr(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the Unified Symbol Resolution for this cursor's referent, if\n available.","sig":null,"attributes":[{"value":"/ Get the Unified Symbol Resolution for this cursor's referent, if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89766,"byte_end":89834,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ available.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89839,"byte_end":89853,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89858,"byte_end":89861,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The USR can be used to compare entities across translation units.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89866,"byte_end":89935,"line_start":42,"line_end":42,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90212,"byte_end":90226,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_declaration","qualname":"<Cursor>::is_declaration","value":"pub fn is_declaration(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a declaration?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a declaration?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90156,"byte_end":90200,"line_start":52,"line_end":52,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90366,"byte_end":90374,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Cursor>::spelling","value":"pub fn spelling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's spelling.\n","sig":null,"attributes":[{"value":"/ Get this cursor's referent's spelling.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90312,"byte_end":90354,"line_start":57,"line_end":57,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90675,"byte_end":90687,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"display_name","qualname":"<Cursor>::display_name","value":"pub fn display_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's display name.","sig":null,"attributes":[{"value":"/ Get this cursor's referent's display name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90478,"byte_end":90524,"line_start":62,"line_end":62,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90529,"byte_end":90532,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This is not necessarily a valid identifier. It includes extra","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90537,"byte_end":90602,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ information, such as parameters for a function, etc.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90607,"byte_end":90663,"line_start":65,"line_end":65,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90857,"byte_end":90865,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"mangling","qualname":"<Cursor>::mangling","value":"pub fn mangling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the mangled name of this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the mangled name of this cursor's referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90794,"byte_end":90845,"line_start":70,"line_end":70,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91081,"byte_end":91094,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"cxx_manglings","qualname":"<Cursor>::cxx_manglings","value":"pub fn cxx_manglings(&Self) -> Result<Vec<String>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets the C++ manglings for this cursor, or an error if the manglings\n are not available.\n","sig":null,"attributes":[{"value":"/ Gets the C++ manglings for this cursor, or an error if the manglings","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":90970,"byte_end":91042,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ are not available.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91047,"byte_end":91069,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91787,"byte_end":91797,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<Cursor>::is_builtin","value":"pub fn is_builtin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the cursor refers to a built-in definition.\n","sig":null,"attributes":[{"value":"/ Returns whether the cursor refers to a built-in definition.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91712,"byte_end":91775,"line_start":96,"line_end":96,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92564,"byte_end":92578,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"lexical_parent","qualname":"<Cursor>::lexical_parent","value":"pub fn lexical_parent(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the `Cursor` for this cursor's referent's lexical parent.","sig":null,"attributes":[{"value":"/ Get the `Cursor` for this cursor's referent's lexical parent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91914,"byte_end":91979,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91984,"byte_end":91987,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The lexical parent is the parent of the definition. The semantic parent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":91992,"byte_end":92067,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ is the parent of the declaration. Generally, the lexical parent doesn't","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92072,"byte_end":92147,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ have any effect on semantics, while the semantic parent does.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92152,"byte_end":92217,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92222,"byte_end":92225,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ In the following snippet, the `Foo` class would be the semantic parent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92230,"byte_end":92304,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ of the out-of-line `method` definition, while the lexical parent is the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92309,"byte_end":92384,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ translation unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92389,"byte_end":92410,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92415,"byte_end":92418,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92423,"byte_end":92433,"line_start":112,"line_end":112,"column_start":5,"column_end":15}},{"value":"/ class Foo {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92438,"byte_end":92453,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/     void method();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92458,"byte_end":92480,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92485,"byte_end":92491,"line_start":115,"line_end":115,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92496,"byte_end":92499,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ void Foo::method() { /* ... */ }","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92504,"byte_end":92540,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92545,"byte_end":92552,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92907,"byte_end":92931,"line_start":131,"line_end":131,"column_start":12,"column_end":36},"name":"fallible_semantic_parent","qualname":"<Cursor>::fallible_semantic_parent","value":"pub fn fallible_semantic_parent(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent, if one is available.","sig":null,"attributes":[{"value":"/ Get the referent's semantic parent, if one is available.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92728,"byte_end":92788,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92793,"byte_end":92796,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ See documentation for `lexical_parent` for details on semantic vs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92801,"byte_end":92870,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/ lexical parents.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":92875,"byte_end":92895,"line_start":130,"line_end":130,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93353,"byte_end":93368,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"semantic_parent","qualname":"<Cursor>::semantic_parent","value":"pub fn semantic_parent(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent.","sig":null,"attributes":[{"value":"/ Get the referent's semantic parent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93195,"byte_end":93234,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93239,"byte_end":93242,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ See documentation for `lexical_parent` for details on semantic vs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93247,"byte_end":93316,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ lexical parents.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93321,"byte_end":93341,"line_start":146,"line_end":146,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93743,"byte_end":93760,"line_start":157,"line_end":157,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Cursor>::num_template_args","value":"pub fn num_template_args(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of template arguments used by this cursor's referent,\n if the referent is either a template instantiation. Returns `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Return the number of template arguments used by this cursor's referent,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93448,"byte_end":93523,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ if the referent is either a template instantiation. Returns `None`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93528,"byte_end":93598,"line_start":152,"line_end":152,"column_start":5,"column_end":75}},{"value":"/ otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93603,"byte_end":93617,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93622,"byte_end":93625,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ NOTE: This may not return `Some` for partial template specializations,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93630,"byte_end":93704,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ see #193 and #194.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":93709,"byte_end":93731,"line_start":156,"line_end":156,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":95051,"byte_end":95067,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<Cursor>::translation_unit","value":"pub fn translation_unit(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this referent's containing translation unit.","sig":null,"attributes":[{"value":"/ Get a cursor pointing to this referent's containing translation unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":94679,"byte_end":94752,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":94757,"byte_end":94760,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that we shouldn't create a `TranslationUnit` struct here, because","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":94765,"byte_end":94839,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ bindgen assumes there will only be one of them alive at a time, and","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":94844,"byte_end":94915,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ disposes it on drop. That can change if this would be required, but I","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":94920,"byte_end":94993,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ think we can survive fine without it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":94998,"byte_end":95039,"line_start":190,"line_end":190,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":95438,"byte_end":95449,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Cursor>::is_toplevel","value":"pub fn is_toplevel(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a top level construct?\n","sig":null,"attributes":[{"value":"/ Is the referent a top level construct?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":95384,"byte_end":95426,"line_start":203,"line_end":203,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96346,"byte_end":96362,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"is_template_like","qualname":"<Cursor>::is_template_like","value":"pub fn is_template_like(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are a few kinds of types that we need to treat specially, mainly\n not tracking the type declaration but the location of the cursor, given\n clang doesn't expose a proper declaration for these types.\n","sig":null,"attributes":[{"value":"/ There are a few kinds of types that we need to treat specially, mainly","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96113,"byte_end":96187,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ not tracking the type declaration but the location of the cursor, given","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96192,"byte_end":96267,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ clang doesn't expose a proper declaration for these types.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96272,"byte_end":96334,"line_start":224,"line_end":224,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96676,"byte_end":96698,"line_start":235,"line_end":235,"column_start":12,"column_end":34},"name":"is_macro_function_like","qualname":"<Cursor>::is_macro_function_like","value":"pub fn is_macro_function_like(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this Cursor pointing to a function-like macro definition?\n","sig":null,"attributes":[{"value":"/ Is this Cursor pointing to a function-like macro definition?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96600,"byte_end":96664,"line_start":234,"line_end":234,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96860,"byte_end":96864,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"kind","qualname":"<Cursor>::kind","value":"pub fn kind(&Self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of referent this cursor is pointing to.\n","sig":null,"attributes":[{"value":"/ Get the kind of referent this cursor is pointing to.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96792,"byte_end":96848,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96979,"byte_end":96992,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"is_definition","qualname":"<Cursor>::is_definition","value":"pub fn is_definition(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is the cursor is a definition\n","sig":null,"attributes":[{"value":"/ Returns true is the cursor is a definition","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":96921,"byte_end":96967,"line_start":244,"line_end":244,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97136,"byte_end":97162,"line_start":250,"line_end":250,"column_start":12,"column_end":38},"name":"is_template_specialization","qualname":"<Cursor>::is_template_specialization","value":"pub fn is_template_specialization(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization?\n","sig":null,"attributes":[{"value":"/ Is the referent a template specialization?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97078,"byte_end":97124,"line_start":249,"line_end":249,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97358,"byte_end":97387,"line_start":256,"line_end":256,"column_start":12,"column_end":41},"name":"is_fully_specialized_template","qualname":"<Cursor>::is_fully_specialized_template","value":"pub fn is_fully_specialized_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a fully specialized template specialization without any\n remaining free template arguments?\n","sig":null,"attributes":[{"value":"/ Is the referent a fully specialized template specialization without any","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97228,"byte_end":97303,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ remaining free template arguments?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97308,"byte_end":97346,"line_start":255,"line_end":255,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97704,"byte_end":97740,"line_start":264,"line_end":264,"column_start":12,"column_end":48},"name":"is_in_non_fully_specialized_template","qualname":"<Cursor>::is_in_non_fully_specialized_template","value":"pub fn is_in_non_fully_specialized_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization that still has remaining free\n template arguments?\n","sig":null,"attributes":[{"value":"/ Is the referent a template specialization that still has remaining free","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97589,"byte_end":97664,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ template arguments?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":97669,"byte_end":97692,"line_start":263,"line_end":263,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98167,"byte_end":98175,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Cursor>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor pointing a valid referent?\n","sig":null,"attributes":[{"value":"/ Is this cursor pointing a valid referent?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98110,"byte_end":98155,"line_start":281,"line_end":281,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98314,"byte_end":98322,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"location","qualname":"<Cursor>::location","value":"pub fn location(&Self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" Get the source location for the referent.\n","sig":null,"attributes":[{"value":"/ Get the source location for the referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98257,"byte_end":98302,"line_start":286,"line_end":286,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98546,"byte_end":98552,"line_start":296,"line_end":296,"column_start":12,"column_end":18},"name":"extent","qualname":"<Cursor>::extent","value":"pub fn extent(&Self) -> CXSourceRange","parent":null,"children":[],"decl_id":null,"docs":" Get the source location range for the referent.\n","sig":null,"attributes":[{"value":"/ Get the source location range for the referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98483,"byte_end":98534,"line_start":295,"line_end":295,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98720,"byte_end":98731,"line_start":301,"line_end":301,"column_start":12,"column_end":23},"name":"raw_comment","qualname":"<Cursor>::raw_comment","value":"pub fn raw_comment(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the raw declaration comment for this referent, if one exists.\n","sig":null,"attributes":[{"value":"/ Get the raw declaration comment for this referent, if one exists.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98639,"byte_end":98708,"line_start":300,"line_end":300,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99019,"byte_end":99026,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(&Self) -> Comment","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's parsed comment.\n","sig":null,"attributes":[{"value":"/ Get the referent's parsed comment.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":98969,"byte_end":99007,"line_start":312,"line_end":312,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99219,"byte_end":99227,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"cur_type","qualname":"<Cursor>::cur_type","value":"pub fn cur_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's type.\n","sig":null,"attributes":[{"value":"/ Get the referent's type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99179,"byte_end":99207,"line_start":321,"line_end":321,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99560,"byte_end":99570,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"definition","qualname":"<Cursor>::definition","value":"pub fn definition(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a reference to another type, or is\n a declaration, get the cursor pointing to the referenced type or type of\n the declared thing.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a reference to another type, or is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99364,"byte_end":99439,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ a declaration, get the cursor pointing to the referenced type or type of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99444,"byte_end":99520,"line_start":331,"line_end":331,"column_start":5,"column_end":81}},{"value":"/ the declared thing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99525,"byte_end":99548,"line_start":332,"line_end":332,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100013,"byte_end":100023,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"referenced","qualname":"<Cursor>::referenced","value":"pub fn referenced(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is reference type, get the cursor\n pointing to the referenced type.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is reference type, get the cursor","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99889,"byte_end":99960,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/ pointing to the referenced type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":99965,"byte_end":100001,"line_start":348,"line_end":348,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100549,"byte_end":100558,"line_start":368,"line_end":368,"column_start":12,"column_end":21},"name":"canonical","qualname":"<Cursor>::canonical","value":"pub fn canonical(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical cursor for this referent.","sig":null,"attributes":[{"value":"/ Get the canonical cursor for this referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100304,"byte_end":100351,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100356,"byte_end":100359,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Many types can be declared multiple times before finally being properly","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100364,"byte_end":100439,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ defined. This method allows us to get the canonical cursor for the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100444,"byte_end":100514,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ referent type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100519,"byte_end":100537,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100906,"byte_end":100917,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"specialized","qualname":"<Cursor>::specialized","value":"pub fn specialized(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor points to either a template specialization or a\n template instantiation, get a cursor pointing to the template definition\n that is being specialized.\n","sig":null,"attributes":[{"value":"/ Given that this cursor points to either a template specialization or a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100704,"byte_end":100778,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ template instantiation, get a cursor pointing to the template definition","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100783,"byte_end":100859,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ that is being specialized.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":100864,"byte_end":100894,"line_start":378,"line_end":378,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101365,"byte_end":101378,"line_start":394,"line_end":394,"column_start":12,"column_end":25},"name":"template_kind","qualname":"<Cursor>::template_kind","value":"pub fn template_kind(&Self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Assuming that this cursor's referent is a template declaration, get the\n kind of cursor that would be generated for its specializations.\n","sig":null,"attributes":[{"value":"/ Assuming that this cursor's referent is a template declaration, get the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101206,"byte_end":101281,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ kind of cursor that would be generated for its specializations.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101286,"byte_end":101353,"line_start":393,"line_end":393,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101603,"byte_end":101608,"line_start":401,"line_end":401,"column_start":12,"column_end":17},"name":"visit","qualname":"<Cursor>::visit","value":"pub fn visit<Visitor>(&Self, Visitor) where Visitor: FnMut(Cursor) ->\nCXChildVisitResult","parent":null,"children":[],"decl_id":null,"docs":" Traverse this cursor's referent and its children.","sig":null,"attributes":[{"value":"/ Traverse this cursor's referent and its children.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101470,"byte_end":101523,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101528,"byte_end":101531,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Call the given function on each AST node traversed.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101536,"byte_end":101591,"line_start":400,"line_end":400,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101997,"byte_end":102013,"line_start":415,"line_end":415,"column_start":12,"column_end":28},"name":"collect_children","qualname":"<Cursor>::collect_children","value":"pub fn collect_children(&Self) -> Vec<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Collect all of this cursor's children into a vec and return them.\n","sig":null,"attributes":[{"value":"/ Collect all of this cursor's children into a vec and return them.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":101916,"byte_end":101985,"line_start":414,"line_end":414,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":102253,"byte_end":102265,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Cursor>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have any children?\n","sig":null,"attributes":[{"value":"/ Does this cursor have any children?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":102202,"byte_end":102241,"line_start":424,"line_end":424,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":102514,"byte_end":102539,"line_start":435,"line_end":435,"column_start":12,"column_end":37},"name":"has_at_least_num_children","qualname":"<Cursor>::has_at_least_num_children","value":"pub fn has_at_least_num_children(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have at least `n` children?\n","sig":null,"attributes":[{"value":"/ Does this cursor have at least `n` children?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":102454,"byte_end":102502,"line_start":434,"line_end":434,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103030,"byte_end":103045,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"contains_cursor","qualname":"<Cursor>::contains_cursor","value":"pub fn contains_cursor(&Self, CXCursorKind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the given location contains a cursor with the given\n kind in the first level of nesting underneath (doesn't look\n recursively).\n","sig":null,"attributes":[{"value":"/ Returns whether the given location contains a cursor with the given","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":102857,"byte_end":102928,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ kind in the first level of nesting underneath (doesn't look","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":102933,"byte_end":102996,"line_start":450,"line_end":450,"column_start":5,"column_end":68}},{"value":"/ recursively).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103001,"byte_end":103018,"line_start":451,"line_end":451,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103402,"byte_end":103421,"line_start":468,"line_end":468,"column_start":12,"column_end":31},"name":"is_inlined_function","qualname":"<Cursor>::is_inlined_function","value":"pub fn is_inlined_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent an inlined function?\n","sig":null,"attributes":[{"value":"/ Is the referent an inlined function?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103350,"byte_end":103390,"line_start":467,"line_end":467,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103633,"byte_end":103642,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<Cursor>::bit_width","value":"pub fn bit_width(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the width of this cursor's referent bit field, or `None` if the\n referent is not a bit field.\n","sig":null,"attributes":[{"value":"/ Get the width of this cursor's referent bit field, or `None` if the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103513,"byte_end":103584,"line_start":472,"line_end":472,"column_start":5,"column_end":76}},{"value":"/ referent is not a bit field.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103589,"byte_end":103621,"line_start":473,"line_end":473,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103979,"byte_end":103988,"line_start":487,"line_end":487,"column_start":12,"column_end":21},"name":"enum_type","qualname":"<Cursor>::enum_type","value":"pub fn enum_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Get the integer representation type used to hold this cursor's referent\n enum type.\n","sig":null,"attributes":[{"value":"/ Get the integer representation type used to hold this cursor's referent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103873,"byte_end":103948,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ enum type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":103953,"byte_end":103967,"line_start":486,"line_end":486,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104426,"byte_end":104442,"line_start":503,"line_end":503,"column_start":12,"column_end":28},"name":"enum_val_boolean","qualname":"<Cursor>::enum_val_boolean","value":"pub fn enum_val_boolean(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the boolean constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the boolean constant value for this cursor's enum variant referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104261,"byte_end":104336,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104341,"byte_end":104344,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104349,"byte_end":104414,"line_start":502,"line_end":502,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104850,"byte_end":104865,"line_start":516,"line_end":516,"column_start":12,"column_end":27},"name":"enum_val_signed","qualname":"<Cursor>::enum_val_signed","value":"pub fn enum_val_signed(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get the signed constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the signed constant value for this cursor's enum variant referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104686,"byte_end":104760,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104765,"byte_end":104768,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":104773,"byte_end":104838,"line_start":515,"line_end":515,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":105276,"byte_end":105293,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"enum_val_unsigned","qualname":"<Cursor>::enum_val_unsigned","value":"pub fn enum_val_unsigned(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the unsigned constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the unsigned constant value for this cursor's enum variant referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":105110,"byte_end":105186,"line_start":526,"line_end":526,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":105191,"byte_end":105194,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":105199,"byte_end":105264,"line_start":528,"line_end":528,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":105621,"byte_end":105648,"line_start":540,"line_end":540,"column_start":12,"column_end":39},"name":"has_warn_unused_result_attr","qualname":"<Cursor>::has_warn_unused_result_attr","value":"pub fn has_warn_unused_result_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this cursor has the `warn_unused_result` attribute.\n","sig":null,"attributes":[{"value":"/ Whether this cursor has the `warn_unused_result` attribute.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":105546,"byte_end":105609,"line_start":539,"line_end":539,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":106784,"byte_end":106796,"line_start":572,"line_end":572,"column_start":12,"column_end":24},"name":"typedef_type","qualname":"<Cursor>::typedef_type","value":"pub fn typedef_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a `typedef`, get the `Type` that is\n being aliased.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a `typedef`, get the `Type` that is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":106673,"byte_end":106749,"line_start":570,"line_end":570,"column_start":5,"column_end":81}},{"value":"/ being aliased.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":106754,"byte_end":106772,"line_start":571,"line_end":571,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107166,"byte_end":107173,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Cursor>::linkage","value":"pub fn linkage(&Self) -> CXLinkageKind","parent":null,"children":[],"decl_id":null,"docs":" Get the linkage kind for this cursor's referent.","sig":null,"attributes":[{"value":"/ Get the linkage kind for this cursor's referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107040,"byte_end":107092,"line_start":584,"line_end":584,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107097,"byte_end":107100,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This only applies to functions and variables.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107105,"byte_end":107154,"line_start":586,"line_end":586,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107322,"byte_end":107332,"line_start":592,"line_end":592,"column_start":12,"column_end":22},"name":"visibility","qualname":"<Cursor>::visibility","value":"pub fn visibility(&Self) -> CXVisibilityKind","parent":null,"children":[],"decl_id":null,"docs":" Get the visibility of this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the visibility of this cursor's referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107261,"byte_end":107310,"line_start":591,"line_end":591,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107640,"byte_end":107644,"line_start":601,"line_end":601,"column_start":12,"column_end":16},"name":"args","qualname":"<Cursor>::args","value":"pub fn args(&Self) -> Option<Vec<Cursor>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function, return cursors to its\n parameters.","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a function, return cursors to its","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107426,"byte_end":107500,"line_start":596,"line_end":596,"column_start":5,"column_end":79}},{"value":"/ parameters.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107505,"byte_end":107520,"line_start":597,"line_end":597,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107525,"byte_end":107528,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not a function/method call or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107533,"byte_end":107607,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/ declaration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":107612,"byte_end":107628,"line_start":600,"line_end":600,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108270,"byte_end":108278,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Cursor>::num_args","value":"pub fn num_args(&Self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function/method call or\n declaration, return the number of arguments it takes.","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a function/method call or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108023,"byte_end":108089,"line_start":614,"line_end":614,"column_start":5,"column_end":71}},{"value":"/ declaration, return the number of arguments it takes.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108094,"byte_end":108151,"line_start":615,"line_end":615,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108156,"byte_end":108159,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Returns Err if the cursor's referent is not a function/method call or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108164,"byte_end":108237,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ declaration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108242,"byte_end":108258,"line_start":618,"line_end":618,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108584,"byte_end":108600,"line_start":631,"line_end":631,"column_start":12,"column_end":28},"name":"access_specifier","qualname":"<Cursor>::access_specifier","value":"pub fn access_specifier(&Self) -> CX_CXXAccessSpecifier","parent":null,"children":[],"decl_id":null,"docs":" Get the access specifier for this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the access specifier for this cursor's referent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108516,"byte_end":108572,"line_start":630,"line_end":630,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108889,"byte_end":108906,"line_start":639,"line_end":639,"column_start":12,"column_end":29},"name":"public_accessible","qualname":"<Cursor>::public_accessible","value":"pub fn public_accessible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the cursor's referrent publically accessible in C++?","sig":null,"attributes":[{"value":"/ Is the cursor's referrent publically accessible in C++?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108701,"byte_end":108760,"line_start":635,"line_end":635,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108765,"byte_end":108768,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Returns true if self.access_specifier() is `CX_CXXPublic` or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108773,"byte_end":108837,"line_start":637,"line_end":637,"column_start":5,"column_end":69}},{"value":"/ `CX_CXXInvalidAccessSpecifier`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":108842,"byte_end":108877,"line_start":638,"line_end":638,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109152,"byte_end":109168,"line_start":646,"line_end":646,"column_start":12,"column_end":28},"name":"is_mutable_field","qualname":"<Cursor>::is_mutable_field","value":"pub fn is_mutable_field(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a field declaration that is marked as\n `mutable`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a field declaration that is marked as","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109054,"byte_end":109121,"line_start":644,"line_end":644,"column_start":5,"column_end":72}},{"value":"/ `mutable`?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109126,"byte_end":109140,"line_start":645,"line_end":645,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109324,"byte_end":109339,"line_start":651,"line_end":651,"column_start":12,"column_end":27},"name":"offset_of_field","qualname":"<Cursor>::offset_of_field","value":"pub fn offset_of_field(&Self) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of the field represented by the Cursor.\n","sig":null,"attributes":[{"value":"/ Get the offset of the field represented by the Cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109254,"byte_end":109312,"line_start":650,"line_end":650,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109681,"byte_end":109697,"line_start":662,"line_end":662,"column_start":12,"column_end":28},"name":"method_is_static","qualname":"<Cursor>::method_is_static","value":"pub fn method_is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `static`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is declared `static`?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109595,"byte_end":109669,"line_start":661,"line_end":661,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109868,"byte_end":109883,"line_start":667,"line_end":667,"column_start":12,"column_end":27},"name":"method_is_const","qualname":"<Cursor>::method_is_const","value":"pub fn method_is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `const`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is declared `const`?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109783,"byte_end":109856,"line_start":666,"line_end":666,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110044,"byte_end":110061,"line_start":672,"line_end":672,"column_start":12,"column_end":29},"name":"method_is_virtual","qualname":"<Cursor>::method_is_virtual","value":"pub fn method_is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is virtual?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is virtual?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":109968,"byte_end":110032,"line_start":671,"line_end":671,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110229,"byte_end":110251,"line_start":677,"line_end":677,"column_start":12,"column_end":34},"name":"method_is_pure_virtual","qualname":"<Cursor>::method_is_pure_virtual","value":"pub fn method_is_pure_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is pure virtual?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is pure virtual?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110148,"byte_end":110217,"line_start":676,"line_end":676,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110423,"byte_end":110438,"line_start":682,"line_end":682,"column_start":12,"column_end":27},"name":"is_virtual_base","qualname":"<Cursor>::is_virtual_base","value":"pub fn is_virtual_base(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a struct or class with virtual members?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a struct or class with virtual members?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110342,"byte_end":110411,"line_start":681,"line_end":681,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110563,"byte_end":110571,"line_start":687,"line_end":687,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Cursor>::evaluate","value":"pub fn evaluate(&Self) -> Option<EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Try to evaluate this cursor.\n","sig":null,"attributes":[{"value":"/ Try to evaluate this cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110519,"byte_end":110551,"line_start":686,"line_end":686,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110699,"byte_end":110707,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Cursor>::ret_type","value":"pub fn ret_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Return the result type for this cursor\n","sig":null,"attributes":[{"value":"/ Return the result type for this cursor","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110645,"byte_end":110687,"line_start":691,"line_end":691,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110995,"byte_end":111001,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Cursor>::tokens","value":"pub fn tokens(&Self) -> RawTokens","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor.\n","sig":null,"attributes":[{"value":"/ Gets the tokens that correspond to that cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":110932,"byte_end":110983,"line_start":703,"line_end":703,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111146,"byte_end":111158,"line_start":709,"line_end":709,"column_start":12,"column_end":24},"name":"cexpr_tokens","qualname":"<Cursor>::cexpr_tokens","value":"pub fn cexpr_tokens(Self) -> Vec<cexpr::token::Token>","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor as  `cexpr` tokens.\n","sig":null,"attributes":[{"value":"/ Gets the tokens that correspond to that cursor as  `cexpr` tokens.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111064,"byte_end":111134,"line_start":708,"line_end":708,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111507,"byte_end":111529,"line_start":719,"line_end":719,"column_start":12,"column_end":34},"name":"get_included_file_name","qualname":"<Cursor>::get_included_file_name","value":"pub fn get_included_file_name(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the real path name of a cursor of InclusionDirective kind.","sig":null,"attributes":[{"value":"/ Obtain the real path name of a cursor of InclusionDirective kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111327,"byte_end":111396,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111401,"byte_end":111404,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor does not include a file, otherwise the file's full name","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111409,"byte_end":111495,"line_start":718,"line_end":718,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111900,"byte_end":111909,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"RawTokens","qualname":"::clang::RawTokens","value":"RawTokens {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" A struct that owns the tokenizer result from a given cursor.\n","sig":null,"attributes":[{"value":"/ A struct that owns the tokenizer result from a given cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":111824,"byte_end":111888,"line_start":731,"line_end":731,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":112710,"byte_end":112714,"line_start":762,"line_end":762,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawTokens>::iter","value":"pub fn iter(&Self) -> ClangTokenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over these tokens.\n","sig":null,"attributes":[{"value":"/ Get an iterator over these tokens.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":112660,"byte_end":112698,"line_start":761,"line_end":761,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4180},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113379,"byte_end":113389,"line_start":788,"line_end":788,"column_start":12,"column_end":22},"name":"ClangToken","qualname":"::clang::ClangToken","value":"ClangToken { extent, kind }","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":" A raw clang token, that exposes only kind, spelling, and extent. This is a\n slightly more convenient version of `CXToken` which owns the spelling\n string and extent.\n","sig":null,"attributes":[{"value":"/ A raw clang token, that exposes only kind, spelling, and extent. This is a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113175,"byte_end":113253,"line_start":784,"line_end":784,"column_start":1,"column_end":79}},{"value":"/ slightly more convenient version of `CXToken` which owns the spelling","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113254,"byte_end":113327,"line_start":785,"line_end":785,"column_start":1,"column_end":74}},{"value":"/ string and extent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113328,"byte_end":113350,"line_start":786,"line_end":786,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4182},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113521,"byte_end":113527,"line_start":792,"line_end":792,"column_start":9,"column_end":15},"name":"extent","qualname":"::clang::ClangToken::extent","value":"clang_sys::CXSourceRange","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":" The extent of the token. This is the same as the relevant member from\n `CXToken`.\n","sig":null,"attributes":[{"value":"/ The extent of the token. This is the same as the relevant member from","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113420,"byte_end":113493,"line_start":790,"line_end":790,"column_start":5,"column_end":78}},{"value":"/ `CXToken`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113498,"byte_end":113512,"line_start":791,"line_end":791,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":4183},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113647,"byte_end":113651,"line_start":795,"line_end":795,"column_start":9,"column_end":13},"name":"kind","qualname":"::clang::ClangToken::kind","value":"i32","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":" The kind of the token. This is the same as the relevant member from\n `CXToken`.\n","sig":null,"attributes":[{"value":"/ The kind of the token. This is the same as the relevant member from","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113548,"byte_end":113619,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ `CXToken`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113624,"byte_end":113638,"line_start":794,"line_end":794,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113764,"byte_end":113772,"line_start":800,"line_end":800,"column_start":12,"column_end":20},"name":"spelling","qualname":"<ClangToken>::spelling","value":"pub fn spelling(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the token spelling, without being converted to utf-8.\n","sig":null,"attributes":[{"value":"/ Get the token spelling, without being converted to utf-8.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113691,"byte_end":113752,"line_start":799,"line_end":799,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":114008,"byte_end":114022,"line_start":808,"line_end":808,"column_start":12,"column_end":26},"name":"as_cexpr_token","qualname":"<ClangToken>::as_cexpr_token","value":"pub fn as_cexpr_token(&Self) -> Option<cexpr::token::Token>","parent":null,"children":[],"decl_id":null,"docs":" Converts a ClangToken to a `cexpr` token if possible.\n","sig":null,"attributes":[{"value":"/ Converts a ClangToken to a `cexpr` token if possible.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113939,"byte_end":113996,"line_start":807,"line_end":807,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":176},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":114949,"byte_end":114967,"line_start":839,"line_end":839,"column_start":12,"column_end":30},"name":"ClangTokenIterator","qualname":"::clang::ClangTokenIterator","value":"ClangTokenIterator {  }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"decl_id":null,"docs":" An iterator over a set of Tokens.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of Tokens.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":114900,"byte_end":114937,"line_start":838,"line_end":838,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4186},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116606,"byte_end":116610,"line_start":904,"line_end":904,"column_start":12,"column_end":16},"name":"Type","qualname":"::clang::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":4187}],"decl_id":null,"docs":" The type of a node in clang's AST.\n","sig":null,"attributes":[{"value":"/ The type of a node in clang's AST.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116533,"byte_end":116571,"line_start":902,"line_end":902,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4192},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117354,"byte_end":117361,"line_start":934,"line_end":934,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::clang::LayoutError::Invalid","value":"LayoutError::Invalid","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":" Asked for the layout of an invalid type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of an invalid type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117305,"byte_end":117349,"line_start":933,"line_end":933,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4194},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117419,"byte_end":117429,"line_start":936,"line_end":936,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::clang::LayoutError::Incomplete","value":"LayoutError::Incomplete","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":" Asked for the layout of an incomplete type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of an incomplete type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117367,"byte_end":117414,"line_start":935,"line_end":935,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4196},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117485,"byte_end":117494,"line_start":938,"line_end":938,"column_start":5,"column_end":14},"name":"Dependent","qualname":"::clang::LayoutError::Dependent","value":"LayoutError::Dependent","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":" Asked for the layout of a dependent type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a dependent type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117435,"byte_end":117480,"line_start":937,"line_end":937,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4198},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117573,"byte_end":117588,"line_start":940,"line_end":940,"column_start":5,"column_end":20},"name":"NotConstantSize","qualname":"::clang::LayoutError::NotConstantSize","value":"LayoutError::NotConstantSize","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":" Asked for the layout of a type that does not have constant size.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a type that does not have constant size.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117500,"byte_end":117568,"line_start":939,"line_end":939,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4200},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117685,"byte_end":117701,"line_start":943,"line_end":943,"column_start":5,"column_end":21},"name":"InvalidFieldName","qualname":"::clang::LayoutError::InvalidFieldName","value":"LayoutError::InvalidFieldName","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":" Asked for the layout of a field in a type that does not have such a\n field.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a field in a type that does not have such a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117594,"byte_end":117665,"line_start":941,"line_end":941,"column_start":5,"column_end":76}},{"value":"/ field.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117670,"byte_end":117680,"line_start":942,"line_end":942,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4202},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117740,"byte_end":117747,"line_start":945,"line_end":945,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::clang::LayoutError::Unknown","value":"LayoutError::Unknown","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":" An unknown layout error.\n","sig":null,"attributes":[{"value":"/ An unknown layout error.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117707,"byte_end":117735,"line_start":944,"line_end":944,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":4191},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117287,"byte_end":117298,"line_start":932,"line_end":932,"column_start":10,"column_end":21},"name":"LayoutError","qualname":"::clang::LayoutError","value":"pub enum LayoutError {\n    Invalid,\n    Incomplete,\n    Dependent,\n    NotConstantSize,\n    InvalidFieldName,\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":4192},{"krate":0,"index":4194},{"krate":0,"index":4196},{"krate":0,"index":4198},{"krate":0,"index":4200},{"krate":0,"index":4202}],"decl_id":null,"docs":" An error about the layout of a struct, class, or type.\n","sig":null,"attributes":[{"value":"/ An error about the layout of a struct, class, or type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117168,"byte_end":117226,"line_start":930,"line_end":930,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118280,"byte_end":118284,"line_start":965,"line_end":965,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"pub fn kind(&Self) -> CXTypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get this type's kind.\n","sig":null,"attributes":[{"value":"/ Get this type's kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118243,"byte_end":118268,"line_start":964,"line_end":964,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118404,"byte_end":118415,"line_start":970,"line_end":970,"column_start":12,"column_end":23},"name":"declaration","qualname":"<Type>::declaration","value":"pub fn declaration(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this type's declaration.\n","sig":null,"attributes":[{"value":"/ Get a cursor pointing to this type's declaration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118339,"byte_end":118392,"line_start":969,"line_end":969,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118640,"byte_end":118661,"line_start":979,"line_end":979,"column_start":12,"column_end":33},"name":"canonical_declaration","qualname":"<Type>::canonical_declaration","value":"pub fn canonical_declaration(&Self, Option<&Cursor>)\n-> Option<CanonicalTypeDeclaration>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical declaration of this type, if it is available.\n","sig":null,"attributes":[{"value":"/ Get the canonical declaration of this type, if it is available.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118561,"byte_end":118628,"line_start":978,"line_end":978,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":119496,"byte_end":119504,"line_start":1005,"line_end":1005,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Type>::spelling","value":"pub fn spelling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get a raw display name for this type.\n","sig":null,"attributes":[{"value":"/ Get a raw display name for this type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":119443,"byte_end":119484,"line_start":1004,"line_end":1004,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":119976,"byte_end":119984,"line_start":1019,"line_end":1019,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type const qualified?\n","sig":null,"attributes":[{"value":"/ Is this type const qualified?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":119931,"byte_end":119964,"line_start":1018,"line_end":1018,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121416,"byte_end":121420,"line_start":1057,"line_end":1057,"column_start":12,"column_end":16},"name":"size","qualname":"<Type>::size","value":"pub fn size(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type? Paper over invalid types by returning `0`\n for them.\n","sig":null,"attributes":[{"value":"/ What is the size of this type? Paper over invalid types by returning `0`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121310,"byte_end":121386,"line_start":1055,"line_end":1055,"column_start":5,"column_end":81}},{"value":"/ for them.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121391,"byte_end":121404,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121648,"byte_end":121661,"line_start":1067,"line_end":1067,"column_start":12,"column_end":25},"name":"fallible_size","qualname":"<Type>::fallible_size","value":"pub fn fallible_size(&Self, &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type?\n","sig":null,"attributes":[{"value":"/ What is the size of this type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121602,"byte_end":121636,"line_start":1066,"line_end":1066,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122026,"byte_end":122031,"line_start":1081,"line_end":1081,"column_start":12,"column_end":17},"name":"align","qualname":"<Type>::align","value":"pub fn align(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type? Paper over invalid types by\n returning `0`.\n","sig":null,"attributes":[{"value":"/ What is the alignment of this type? Paper over invalid types by","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121924,"byte_end":121991,"line_start":1079,"line_end":1079,"column_start":5,"column_end":72}},{"value":"/ returning `0`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":121996,"byte_end":122014,"line_start":1080,"line_end":1080,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122265,"byte_end":122279,"line_start":1091,"line_end":1091,"column_start":12,"column_end":26},"name":"fallible_align","qualname":"<Type>::fallible_align","value":"pub fn fallible_align(&Self, &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type?\n","sig":null,"attributes":[{"value":"/ What is the alignment of this type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122214,"byte_end":122253,"line_start":1090,"line_end":1090,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122656,"byte_end":122671,"line_start":1105,"line_end":1105,"column_start":12,"column_end":27},"name":"fallible_layout","qualname":"<Type>::fallible_layout","value":"pub fn fallible_layout(&Self, &BindgenContext)\n-> Result<crate::ir::layout::Layout, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the layout for this type, or an error describing why it does not\n have a valid layout.\n","sig":null,"attributes":[{"value":"/ Get the layout for this type, or an error describing why it does not","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122543,"byte_end":122615,"line_start":1103,"line_end":1103,"column_start":5,"column_end":77}},{"value":"/ have a valid layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122620,"byte_end":122644,"line_start":1104,"line_end":1104,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123076,"byte_end":123093,"line_start":1117,"line_end":1117,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Type>::num_template_args","value":"pub fn num_template_args(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of template arguments this type has, or `None` if it is\n not some kind of template.\n","sig":null,"attributes":[{"value":"/ Get the number of template arguments this type has, or `None` if it is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":122955,"byte_end":123029,"line_start":1115,"line_end":1115,"column_start":5,"column_end":79}},{"value":"/ not some kind of template.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123034,"byte_end":123064,"line_start":1116,"line_end":1116,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123455,"byte_end":123468,"line_start":1129,"line_end":1129,"column_start":12,"column_end":25},"name":"template_args","qualname":"<Type>::template_args","value":"pub fn template_args(&Self) -> Option<TypeTemplateArgIterator>","parent":null,"children":[],"decl_id":null,"docs":" If this type is a class template specialization, return its\n template arguments. Otherwise, return None.\n","sig":null,"attributes":[{"value":"/ If this type is a class template specialization, return its","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123328,"byte_end":123391,"line_start":1127,"line_end":1127,"column_start":5,"column_end":68}},{"value":"/ template arguments. Otherwise, return None.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123396,"byte_end":123443,"line_start":1128,"line_end":1128,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123837,"byte_end":123841,"line_start":1140,"line_end":1140,"column_start":12,"column_end":16},"name":"args","qualname":"<Type>::args","value":"pub fn args(&Self) -> Option<Vec<Type>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the types of its parameters.","sig":null,"attributes":[{"value":"/ Given that this type is a function prototype, return the types of its parameters.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123670,"byte_end":123755,"line_start":1137,"line_end":1137,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123760,"byte_end":123763,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ Returns None if the type is not a function prototype.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":123768,"byte_end":123825,"line_start":1139,"line_end":1139,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124278,"byte_end":124286,"line_start":1153,"line_end":1153,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Type>::num_args","value":"pub fn num_args(&Self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the number of arguments it takes.","sig":null,"attributes":[{"value":"/ Given that this type is a function prototype, return the number of arguments it takes.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124107,"byte_end":124197,"line_start":1150,"line_end":1150,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124202,"byte_end":124205,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ Returns Err if the type is not a function prototype.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124210,"byte_end":124266,"line_start":1152,"line_end":1152,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124614,"byte_end":124626,"line_start":1166,"line_end":1166,"column_start":12,"column_end":24},"name":"pointee_type","qualname":"<Type>::pointee_type","value":"pub fn pointee_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a pointer type, return the type that it points\n to.\n","sig":null,"attributes":[{"value":"/ Given that this type is a pointer type, return the type that it points","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124516,"byte_end":124590,"line_start":1164,"line_end":1164,"column_start":5,"column_end":79}},{"value":"/ to.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":124595,"byte_end":124602,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125256,"byte_end":125265,"line_start":1186,"line_end":1186,"column_start":12,"column_end":21},"name":"elem_type","qualname":"<Type>::elem_type","value":"pub fn elem_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array, vector, or complex type, return the\n type of its elements.\n","sig":null,"attributes":[{"value":"/ Given that this type is an array, vector, or complex type, return the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125141,"byte_end":125214,"line_start":1184,"line_end":1184,"column_start":5,"column_end":78}},{"value":"/ type of its elements.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125219,"byte_end":125244,"line_start":1185,"line_end":1185,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125618,"byte_end":125630,"line_start":1199,"line_end":1199,"column_start":12,"column_end":24},"name":"num_elements","qualname":"<Type>::num_elements","value":"pub fn num_elements(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array or vector type, return its number of\n elements.\n","sig":null,"attributes":[{"value":"/ Given that this type is an array or vector type, return its number of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125515,"byte_end":125588,"line_start":1197,"line_end":1197,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125593,"byte_end":125606,"line_start":1198,"line_end":1198,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126022,"byte_end":126036,"line_start":1210,"line_end":1210,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"pub fn canonical_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical version of this type. This sees through `typedef`s and\n aliases to get the underlying, canonical type.\n","sig":null,"attributes":[{"value":"/ Get the canonical version of this type. This sees through `typedef`s and","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125879,"byte_end":125955,"line_start":1208,"line_end":1208,"column_start":5,"column_end":81}},{"value":"/ aliases to get the underlying, canonical type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":125960,"byte_end":126010,"line_start":1209,"line_end":1209,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126230,"byte_end":126241,"line_start":1219,"line_end":1219,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<Type>::is_variadic","value":"pub fn is_variadic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a variadic function type?\n","sig":null,"attributes":[{"value":"/ Is this type a variadic function type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126176,"byte_end":126218,"line_start":1218,"line_end":1218,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126429,"byte_end":126437,"line_start":1225,"line_end":1225,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Type>::ret_type","value":"pub fn ret_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get the type of its return\n value.\n","sig":null,"attributes":[{"value":"/ Given that this type is a function type, get the type of its return","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126331,"byte_end":126402,"line_start":1223,"line_end":1223,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126407,"byte_end":126417,"line_start":1224,"line_end":1224,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126817,"byte_end":126826,"line_start":1238,"line_end":1238,"column_start":12,"column_end":21},"name":"call_conv","qualname":"<Type>::call_conv","value":"pub fn call_conv(&Self) -> CXCallingConv","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get its calling convention. If\n this is not a function type, `CXCallingConv_Invalid` is returned.\n","sig":null,"attributes":[{"value":"/ Given that this type is a function type, get its calling convention. If","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126656,"byte_end":126731,"line_start":1236,"line_end":1236,"column_start":5,"column_end":80}},{"value":"/ this is not a function type, `CXCallingConv_Invalid` is returned.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126736,"byte_end":126805,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127084,"byte_end":127089,"line_start":1244,"line_end":1244,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"pub fn named(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" For elaborated types (types which use `class`, `struct`, or `union` to\n disambiguate types from local bindings), get the underlying type.\n","sig":null,"attributes":[{"value":"/ For elaborated types (types which use `class`, `struct`, or `union` to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":126924,"byte_end":126998,"line_start":1242,"line_end":1242,"column_start":5,"column_end":79}},{"value":"/ disambiguate types from local bindings), get the underlying type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127003,"byte_end":127072,"line_start":1243,"line_end":1243,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127267,"byte_end":127275,"line_start":1253,"line_end":1253,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Type>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid type?\n","sig":null,"attributes":[{"value":"/ Is this a valid type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127230,"byte_end":127255,"line_start":1252,"line_end":1252,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127391,"byte_end":127411,"line_start":1258,"line_end":1258,"column_start":12,"column_end":32},"name":"is_valid_and_exposed","qualname":"<Type>::is_valid_and_exposed","value":"pub fn is_valid_and_exposed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid and exposed type?\n","sig":null,"attributes":[{"value":"/ Is this a valid and exposed type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127342,"byte_end":127379,"line_start":1257,"line_end":1257,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127558,"byte_end":127588,"line_start":1263,"line_end":1263,"column_start":12,"column_end":42},"name":"is_fully_instantiated_template","qualname":"<Type>::is_fully_instantiated_template","value":"pub fn is_fully_instantiated_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a fully instantiated template?\n","sig":null,"attributes":[{"value":"/ Is this type a fully instantiated template?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":127499,"byte_end":127546,"line_start":1262,"line_end":1262,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128370,"byte_end":128388,"line_start":1285,"line_end":1285,"column_start":12,"column_end":30},"name":"is_associated_type","qualname":"<Type>::is_associated_type","value":"pub fn is_associated_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type an associated template type? Eg `T::Associated` in\n this example:","sig":null,"attributes":[{"value":"/ Is this type an associated template type? Eg `T::Associated` in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128130,"byte_end":128197,"line_start":1276,"line_end":1276,"column_start":5,"column_end":72}},{"value":"/ this example:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128202,"byte_end":128219,"line_start":1277,"line_end":1277,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128224,"byte_end":128227,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128232,"byte_end":128242,"line_start":1279,"line_end":1279,"column_start":5,"column_end":15}},{"value":"/ template <typename T>","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128247,"byte_end":128272,"line_start":1280,"line_end":1280,"column_start":5,"column_end":30}},{"value":"/ class Foo {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128277,"byte_end":128292,"line_start":1281,"line_end":1281,"column_start":5,"column_end":20}},{"value":"/     typename T::Associated member;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128297,"byte_end":128335,"line_start":1282,"line_end":1282,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128340,"byte_end":128346,"line_start":1283,"line_end":1283,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":128351,"byte_end":128358,"line_start":1284,"line_end":1284,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4229},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129416,"byte_end":129440,"line_start":1311,"line_end":1311,"column_start":12,"column_end":36},"name":"CanonicalTypeDeclaration","qualname":"::clang::CanonicalTypeDeclaration","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `CanonicalTypeDeclaration` type exists as proof-by-construction that its\n cursor is the canonical declaration for its type. If you have a\n `CanonicalTypeDeclaration` instance, you know for sure that the type and\n cursor match up in a canonical declaration relationship, and it simply\n cannot be otherwise.\n","sig":null,"attributes":[{"value":"/ The `CanonicalTypeDeclaration` type exists as proof-by-construction that its","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129034,"byte_end":129114,"line_start":1305,"line_end":1305,"column_start":1,"column_end":81}},{"value":"/ cursor is the canonical declaration for its type. If you have a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129115,"byte_end":129182,"line_start":1306,"line_end":1306,"column_start":1,"column_end":68}},{"value":"/ `CanonicalTypeDeclaration` instance, you know for sure that the type and","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129183,"byte_end":129259,"line_start":1307,"line_end":1307,"column_start":1,"column_end":77}},{"value":"/ cursor match up in a canonical declaration relationship, and it simply","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129260,"byte_end":129334,"line_start":1308,"line_end":1308,"column_start":1,"column_end":75}},{"value":"/ cannot be otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129335,"byte_end":129359,"line_start":1309,"line_end":1309,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129522,"byte_end":129524,"line_start":1315,"line_end":1315,"column_start":12,"column_end":14},"name":"ty","qualname":"<CanonicalTypeDeclaration>::ty","value":"pub fn ty(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get the type.\n","sig":null,"attributes":[{"value":"/ Get the type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129493,"byte_end":129510,"line_start":1314,"line_end":1314,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129630,"byte_end":129636,"line_start":1320,"line_end":1320,"column_start":12,"column_end":18},"name":"cursor","qualname":"<CanonicalTypeDeclaration>::cursor","value":"pub fn cursor(&Self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the type's canonical declaration cursor.\n","sig":null,"attributes":[{"value":"/ Get the type's canonical declaration cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129570,"byte_end":129618,"line_start":1319,"line_end":1319,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129742,"byte_end":129765,"line_start":1326,"line_end":1326,"column_start":12,"column_end":35},"name":"TypeTemplateArgIterator","qualname":"::clang::TypeTemplateArgIterator","value":"TypeTemplateArgIterator {  }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An iterator for a type's template arguments.\n","sig":null,"attributes":[{"value":"/ An iterator for a type's template arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129682,"byte_end":129730,"line_start":1325,"line_end":1325,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130499,"byte_end":130513,"line_start":1356,"line_end":1356,"column_start":12,"column_end":26},"name":"SourceLocation","qualname":"::clang::SourceLocation","value":"SourceLocation {  }","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":" A `SourceLocation` is a file, line, column, and byte offset location for\n some source text.\n","sig":null,"attributes":[{"value":"/ A `SourceLocation` is a file, line, column, and byte offset location for","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130389,"byte_end":130465,"line_start":1354,"line_end":1354,"column_start":1,"column_end":77}},{"value":"/ some source text.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130466,"byte_end":130487,"line_start":1355,"line_end":1355,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130667,"byte_end":130675,"line_start":1363,"line_end":1363,"column_start":12,"column_end":20},"name":"location","qualname":"<SourceLocation>::location","value":"pub fn location(&Self) -> (File, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the (file, line, column, byte offset) tuple for this source\n location.\n","sig":null,"attributes":[{"value":"/ Get the (file, line, column, byte offset) tuple for this source","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130570,"byte_end":130637,"line_start":1361,"line_end":1361,"column_start":5,"column_end":72}},{"value":"/ location.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130642,"byte_end":130655,"line_start":1362,"line_end":1362,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":261},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131514,"byte_end":131521,"line_start":1391,"line_end":1391,"column_start":12,"column_end":19},"name":"Comment","qualname":"::clang::Comment","value":"Comment {  }","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" A comment in the source text.","sig":null,"attributes":[{"value":"/ A comment in the source text.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131396,"byte_end":131429,"line_start":1388,"line_end":1388,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131430,"byte_end":131433,"line_start":1389,"line_end":1389,"column_start":1,"column_end":4}},{"value":"/ Comments are sort of parsed by Clang, and have a tree structure.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131434,"byte_end":131502,"line_start":1390,"line_end":1390,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131609,"byte_end":131613,"line_start":1397,"line_end":1397,"column_start":12,"column_end":16},"name":"kind","qualname":"<Comment>::kind","value":"pub fn kind(&Self) -> CXCommentKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of comment is this?\n","sig":null,"attributes":[{"value":"/ What kind of comment is this?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131564,"byte_end":131597,"line_start":1396,"line_end":1396,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131751,"byte_end":131763,"line_start":1402,"line_end":1402,"column_start":12,"column_end":24},"name":"get_children","qualname":"<Comment>::get_children","value":"pub fn get_children(&Self) -> CommentChildrenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get this comment's children comment\n","sig":null,"attributes":[{"value":"/ Get this comment's children comment","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131700,"byte_end":131739,"line_start":1401,"line_end":1401,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132075,"byte_end":132087,"line_start":1412,"line_end":1412,"column_start":12,"column_end":24},"name":"get_tag_name","qualname":"<Comment>::get_tag_name","value":"pub fn get_tag_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is the start or end of an HTML tag, get its tag\n name.\n","sig":null,"attributes":[{"value":"/ Given that this comment is the start or end of an HTML tag, get its tag","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131974,"byte_end":132049,"line_start":1410,"line_end":1410,"column_start":5,"column_end":80}},{"value":"/ name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132054,"byte_end":132063,"line_start":1411,"line_end":1411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132280,"byte_end":132293,"line_start":1417,"line_end":1417,"column_start":12,"column_end":25},"name":"get_tag_attrs","qualname":"<Comment>::get_tag_attrs","value":"pub fn get_tag_attrs(&Self) -> CommentAttributesIterator","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is an HTML start tag, get its attributes.\n","sig":null,"attributes":[{"value":"/ Given that this comment is an HTML start tag, get its attributes.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132199,"byte_end":132268,"line_start":1416,"line_end":1416,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132555,"byte_end":132578,"line_start":1427,"line_end":1427,"column_start":12,"column_end":35},"name":"CommentChildrenIterator","qualname":"::clang::CommentChildrenIterator","value":"CommentChildrenIterator {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" An iterator for a comment's children\n","sig":null,"attributes":[{"value":"/ An iterator for a comment's children","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132503,"byte_end":132543,"line_start":1426,"line_end":1426,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133078,"byte_end":133094,"line_start":1449,"line_end":1449,"column_start":12,"column_end":28},"name":"CommentAttribute","qualname":"::clang::CommentAttribute","value":"CommentAttribute { name, value }","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" An HTML start tag comment attribute\n","sig":null,"attributes":[{"value":"/ An HTML start tag comment attribute","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133027,"byte_end":133066,"line_start":1448,"line_end":1448,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133143,"byte_end":133147,"line_start":1451,"line_end":1451,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::CommentAttribute::name","value":"std::string::String","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" HTML start tag attribute name\n","sig":null,"attributes":[{"value":"/ HTML start tag attribute name","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133101,"byte_end":133134,"line_start":1450,"line_end":1450,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133204,"byte_end":133209,"line_start":1453,"line_end":1453,"column_start":9,"column_end":14},"name":"value","qualname":"::clang::CommentAttribute::value","value":"std::string::String","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" HTML start tag attribute value\n","sig":null,"attributes":[{"value":"/ HTML start tag attribute value","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133161,"byte_end":133195,"line_start":1452,"line_end":1452,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133276,"byte_end":133301,"line_start":1457,"line_end":1457,"column_start":12,"column_end":37},"name":"CommentAttributesIterator","qualname":"::clang::CommentAttributesIterator","value":"CommentAttributesIterator {  }","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" An iterator for a comment's attributes\n","sig":null,"attributes":[{"value":"/ An iterator for a comment's attributes","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133222,"byte_end":133264,"line_start":1456,"line_end":1456,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134100,"byte_end":134104,"line_start":1488,"line_end":1488,"column_start":12,"column_end":16},"name":"File","qualname":"::clang::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" A source file.\n","sig":null,"attributes":[{"value":"/ A source file.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134070,"byte_end":134088,"line_start":1487,"line_end":1487,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134190,"byte_end":134194,"line_start":1494,"line_end":1494,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of this source file.\n","sig":null,"attributes":[{"value":"/ Get the name of this source file.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134141,"byte_end":134178,"line_start":1493,"line_end":1493,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134889,"byte_end":134894,"line_start":1518,"line_end":1518,"column_start":12,"column_end":17},"name":"Index","qualname":"::clang::Index","value":"Index {  }","parent":null,"children":[{"krate":0,"index":292}],"decl_id":null,"docs":" An `Index` is an environment for a set of translation units that will\n typically end up linked together in one final binary.\n","sig":null,"attributes":[{"value":"/ An `Index` is an environment for a set of translation units that will","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134746,"byte_end":134819,"line_start":1516,"line_end":1516,"column_start":1,"column_end":74}},{"value":"/ typically end up linked together in one final binary.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134820,"byte_end":134877,"line_start":1517,"line_end":1517,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135221,"byte_end":135224,"line_start":1529,"line_end":1529,"column_start":12,"column_end":15},"name":"new","qualname":"<Index>::new","value":"pub fn new(bool, bool) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Index`.","sig":null,"attributes":[{"value":"/ Construct a new `Index`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134933,"byte_end":134961,"line_start":1523,"line_end":1523,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134966,"byte_end":134969,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ The `pch` parameter controls whether declarations in pre-compiled","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134974,"byte_end":135043,"line_start":1525,"line_end":1525,"column_start":5,"column_end":74}},{"value":"/ headers are included when enumerating a translation unit's \"locals\".","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135048,"byte_end":135120,"line_start":1526,"line_end":1526,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135125,"byte_end":135128,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ The `diag` parameter controls whether debugging diagnostics are enabled.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135133,"byte_end":135209,"line_start":1528,"line_end":1528,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135711,"byte_end":135726,"line_start":1553,"line_end":1553,"column_start":12,"column_end":27},"name":"TranslationUnit","qualname":"::clang::TranslationUnit","value":"TranslationUnit {  }","parent":null,"children":[{"krate":0,"index":300}],"decl_id":null,"docs":" A translation unit (or \"compilation unit\").\n","sig":null,"attributes":[{"value":"/ A translation unit (or \"compilation unit\").","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135652,"byte_end":135699,"line_start":1552,"line_end":1552,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135998,"byte_end":136003,"line_start":1565,"line_end":1565,"column_start":12,"column_end":17},"name":"parse","qualname":"<TranslationUnit>::parse","value":"pub fn parse(&Index, &str, &[String], &[UnsavedFile], CXTranslationUnit_Flags)\n-> Option<TranslationUnit>","parent":null,"children":[],"decl_id":null,"docs":" Parse a source file into a translation unit.\n","sig":null,"attributes":[{"value":"/ Parse a source file into a translation unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135938,"byte_end":135986,"line_start":1564,"line_end":1564,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137118,"byte_end":137123,"line_start":1601,"line_end":1601,"column_start":12,"column_end":17},"name":"diags","qualname":"<TranslationUnit>::diags","value":"pub fn diags(&Self) -> Vec<Diagnostic>","parent":null,"children":[],"decl_id":null,"docs":" Get the Clang diagnostic information associated with this translation\n unit.\n","sig":null,"attributes":[{"value":"/ Get the Clang diagnostic information associated with this translation","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137019,"byte_end":137092,"line_start":1599,"line_end":1599,"column_start":5,"column_end":78}},{"value":"/ unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137097,"byte_end":137106,"line_start":1600,"line_end":1600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137558,"byte_end":137564,"line_start":1615,"line_end":1615,"column_start":12,"column_end":18},"name":"cursor","qualname":"<TranslationUnit>::cursor","value":"pub fn cursor(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to the root of this translation unit's AST.\n","sig":null,"attributes":[{"value":"/ Get a cursor pointing to the root of this translation unit's AST.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137477,"byte_end":137546,"line_start":1614,"line_end":1614,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137766,"byte_end":137773,"line_start":1624,"line_end":1624,"column_start":12,"column_end":19},"name":"is_null","qualname":"<TranslationUnit>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the null translation unit?\n","sig":null,"attributes":[{"value":"/ Is this the null translation unit?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137716,"byte_end":137754,"line_start":1623,"line_end":1623,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138048,"byte_end":138058,"line_start":1638,"line_end":1638,"column_start":12,"column_end":22},"name":"Diagnostic","qualname":"::clang::Diagnostic","value":"Diagnostic {  }","parent":null,"children":[{"krate":0,"index":314}],"decl_id":null,"docs":" A diagnostic message generated while parsing a translation unit.\n","sig":null,"attributes":[{"value":"/ A diagnostic message generated while parsing a translation unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137968,"byte_end":138036,"line_start":1637,"line_end":1637,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138208,"byte_end":138214,"line_start":1645,"line_end":1645,"column_start":12,"column_end":18},"name":"format","qualname":"<Diagnostic>::format","value":"pub fn format(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format this diagnostic message as a string, using the given option bit\n flags.\n","sig":null,"attributes":[{"value":"/ Format this diagnostic message as a string, using the given option bit","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138107,"byte_end":138181,"line_start":1643,"line_end":1643,"column_start":5,"column_end":79}},{"value":"/ flags.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138186,"byte_end":138196,"line_start":1644,"line_end":1644,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138471,"byte_end":138479,"line_start":1653,"line_end":1653,"column_start":12,"column_end":20},"name":"severity","qualname":"<Diagnostic>::severity","value":"pub fn severity(&Self) -> CXDiagnosticSeverity","parent":null,"children":[],"decl_id":null,"docs":" What is the severity of this diagnostic message?\n","sig":null,"attributes":[{"value":"/ What is the severity of this diagnostic message?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138407,"byte_end":138459,"line_start":1652,"line_end":1652,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138807,"byte_end":138818,"line_start":1668,"line_end":1668,"column_start":12,"column_end":23},"name":"UnsavedFile","qualname":"::clang::UnsavedFile","value":"UnsavedFile { name }","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" A file which has not been saved to disk.\n","sig":null,"attributes":[{"value":"/ A file which has not been saved to disk.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138751,"byte_end":138795,"line_start":1667,"line_end":1667,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":322},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138962,"byte_end":138966,"line_start":1672,"line_end":1672,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::UnsavedFile::name","value":"std::ffi::CString","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" The name of the unsaved file. Kept here to avoid leaving dangling pointers in\n `CXUnsavedFile`.\n","sig":null,"attributes":[{"value":"/ The name of the unsaved file. Kept here to avoid leaving dangling pointers in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138847,"byte_end":138928,"line_start":1670,"line_end":1670,"column_start":5,"column_end":86}},{"value":"/ `CXUnsavedFile`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138933,"byte_end":138953,"line_start":1671,"line_end":1671,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":139108,"byte_end":139111,"line_start":1678,"line_end":1678,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsavedFile>::new","value":"pub fn new(&str, &str) -> UnsavedFile","parent":null,"children":[],"decl_id":null,"docs":" Construct a new unsaved file with the given `name` and `contents`.\n","sig":null,"attributes":[{"value":"/ Construct a new unsaved file with the given `name` and `contents`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":139026,"byte_end":139096,"line_start":1677,"line_end":1677,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4245},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":147050,"byte_end":147060,"line_start":1947,"line_end":1947,"column_start":12,"column_end":22},"name":"EvalResult","qualname":"::clang::EvalResult","value":"EvalResult {  }","parent":null,"children":[{"krate":0,"index":4246}],"decl_id":null,"docs":" A wrapper for the result of evaluating an expression.\n","sig":null,"attributes":[{"value":"/ A wrapper for the result of evaluating an expression.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":146964,"byte_end":147021,"line_start":1945,"line_end":1945,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":147165,"byte_end":147168,"line_start":1953,"line_end":1953,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalResult>::new","value":"pub fn new(Cursor) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate `cursor` and return the result.\n","sig":null,"attributes":[{"value":"/ Evaluate `cursor` and return the result.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":147109,"byte_end":147153,"line_start":1952,"line_end":1952,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":148155,"byte_end":148164,"line_start":1984,"line_end":1984,"column_start":12,"column_end":21},"name":"as_double","qualname":"<EvalResult>::as_double","value":"pub fn as_double(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as a double.\n","sig":null,"attributes":[{"value":"/ Try to get back the result as a double.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":148100,"byte_end":148143,"line_start":1983,"line_end":1983,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":148439,"byte_end":148445,"line_start":1994,"line_end":1994,"column_start":12,"column_end":18},"name":"as_int","qualname":"<EvalResult>::as_int","value":"pub fn as_int(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as an integer.\n","sig":null,"attributes":[{"value":"/ Try to get back the result as an integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":148382,"byte_end":148427,"line_start":1993,"line_end":1993,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":149505,"byte_end":149522,"line_start":2026,"line_end":2026,"column_start":12,"column_end":29},"name":"as_literal_string","qualname":"<EvalResult>::as_literal_string","value":"pub fn as_literal_string(&Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the expression as a literal string, that may or may not be\n valid utf-8.\n","sig":null,"attributes":[{"value":"/ Evaluates the expression as a literal string, that may or may not be","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":149400,"byte_end":149472,"line_start":2024,"line_end":2024,"column_start":5,"column_end":77}},{"value":"/ valid utf-8.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":149477,"byte_end":149493,"line_start":2025,"line_end":2025,"column_start":5,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":504},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":324791,"byte_end":324796,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::impl_debug::ImplDebug::Extra","value":"type Extra;","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":" Any extra parameter required by this a particular `ImplDebug` implementation.\n","sig":null,"attributes":[{"value":"/ Any extra parameter required by this a particular `ImplDebug` implementation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":324700,"byte_end":324781,"line_start":56,"line_end":56,"column_start":5,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":884},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":163020,"byte_end":163025,"line_start":423,"line_end":423,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::CodeGenerator::Extra","value":"type Extra;","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Extra information from the caller.\n","sig":null,"attributes":[{"value":"/ Extra information from the caller.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":162972,"byte_end":163010,"line_start":422,"line_end":422,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":939},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":187658,"byte_end":187663,"line_start":1121,"line_end":1121,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::FieldCodegen::Extra","value":"type Extra;","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4451},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231034,"byte_end":231038,"line_start":2405,"line_end":2405,"column_start":5,"column_end":9},"name":"Rust","qualname":"::codegen::EnumVariation::Rust","value":"EnumVariation::Rust { non_exhaustive }","parent":{"krate":0,"index":4450},"children":[],"decl_id":null,"docs":" The code for this enum will use a Rust enum. Note that creating this in unsafe code\n (including FFI) with an invalid value will invoke undefined behaviour, whether or not\n its marked as non_exhaustive.\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a Rust enum. Note that creating this in unsafe code","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":230810,"byte_end":230897,"line_start":2402,"line_end":2402,"column_start":5,"column_end":92}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour, whether or not","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":230902,"byte_end":230991,"line_start":2403,"line_end":2403,"column_start":5,"column_end":94}},{"value":"/ its marked as non_exhaustive.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":230996,"byte_end":231029,"line_start":2404,"line_end":2404,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":4453},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231213,"byte_end":231220,"line_start":2410,"line_end":2410,"column_start":5,"column_end":12},"name":"NewType","qualname":"::codegen::EnumVariation::NewType","value":"EnumVariation::NewType { is_bitfield }","parent":{"krate":0,"index":4450},"children":[],"decl_id":null,"docs":" The code for this enum will use a newtype\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a newtype","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231163,"byte_end":231208,"line_start":2409,"line_end":2409,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4455},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231378,"byte_end":231384,"line_start":2415,"line_end":2415,"column_start":5,"column_end":11},"name":"Consts","qualname":"::codegen::EnumVariation::Consts","value":"EnumVariation::Consts","parent":{"krate":0,"index":4450},"children":[],"decl_id":null,"docs":" The code for this enum will use consts\n","sig":null,"attributes":[{"value":"/ The code for this enum will use consts","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231331,"byte_end":231373,"line_start":2414,"line_end":2414,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4457},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231457,"byte_end":231469,"line_start":2417,"line_end":2417,"column_start":5,"column_end":17},"name":"ModuleConsts","qualname":"::codegen::EnumVariation::ModuleConsts","value":"EnumVariation::ModuleConsts","parent":{"krate":0,"index":4450},"children":[],"decl_id":null,"docs":" The code for this enum will use a module containing consts\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a module containing consts","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231390,"byte_end":231452,"line_start":2416,"line_end":2416,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4450},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":230790,"byte_end":230803,"line_start":2401,"line_end":2401,"column_start":10,"column_end":23},"name":"EnumVariation","qualname":"::codegen::EnumVariation","value":"pub enum EnumVariation {\n    Rust {\n        non_exhaustive: bool,\n    },\n    NewType {\n        is_bitfield: bool,\n    },\n    Consts,\n    ModuleConsts,\n}","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4453},{"krate":0,"index":4455},{"krate":0,"index":4457}],"decl_id":null,"docs":" A helper type that represents different enum variations.\n","sig":null,"attributes":[{"value":"/ A helper type that represents different enum variations.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":230679,"byte_end":230739,"line_start":2399,"line_end":2399,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4475},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254423,"byte_end":254429,"line_start":3096,"line_end":3096,"column_start":5,"column_end":11},"name":"Signed","qualname":"::codegen::MacroTypeVariation::Signed","value":"MacroTypeVariation::Signed","parent":{"krate":0,"index":4474},"children":[],"decl_id":null,"docs":" Use i32 or i64\n","sig":null,"attributes":[{"value":"/ Use i32 or i64","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254400,"byte_end":254418,"line_start":3095,"line_end":3095,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4477},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254458,"byte_end":254466,"line_start":3098,"line_end":3098,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::codegen::MacroTypeVariation::Unsigned","value":"MacroTypeVariation::Unsigned","parent":{"krate":0,"index":4474},"children":[],"decl_id":null,"docs":" Use u32 or u64\n","sig":null,"attributes":[{"value":"/ Use u32 or u64","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254435,"byte_end":254453,"line_start":3097,"line_end":3097,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":4474},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254375,"byte_end":254393,"line_start":3094,"line_end":3094,"column_start":10,"column_end":28},"name":"MacroTypeVariation","qualname":"::codegen::MacroTypeVariation","value":"pub enum MacroTypeVariation { Signed, Unsigned, }","parent":null,"children":[{"krate":0,"index":4475},{"krate":0,"index":4477}],"decl_id":null,"docs":" Enum for the default type of macro constants.\n","sig":null,"attributes":[{"value":"/ Enum for the default type of macro constants.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254275,"byte_end":254324,"line_start":3092,"line_end":3092,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254574,"byte_end":254580,"line_start":3103,"line_end":3103,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MacroTypeVariation>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convert a `MacroTypeVariation` to its str representation.\n","sig":null,"attributes":[{"value":"/ Convert a `MacroTypeVariation` to its str representation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254501,"byte_end":254562,"line_start":3102,"line_end":3102,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4488},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255644,"byte_end":255653,"line_start":3140,"line_end":3140,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::codegen::AliasVariation::TypeAlias","value":"AliasVariation::TypeAlias","parent":{"krate":0,"index":4487},"children":[],"decl_id":null,"docs":" Convert to regular Rust alias\n","sig":null,"attributes":[{"value":"/ Convert to regular Rust alias","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255606,"byte_end":255639,"line_start":3139,"line_end":3139,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4490},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255753,"byte_end":255760,"line_start":3142,"line_end":3142,"column_start":5,"column_end":12},"name":"NewType","qualname":"::codegen::AliasVariation::NewType","value":"AliasVariation::NewType","parent":{"krate":0,"index":4487},"children":[],"decl_id":null,"docs":" Create a new type by wrapping the old type in a struct and using #[repr(transparent)]\n","sig":null,"attributes":[{"value":"/ Create a new type by wrapping the old type in a struct and using #[repr(transparent)]","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255659,"byte_end":255748,"line_start":3141,"line_end":3141,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4492},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255862,"byte_end":255874,"line_start":3144,"line_end":3144,"column_start":5,"column_end":17},"name":"NewTypeDeref","qualname":"::codegen::AliasVariation::NewTypeDeref","value":"AliasVariation::NewTypeDeref","parent":{"krate":0,"index":4487},"children":[],"decl_id":null,"docs":" Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type\n","sig":null,"attributes":[{"value":"/ Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255766,"byte_end":255857,"line_start":3143,"line_end":3143,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":4487},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255585,"byte_end":255599,"line_start":3138,"line_end":3138,"column_start":10,"column_end":24},"name":"AliasVariation","qualname":"::codegen::AliasVariation","value":"pub enum AliasVariation { TypeAlias, NewType, NewTypeDeref, }","parent":null,"children":[{"krate":0,"index":4488},{"krate":0,"index":4490},{"krate":0,"index":4492}],"decl_id":null,"docs":" Enum for how aliases should be translated.\n","sig":null,"attributes":[{"value":"/ Enum for how aliases should be translated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255488,"byte_end":255534,"line_start":3136,"line_end":3136,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255975,"byte_end":255981,"line_start":3149,"line_end":3149,"column_start":12,"column_end":18},"name":"as_str","qualname":"<AliasVariation>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convert an `AliasVariation` to its str representation.\n","sig":null,"attributes":[{"value":"/ Convert an `AliasVariation` to its str representation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255905,"byte_end":255963,"line_start":3148,"line_end":3148,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1060},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":257321,"byte_end":257326,"line_start":3190,"line_end":3190,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1071},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":259323,"byte_end":259328,"line_start":3246,"line_end":3246,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTy::Extra","value":"type Extra;","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1074},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":259794,"byte_end":259799,"line_start":3261,"line_end":3261,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1083},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":261564,"byte_end":261569,"line_start":3309,"line_end":3309,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::ToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1212},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/features.rs","byte_start":353066,"byte_end":353084,"line_start":137,"line_end":137,"column_start":11,"column_end":29},"name":"LATEST_STABLE_RUST","qualname":"::features::LATEST_STABLE_RUST","value":"RustTarget","parent":null,"children":[],"decl_id":null,"docs":" Latest stable release of Rust\n","sig":null,"attributes":[{"value":"/ Latest stable release of Rust","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/features.rs","byte_start":353022,"byte_end":353055,"line_start":136,"line_end":136,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4602},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377567,"byte_end":377589,"line_start":149,"line_end":149,"column_start":12,"column_end":34},"name":"UsedTemplateParameters","qualname":"::ir::analysis::template_params::UsedTemplateParameters","value":"UsedTemplateParameters {  }","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607}],"decl_id":null,"docs":" An analysis that finds for each IR item its set of template parameters that\n it uses.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item its set of template parameters that","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375394,"byte_end":375473,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ it uses.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375474,"byte_end":375486,"line_start":100,"line_end":100,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375487,"byte_end":375490,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `template_param_usage`, defined as","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375491,"byte_end":375569,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ follows:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375570,"byte_end":375582,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375583,"byte_end":375586,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * If `T` is a named template type parameter, it trivially uses itself:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375587,"byte_end":375661,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375662,"byte_end":375665,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375666,"byte_end":375679,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(T) = { T }","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375680,"byte_end":375715,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375716,"byte_end":375723,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375724,"byte_end":375727,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * If `inst` is a template instantiation, `inst.args` are the template","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375728,"byte_end":375801,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/   instantiation's template arguments, `inst.def` is the template definition","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375802,"byte_end":375881,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/   being instantiated, and `inst.def.params` is the template definition's","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375882,"byte_end":375958,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/   template parameters, then the instantiation's usage is the union of each","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":375959,"byte_end":376037,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/   of its arguments' usages *if* the corresponding template parameter is in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376038,"byte_end":376116,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/   turn used by the template definition:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376117,"byte_end":376160,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376161,"byte_end":376164,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376165,"byte_end":376178,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(inst) = union(","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376179,"byte_end":376218,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/     template_param_usage(inst.args[i])","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376219,"byte_end":376261,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/         for i in 0..length(inst.args.length)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376262,"byte_end":376310,"line_start":121,"line_end":121,"column_start":1,"column_end":49}},{"value":"/             if inst.def.params[i] in template_param_usage(inst.def)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376311,"byte_end":376382,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ )","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376383,"byte_end":376388,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376389,"byte_end":376396,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376397,"byte_end":376400,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ * Finally, for all other IR item kinds, we use our lattice's `join`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376401,"byte_end":376472,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ operation: set union with each successor of the given item's template","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376473,"byte_end":376546,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ parameter usage:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376547,"byte_end":376567,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376568,"byte_end":376571,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376572,"byte_end":376585,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(v) =","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376586,"byte_end":376615,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/     union(template_param_usage(w) for w in successors(v))","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376616,"byte_end":376677,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376678,"byte_end":376685,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376686,"byte_end":376689,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Note that we ignore certain edges in the graph, such as edges from a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376690,"byte_end":376762,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ template declaration to its template parameters' definitions for this","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376763,"byte_end":376836,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"/ analysis. If we didn't, then we would mistakenly determine that ever","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376837,"byte_end":376909,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/ template parameter is always used.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376910,"byte_end":376948,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376949,"byte_end":376952,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The final wrinkle is handling of blacklisted types. Normally, we say that","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":376953,"byte_end":377030,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ the set of whitelisted items is the transitive closure of items explicitly","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377031,"byte_end":377109,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ called out for whitelisting, *without* any items explicitly called out as","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377110,"byte_end":377187,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ blacklisted. However, for the purposes of this analysis's correctness, we","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377188,"byte_end":377265,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/ simplify and consider run the analysis on the full transitive closure of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377266,"byte_end":377342,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ whitelisted items. We do, however, treat instantiations of blacklisted items","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377343,"byte_end":377423,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ specially; see `constrain_instantiation_of_blacklisted_template` and its","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377424,"byte_end":377500,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ documentation for details.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":377501,"byte_end":377531,"line_start":147,"line_end":147,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4632},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":397055,"byte_end":397067,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"CannotDerive","qualname":"::ir::analysis::derive::CannotDerive","value":"CannotDerive {  }","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637}],"decl_id":null,"docs":" An analysis that finds for each IR item whether a trait cannot be derived.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether a trait cannot be derived.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395665,"byte_end":395743,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395744,"byte_end":395747,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `cannot_derive`, defined as follows","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395748,"byte_end":395827,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ for type T:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395828,"byte_end":395843,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395844,"byte_end":395847,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ * If T is Opaque and the layout of the type is known, get this layout as an","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395848,"byte_end":395927,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/   opaquetype and check whether it can derive using trivial checks.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395928,"byte_end":395998,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":395999,"byte_end":396002,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ * If T is Array, a trait cannot be derived if the array is incomplete,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396003,"byte_end":396077,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/   if the length of the array is larger than the limit (unless the trait","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396078,"byte_end":396153,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/   allows it), or the trait cannot be derived for the type of data the array","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396154,"byte_end":396233,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/   contains.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396234,"byte_end":396249,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396250,"byte_end":396253,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * If T is Vector, a trait cannot be derived if the trait cannot be derived","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396254,"byte_end":396332,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/   for the type of data the vector contains.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396333,"byte_end":396380,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396381,"byte_end":396384,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396385,"byte_end":396465,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/   the trait cannot be derived if the trait cannot be derived for type T","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396466,"byte_end":396541,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/   refers to.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396542,"byte_end":396558,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396559,"byte_end":396562,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * If T is a compound type, the trait cannot be derived if the trait cannot","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396563,"byte_end":396641,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   be derived for any of its base members or fields.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396642,"byte_end":396697,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396698,"byte_end":396701,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * If T is an instantiation of an abstract template definition, the trait","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396702,"byte_end":396778,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/   cannot be derived if any of the template arguments or template definition","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396779,"byte_end":396858,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/   cannot derive the trait.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396859,"byte_end":396889,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396890,"byte_end":396893,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * For all other (simple) types, compiler and standard library limitations","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396894,"byte_end":396971,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/   dictate whether the trait is implemented.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":396972,"byte_end":397019,"line_start":61,"line_end":61,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4646},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421020,"byte_end":421022,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::analysis::has_vtable::HasVtableResult::No","value":"HasVtableResult::No","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" The item does not have a vtable pointer.\n","sig":null,"attributes":[{"value":"/ The item does not have a vtable pointer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":420971,"byte_end":421015,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4648},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421110,"byte_end":421123,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"SelfHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::SelfHasVtable","value":"HasVtableResult::SelfHasVtable","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" The item has a vtable and the actual vtable pointer is within this item.\n","sig":null,"attributes":[{"value":"/ The item has a vtable and the actual vtable pointer is within this item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421029,"byte_end":421105,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4650},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421220,"byte_end":421233,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"BaseHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::BaseHasVtable","value":"HasVtableResult::BaseHasVtable","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" The item has a vtable, but the actual vtable pointer is in a base\n member.\n","sig":null,"attributes":[{"value":"/ The item has a vtable, but the actual vtable pointer is in a base","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421130,"byte_end":421199,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ member.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421204,"byte_end":421215,"line_start":21,"line_end":21,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":4645},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":420949,"byte_end":420964,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"HasVtableResult","qualname":"::ir::analysis::has_vtable::HasVtableResult","value":"pub enum HasVtableResult { No, SelfHasVtable, BaseHasVtable, }","parent":null,"children":[{"krate":0,"index":4646},{"krate":0,"index":4648},{"krate":0,"index":4650}],"decl_id":null,"docs":" The result of the `HasVtableAnalysis` for an individual item.\n","sig":null,"attributes":[{"value":"/ The result of the `HasVtableAnalysis` for an individual item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":420812,"byte_end":420877,"line_start":11,"line_end":11,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421427,"byte_end":421431,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"join","qualname":"<HasVtableResult>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421364,"byte_end":421415,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4667},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":422385,"byte_end":422402,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"HasVtableAnalysis","qualname":"::ir::analysis::has_vtable::HasVtableAnalysis","value":"HasVtableAnalysis {  }","parent":null,"children":[{"krate":0,"index":4669},{"krate":0,"index":4670},{"krate":0,"index":4671}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has vtable or not","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has vtable or not","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421789,"byte_end":421861,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421862,"byte_end":421865,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ We use the monotone function `has vtable`, defined as follows:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421866,"byte_end":421932,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421933,"byte_end":421936,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias, an indirection to another type,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421937,"byte_end":422015,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/   or a reference of a type, T has vtable if the type T refers to has vtable.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":422016,"byte_end":422096,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ * If T is a compound type, T has vtable if we saw a virtual function when","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":422097,"byte_end":422174,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/   parsing it or any of its base member has vtable.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":422175,"byte_end":422229,"line_start":59,"line_end":59,"column_start":1,"column_end":55}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":422230,"byte_end":422302,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/   vtable if template definition has vtable","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":422303,"byte_end":422349,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4679},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429288,"byte_end":429309,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"HasDestructorAnalysis","qualname":"::ir::analysis::has_destructor::HasDestructorAnalysis","value":"HasDestructorAnalysis {  }","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has a destructor or not","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has a destructor or not","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428399,"byte_end":428477,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428478,"byte_end":428481,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ We use the monotone function `has destructor`, defined as follows:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428482,"byte_end":428552,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428553,"byte_end":428556,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias, or an indirection to another type,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428557,"byte_end":428638,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/   T has a destructor if the type T refers to has a destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428639,"byte_end":428705,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ * If T is a compound type, T has a destructor if we saw a destructor when parsing it,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428706,"byte_end":428795,"line_start":16,"line_end":16,"column_start":1,"column_end":90}},{"value":"/   or if it's a struct, T has a destructor if any of its base members has a destructor,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428796,"byte_end":428886,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/   or if any of its fields have a destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428887,"byte_end":428935,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":428936,"byte_end":429008,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/   a destructor if its template definition has a destructor,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429009,"byte_end":429072,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/   or if any of the template arguments has a destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429073,"byte_end":429132,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ * If T is the type of a field, that field has a destructor if it's not a bitfield,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429133,"byte_end":429219,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/   and if T has a destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429220,"byte_end":429252,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4690},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435542,"byte_end":435565,"line_start":25,"line_end":25,"column_start":12,"column_end":35},"name":"HasTypeParameterInArray","qualname":"::ir::analysis::has_type_param_in_array::HasTypeParameterInArray","value":"HasTypeParameterInArray {  }","parent":null,"children":[{"krate":0,"index":4692},{"krate":0,"index":4693},{"krate":0,"index":4694}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has array or not.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has array or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":434838,"byte_end":434910,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":434911,"byte_end":434914,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `has_type_parameter_in_array`,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":434915,"byte_end":434989,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ defined as follows:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":434990,"byte_end":435013,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435014,"byte_end":435017,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * If T is Array type with type parameter, T trivially has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435018,"byte_end":435080,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435081,"byte_end":435161,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   it has type parameter in array if the type T refers to has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435162,"byte_end":435227,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ * If T is a compound type, it has array if any of base memter or field","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435228,"byte_end":435302,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   has type paramter in array.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435303,"byte_end":435336,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435337,"byte_end":435409,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/   type parameter in array if any of the template arguments or template definition","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435410,"byte_end":435495,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/   has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":435496,"byte_end":435506,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4701},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444427,"byte_end":444435,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"HasFloat","qualname":"::ir::analysis::has_float::HasFloat","value":"HasFloat {  }","parent":null,"children":[{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4705}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has float or not.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has float or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":443808,"byte_end":443880,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":443881,"byte_end":443884,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `has_float`,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":443885,"byte_end":443941,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ defined as follows:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":443942,"byte_end":443965,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":443966,"byte_end":443969,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * If T is float or complex float, T trivially has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":443970,"byte_end":444024,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444025,"byte_end":444105,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   it has float if the type T refers to has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444106,"byte_end":444153,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ * If T is a compound type, it has float if any of base memter or field","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444154,"byte_end":444228,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444229,"byte_end":444239,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444240,"byte_end":444312,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/   float if any of the template arguments or template definition","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444313,"byte_end":444380,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/   has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":444381,"byte_end":444391,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4713},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453272,"byte_end":453281,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"ZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::ZeroSized","value":"SizednessResult::ZeroSized","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" The type is zero-sized.","sig":null,"attributes":[{"value":"/ The type is zero-sized.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453030,"byte_end":453057,"line_start":29,"line_end":29,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453062,"byte_end":453065,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that if it is a C++ type, and is not being used as a base","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453070,"byte_end":453142,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ member, then we must add an `_address` byte to enforce the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453147,"byte_end":453209,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/ unique-address-per-distinct-object-instance rule.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453214,"byte_end":453267,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4715},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453969,"byte_end":453987,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"DependsOnTypeParam","qualname":"::ir::analysis::sizedness::SizednessResult::DependsOnTypeParam","value":"SizednessResult::DependsOnTypeParam","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" Whether this type is zero-sized or not depends on whether a type\n parameter is zero-sized or not.","sig":null,"attributes":[{"value":"/ Whether this type is zero-sized or not depends on whether a type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453288,"byte_end":453356,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/ parameter is zero-sized or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453361,"byte_end":453396,"line_start":37,"line_end":37,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453401,"byte_end":453404,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ For example, given these definitions:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453409,"byte_end":453450,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453455,"byte_end":453458,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453463,"byte_end":453473,"line_start":41,"line_end":41,"column_start":5,"column_end":15}},{"value":"/ template<class T>","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453478,"byte_end":453499,"line_start":42,"line_end":42,"column_start":5,"column_end":26}},{"value":"/ class Flongo : public T {};","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453504,"byte_end":453535,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453540,"byte_end":453543,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ class Empty {};","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453548,"byte_end":453567,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453572,"byte_end":453575,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ class NonEmpty { int x; };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453580,"byte_end":453610,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453615,"byte_end":453622,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453627,"byte_end":453630,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Then `Flongo<Empty>` is zero-sized, and needs an `_address` byte","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453635,"byte_end":453703,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ inserted, while `Flongo<NonEmpty>` is *not* zero-sized, and should *not*","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453708,"byte_end":453784,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ have an `_address` byte inserted.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453789,"byte_end":453826,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453831,"byte_end":453834,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ We don't properly handle this situation correctly right now:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453839,"byte_end":453903,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ https://github.com/rust-lang/rust-bindgen/issues/586","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453908,"byte_end":453964,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4717},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454245,"byte_end":454257,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"NonZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::NonZeroSized","value":"SizednessResult::NonZeroSized","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" Has some size that is known to be greater than zero. That doesn't mean\n it has a static size, but it is not zero sized for sure. In other words,\n it might contain an incomplete array or some other dynamically sized\n type.\n","sig":null,"attributes":[{"value":"/ Has some size that is known to be greater than zero. That doesn't mean","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453994,"byte_end":454068,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ it has a static size, but it is not zero sized for sure. In other words,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454073,"byte_end":454149,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/ it might contain an incomplete array or some other dynamically sized","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454154,"byte_end":454226,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454231,"byte_end":454240,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":4712},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":453008,"byte_end":453023,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"name":"SizednessResult","qualname":"::ir::analysis::sizedness::SizednessResult","value":"pub enum SizednessResult { ZeroSized, DependsOnTypeParam, NonZeroSized, }","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4717}],"decl_id":null,"docs":" The result of the `Sizedness` analysis for an individual item.","sig":null,"attributes":[{"value":"/ The result of the `Sizedness` analysis for an individual item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452503,"byte_end":452569,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452570,"byte_end":452573,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a chain lattice of the form:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452574,"byte_end":452614,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452615,"byte_end":452618,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452619,"byte_end":452632,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/                   NonZeroSized","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452633,"byte_end":452667,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                        |","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452668,"byte_end":452696,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/                DependsOnTypeParam","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452697,"byte_end":452734,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/                        |","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452735,"byte_end":452763,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/                     ZeroSized","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452764,"byte_end":452797,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452798,"byte_end":452805,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452806,"byte_end":452809,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ We initially assume that all types are `ZeroSized` and then update our","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452810,"byte_end":452884,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ understanding as we learn more about each type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":452885,"byte_end":452936,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454458,"byte_end":454462,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"join","qualname":"<SizednessResult>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454395,"byte_end":454446,"line_start":72,"line_end":72,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4734},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455294,"byte_end":455311,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"SizednessAnalysis","qualname":"::ir::analysis::sizedness::SizednessAnalysis","value":"SizednessAnalysis {  }","parent":null,"children":[{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738}],"decl_id":null,"docs":" An analysis that computes the sizedness of all types.","sig":null,"attributes":[{"value":"/ An analysis that computes the sizedness of all types.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454820,"byte_end":454877,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454878,"byte_end":454881,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * For types with known sizes -- for example pointers, scalars, etc... --","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454882,"byte_end":454958,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ they are assigned `NonZeroSized`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454959,"byte_end":454996,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454997,"byte_end":455000,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * For compound structure types with one or more fields, they are assigned","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455001,"byte_end":455078,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ `NonZeroSized`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455079,"byte_end":455098,"line_start":98,"line_end":98,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455099,"byte_end":455102,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * For compound structure types without any fields, the results of the bases","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455103,"byte_end":455182,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ are `join`ed.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455183,"byte_end":455200,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455201,"byte_end":455204,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ * For type parameters, `DependsOnTypeParam` is assigned.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455205,"byte_end":455265,"line_start":103,"line_end":103,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1814},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361244,"byte_end":361248,"line_start":81,"line_end":81,"column_start":10,"column_end":14},"name":"Node","qualname":"::ir::analysis::MonotoneFramework::Node","value":"type Node: Copy;","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" The type of node in our dependency graph.","sig":null,"attributes":[{"value":"/ The type of node in our dependency graph.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361038,"byte_end":361083,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361088,"byte_end":361091,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is just generic (and not `ItemId`) so that we can easily unit test","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361096,"byte_end":361171,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ without constructing real `Item`s and their `ItemId`s.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361176,"byte_end":361234,"line_start":80,"line_end":80,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1815},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361529,"byte_end":361534,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::analysis::MonotoneFramework::Extra","value":"type Extra: Sized;","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Any extra data that is needed during computation.","sig":null,"attributes":[{"value":"/ Any extra data that is needed during computation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361261,"byte_end":361314,"line_start":83,"line_end":83,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361319,"byte_end":361322,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Again, this is just generic (and not `&BindgenContext`) so that we can","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361327,"byte_end":361401,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ easily unit test without constructing real `BindgenContext`s full of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361406,"byte_end":361478,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ real `Item`s and real `ItemId`s.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361483,"byte_end":361519,"line_start":87,"line_end":87,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1816},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361731,"byte_end":361737,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"Output","qualname":"::ir::analysis::MonotoneFramework::Output","value":"type Output: From<Self> + fmt::Debug;","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" The final output of this analysis. Once we have reached a fix-point, we\n convert `self` into this type, and return it as the final result of the\n analysis.\n","sig":null,"attributes":[{"value":"/ The final output of this analysis. Once we have reached a fix-point, we","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361548,"byte_end":361623,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ convert `self` into this type, and return it as the final result of the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361628,"byte_end":361703,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ analysis.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361708,"byte_end":361721,"line_start":92,"line_end":92,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4760},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464221,"byte_end":464225,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"None","qualname":"::ir::annotations::FieldAccessorKind::None","value":"FieldAccessorKind::None","parent":{"krate":0,"index":4759},"children":[],"decl_id":null,"docs":" No accessor.\n","sig":null,"attributes":[{"value":"/ No accessor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464200,"byte_end":464216,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4762},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464255,"byte_end":464262,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Regular","qualname":"::ir::annotations::FieldAccessorKind::Regular","value":"FieldAccessorKind::Regular","parent":{"krate":0,"index":4759},"children":[],"decl_id":null,"docs":" Plain accessor.\n","sig":null,"attributes":[{"value":"/ Plain accessor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464231,"byte_end":464250,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4764},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464293,"byte_end":464299,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Unsafe","qualname":"::ir::annotations::FieldAccessorKind::Unsafe","value":"FieldAccessorKind::Unsafe","parent":{"krate":0,"index":4759},"children":[],"decl_id":null,"docs":" Unsafe accessor.\n","sig":null,"attributes":[{"value":"/ Unsafe accessor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464268,"byte_end":464288,"line_start":16,"line_end":16,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4766},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464333,"byte_end":464342,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Immutable","qualname":"::ir::annotations::FieldAccessorKind::Immutable","value":"FieldAccessorKind::Immutable","parent":{"krate":0,"index":4759},"children":[],"decl_id":null,"docs":" Immutable accessor.\n","sig":null,"attributes":[{"value":"/ Immutable accessor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464305,"byte_end":464328,"line_start":18,"line_end":18,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":4759},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464176,"byte_end":464193,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"FieldAccessorKind","qualname":"::ir::annotations::FieldAccessorKind","value":"pub enum FieldAccessorKind { None, Regular, Unsafe, Immutable, }","parent":null,"children":[{"krate":0,"index":4760},{"krate":0,"index":4762},{"krate":0,"index":4764},{"krate":0,"index":4766}],"decl_id":null,"docs":" What kind of accessor should we provide for a field?\n","sig":null,"attributes":[{"value":"/ What kind of accessor should we provide for a field?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464069,"byte_end":464125,"line_start":9,"line_end":9,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4776},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464599,"byte_end":464610,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"Annotations","qualname":"::ir::annotations::Annotations","value":"Annotations {  }","parent":null,"children":[{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786}],"decl_id":null,"docs":" Annotations for a given item, or a field.","sig":null,"attributes":[{"value":"/ Annotations for a given item, or a field.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464347,"byte_end":464392,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464393,"byte_end":464396,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ You can see the kind of comments that are accepted in the Doxygen","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464397,"byte_end":464466,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ documentation:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464467,"byte_end":464485,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464486,"byte_end":464489,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":464490,"byte_end":464552,"line_start":27,"line_end":27,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466943,"byte_end":466946,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Annotations>::new","value":"pub fn new(&clang::Cursor) -> Option<Annotations>","parent":null,"children":[],"decl_id":null,"docs":" Construct new annotations for the given cursor and its bindgen comments\n (if any).\n","sig":null,"attributes":[{"value":"/ Construct new annotations for the given cursor and its bindgen comments","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466838,"byte_end":466913,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ (if any).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466918,"byte_end":466931,"line_start":97,"line_end":97,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467284,"byte_end":467288,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"hide","qualname":"<Annotations>::hide","value":"pub fn hide(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be hidden?\n","sig":null,"attributes":[{"value":"/ Should this type be hidden?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467241,"byte_end":467272,"line_start":110,"line_end":110,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467378,"byte_end":467384,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Annotations>::opaque","value":"pub fn opaque(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be opaque?\n","sig":null,"attributes":[{"value":"/ Should this type be opaque?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467335,"byte_end":467366,"line_start":115,"line_end":115,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468011,"byte_end":468025,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"use_instead_of","qualname":"<Annotations>::use_instead_of","value":"pub fn use_instead_of(&Self) -> Option<&[String]>","parent":null,"children":[],"decl_id":null,"docs":" For a given type, indicates the type it should replace.","sig":null,"attributes":[{"value":"/ For a given type, indicates the type it should replace.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467433,"byte_end":467492,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467497,"byte_end":467500,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For example, in the following code:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467505,"byte_end":467544,"line_start":122,"line_end":122,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467549,"byte_end":467552,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467557,"byte_end":467567,"line_start":124,"line_end":124,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467572,"byte_end":467575,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ /** <div rustbindgen replaces=\"Bar\"></div> */","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467580,"byte_end":467629,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/ struct Foo { int x; };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467634,"byte_end":467660,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467665,"byte_end":467668,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ struct Bar { char foo; };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467673,"byte_end":467702,"line_start":129,"line_end":129,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467707,"byte_end":467714,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467719,"byte_end":467722,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ the generated code would look something like:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467727,"byte_end":467776,"line_start":132,"line_end":132,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467781,"byte_end":467784,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467789,"byte_end":467796,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ /** <div rustbindgen replaces=\"Bar\"></div> */","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467801,"byte_end":467850,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ struct Bar {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467855,"byte_end":467871,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/     x: ::std::os::raw::c_int,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467876,"byte_end":467909,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467914,"byte_end":467920,"line_start":138,"line_end":138,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467925,"byte_end":467932,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467937,"byte_end":467940,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ That is, code for `Foo` is used to generate `Bar`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":467945,"byte_end":467999,"line_start":141,"line_end":141,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468198,"byte_end":468205,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"derives","qualname":"<Annotations>::derives","value":"pub fn derives(&Self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The list of derives that have been specified in this annotation.\n","sig":null,"attributes":[{"value":"/ The list of derives that have been specified in this annotation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468118,"byte_end":468186,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468323,"byte_end":468336,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"disallow_copy","qualname":"<Annotations>::disallow_copy","value":"pub fn disallow_copy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Copy` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Copy` trait?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468261,"byte_end":468311,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468455,"byte_end":468469,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"disallow_debug","qualname":"<Annotations>::disallow_debug","value":"pub fn disallow_debug(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Debug` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Debug` trait?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468392,"byte_end":468443,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468591,"byte_end":468607,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"disallow_default","qualname":"<Annotations>::disallow_default","value":"pub fn disallow_default(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Default` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Default` trait?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468526,"byte_end":468579,"line_start":161,"line_end":161,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468711,"byte_end":468725,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"private_fields","qualname":"<Annotations>::private_fields","value":"pub fn private_fields(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Should the fields be private?\n","sig":null,"attributes":[{"value":"/ Should the fields be private?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468666,"byte_end":468699,"line_start":166,"line_end":166,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468870,"byte_end":468883,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"accessor_kind","qualname":"<Annotations>::accessor_kind","value":"pub fn accessor_kind(&Self) -> Option<FieldAccessorKind>","parent":null,"children":[],"decl_id":null,"docs":" What kind of accessors should we provide for this type's fields?\n","sig":null,"attributes":[{"value":"/ What kind of accessors should we provide for this type's fields?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":468790,"byte_end":468858,"line_start":171,"line_end":171,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":470598,"byte_end":470619,"line_start":217,"line_end":217,"column_start":12,"column_end":33},"name":"constify_enum_variant","qualname":"<Annotations>::constify_enum_variant","value":"pub fn constify_enum_variant(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we've parsed a \"constant\" attribute.\n","sig":null,"attributes":[{"value":"/ Returns whether we've parsed a \"constant\" attribute.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":470530,"byte_end":470586,"line_start":216,"line_end":216,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4809},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475086,"byte_end":475092,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ir::comp::CompKind::Struct","value":"CompKind::Struct","parent":{"krate":0,"index":4808},"children":[],"decl_id":null,"docs":" A struct.\n","sig":null,"attributes":[{"value":"/ A struct.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475068,"byte_end":475081,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4811},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475115,"byte_end":475120,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Union","qualname":"::ir::comp::CompKind::Union","value":"CompKind::Union","parent":{"krate":0,"index":4808},"children":[],"decl_id":null,"docs":" A union.\n","sig":null,"attributes":[{"value":"/ A union.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475098,"byte_end":475110,"line_start":27,"line_end":27,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":4808},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475053,"byte_end":475061,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"CompKind","qualname":"::ir::comp::CompKind","value":"pub enum CompKind { Struct, Union, }","parent":null,"children":[{"krate":0,"index":4809},{"krate":0,"index":4811}],"decl_id":null,"docs":" The kind of compound type.\n","sig":null,"attributes":[{"value":"/ The kind of compound type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":474972,"byte_end":475002,"line_start":22,"line_end":22,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4822},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475321,"byte_end":475332,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"Constructor","qualname":"::ir::comp::MethodKind::Constructor","value":"MethodKind::Constructor","parent":{"krate":0,"index":4821},"children":[],"decl_id":null,"docs":" A constructor. We represent it as method for convenience, to avoid code\n duplication.\n","sig":null,"attributes":[{"value":"/ A constructor. We represent it as method for convenience, to avoid code","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475220,"byte_end":475295,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ duplication.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475300,"byte_end":475316,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4824},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475360,"byte_end":475370,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"name":"Destructor","qualname":"::ir::comp::MethodKind::Destructor","value":"MethodKind::Destructor","parent":{"krate":0,"index":4821},"children":[],"decl_id":null,"docs":" A destructor.\n","sig":null,"attributes":[{"value":"/ A destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475338,"byte_end":475355,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":4826},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475406,"byte_end":475423,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"name":"VirtualDestructor","qualname":"::ir::comp::MethodKind::VirtualDestructor","value":"MethodKind::VirtualDestructor { pure_virtual }","parent":{"krate":0,"index":4821},"children":[],"decl_id":null,"docs":" A virtual destructor.\n","sig":null,"attributes":[{"value":"/ A virtual destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475376,"byte_end":475401,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4828},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475529,"byte_end":475535,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Static","qualname":"::ir::comp::MethodKind::Static","value":"MethodKind::Static","parent":{"krate":0,"index":4821},"children":[],"decl_id":null,"docs":" A static method.\n","sig":null,"attributes":[{"value":"/ A static method.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475504,"byte_end":475524,"line_start":44,"line_end":44,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4830},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475566,"byte_end":475572,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::MethodKind::Normal","value":"MethodKind::Normal","parent":{"krate":0,"index":4821},"children":[],"decl_id":null,"docs":" A normal method.\n","sig":null,"attributes":[{"value":"/ A normal method.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475541,"byte_end":475561,"line_start":46,"line_end":46,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":4832},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475604,"byte_end":475611,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::MethodKind::Virtual","value":"MethodKind::Virtual { pure_virtual }","parent":{"krate":0,"index":4821},"children":[],"decl_id":null,"docs":" A virtual method.\n","sig":null,"attributes":[{"value":"/ A virtual method.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475578,"byte_end":475599,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":4821},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475203,"byte_end":475213,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"MethodKind","qualname":"::ir::comp::MethodKind","value":"pub enum MethodKind {\n    Constructor,\n    Destructor,\n    VirtualDestructor {\n        pure_virtual: bool,\n    },\n    Static,\n    Normal,\n    Virtual {\n        pure_virtual: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4824},{"krate":0,"index":4826},{"krate":0,"index":4828},{"krate":0,"index":4830},{"krate":0,"index":4832}],"decl_id":null,"docs":" The kind of C++ method.\n","sig":null,"attributes":[{"value":"/ The kind of C++ method.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475125,"byte_end":475152,"line_start":31,"line_end":31,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475757,"byte_end":475770,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"is_destructor","qualname":"<MethodKind>::is_destructor","value":"pub fn is_destructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a destructor method?\n","sig":null,"attributes":[{"value":"/ Is this a destructor method?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475713,"byte_end":475745,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476015,"byte_end":476030,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"is_pure_virtual","qualname":"<MethodKind>::is_pure_virtual","value":"pub fn is_pure_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a pure virtual method?\n","sig":null,"attributes":[{"value":"/ Is this a pure virtual method?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475969,"byte_end":476003,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4843},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476343,"byte_end":476349,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Method","qualname":"::ir::comp::Method","value":"Method {  }","parent":null,"children":[{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846}],"decl_id":null,"docs":" A struct representing a C++ method, either static, normal, or virtual.\n","sig":null,"attributes":[{"value":"/ A struct representing a C++ method, either static, normal, or virtual.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476240,"byte_end":476314,"line_start":76,"line_end":76,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476669,"byte_end":476672,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Method>::new","value":"pub fn new(MethodKind, FunctionId, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Method`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Method`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476628,"byte_end":476657,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476916,"byte_end":476920,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"kind","qualname":"<Method>::kind","value":"pub fn kind(&Self) -> MethodKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of method is this?\n","sig":null,"attributes":[{"value":"/ What kind of method is this?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476872,"byte_end":476904,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477011,"byte_end":477025,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"is_constructor","qualname":"<Method>::is_constructor","value":"pub fn is_constructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a constructor?\n","sig":null,"attributes":[{"value":"/ Is this a constructor?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476973,"byte_end":476999,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477140,"byte_end":477150,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Method>::is_virtual","value":"pub fn is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a virtual method?\n","sig":null,"attributes":[{"value":"/ Is this a virtual method?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477099,"byte_end":477128,"line_start":112,"line_end":112,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477378,"byte_end":477387,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"is_static","qualname":"<Method>::is_static","value":"pub fn is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a static method?\n","sig":null,"attributes":[{"value":"/ Is this a static method?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477338,"byte_end":477366,"line_start":121,"line_end":121,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477528,"byte_end":477537,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"signature","qualname":"<Method>::signature","value":"pub fn signature(&Self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Get the id for the `Function` signature for this method.\n","sig":null,"attributes":[{"value":"/ Get the id for the `Function` signature for this method.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477456,"byte_end":477516,"line_start":126,"line_end":126,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477644,"byte_end":477652,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Method>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a const qualified method?\n","sig":null,"attributes":[{"value":"/ Is this a const qualified method?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":477595,"byte_end":477632,"line_start":131,"line_end":131,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4849},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478627,"byte_end":478639,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"BitfieldUnit","qualname":"::ir::comp::BitfieldUnit","value":"BitfieldUnit {  }","parent":null,"children":[{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852}],"decl_id":null,"docs":" A contiguous set of logical bitfields that live within the same physical\n allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section\n 2.4.II.1 in the Itanium C++\n ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).\n","sig":null,"attributes":[{"value":"/ A contiguous set of logical bitfields that live within the same physical","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478341,"byte_end":478417,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/ allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478418,"byte_end":478493,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ 2.4.II.1 in the Itanium C++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478494,"byte_end":478525,"line_start":163,"line_end":163,"column_start":1,"column_end":32}},{"value":"/ ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478526,"byte_end":478598,"line_start":164,"line_end":164,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478917,"byte_end":478920,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"nth","qualname":"<BitfieldUnit>::nth","value":"pub fn nth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the 1-based index of this bitfield unit within its containing\n struct. Useful for generating a Rust struct's field name for this unit\n of bitfields.\n","sig":null,"attributes":[{"value":"/ Get the 1-based index of this bitfield unit within its containing","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478735,"byte_end":478804,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ struct. Useful for generating a Rust struct's field name for this unit","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478809,"byte_end":478883,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ of bitfields.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478888,"byte_end":478905,"line_start":175,"line_end":175,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479034,"byte_end":479040,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"layout","qualname":"<BitfieldUnit>::layout","value":"pub fn layout(&Self) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Get the layout within which these bitfields reside.\n","sig":null,"attributes":[{"value":"/ Get the layout within which these bitfields reside.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478967,"byte_end":479022,"line_start":180,"line_end":180,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479142,"byte_end":479151,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"bitfields","qualname":"<BitfieldUnit>::bitfields","value":"pub fn bitfields(&Self) -> &[Bitfield]","parent":null,"children":[],"decl_id":null,"docs":" Get the bitfields within this unit.\n","sig":null,"attributes":[{"value":"/ Get the bitfields within this unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479091,"byte_end":479130,"line_start":185,"line_end":185,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4856},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479316,"byte_end":479326,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"name":"DataMember","qualname":"::ir::comp::Field::DataMember","value":"Field::DataMember(FieldData)","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" A normal data member.\n","sig":null,"attributes":[{"value":"/ A normal data member.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479286,"byte_end":479311,"line_start":194,"line_end":194,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4859},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479414,"byte_end":479423,"line_start":198,"line_end":198,"column_start":5,"column_end":14},"name":"Bitfields","qualname":"::ir::comp::Field::Bitfields","value":"Field::Bitfields(BitfieldUnit)","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" A physical allocation unit containing many logical bitfields.\n","sig":null,"attributes":[{"value":"/ A physical allocation unit containing many logical bitfields.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479344,"byte_end":479409,"line_start":197,"line_end":197,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":4855},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479274,"byte_end":479279,"line_start":193,"line_end":193,"column_start":10,"column_end":15},"name":"Field","qualname":"::ir::comp::Field","value":"pub enum Field { DataMember(FieldData), Bitfields(BitfieldUnit), }","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4859}],"decl_id":null,"docs":" A struct representing a C++ field.\n","sig":null,"attributes":[{"value":"/ A struct representing a C++ field.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479209,"byte_end":479247,"line_start":191,"line_end":191,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479499,"byte_end":479505,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"layout","qualname":"<Field>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Get this field's layout.\n","sig":null,"attributes":[{"value":"/ Get this field's layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479459,"byte_end":479487,"line_start":202,"line_end":202,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4864},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":482383,"byte_end":482391,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"Bitfield","qualname":"::ir::comp::Bitfield","value":"Bitfield {  }","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868}],"decl_id":null,"docs":" A logical bitfield within some physical bitfield allocation unit.\n","sig":null,"attributes":[{"value":"/ A logical bitfield within some physical bitfield allocation unit.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":482285,"byte_end":482354,"line_start":310,"line_end":310,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483325,"byte_end":483341,"line_start":346,"line_end":346,"column_start":12,"column_end":28},"name":"offset_into_unit","qualname":"<Bitfield>::offset_into_unit","value":"pub fn offset_into_unit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the index of the bit within this bitfield's allocation unit where\n this bitfield begins.\n","sig":null,"attributes":[{"value":"/ Get the index of the bit within this bitfield's allocation unit where","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483210,"byte_end":483283,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ this bitfield begins.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483288,"byte_end":483313,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483527,"byte_end":483531,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"mask","qualname":"<Bitfield>::mask","value":"pub fn mask(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the mask value that when &'ed with this bitfield's allocation unit\n produces this bitfield's value.\n","sig":null,"attributes":[{"value":"/ Get the mask value that when &'ed with this bitfield's allocation unit","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483401,"byte_end":483475,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ produces this bitfield's value.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483480,"byte_end":483515,"line_start":351,"line_end":351,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483895,"byte_end":483900,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"width","qualname":"<Bitfield>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the bit width of this bitfield.\n","sig":null,"attributes":[{"value":"/ Get the bit width of this bitfield.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483844,"byte_end":483883,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484156,"byte_end":484167,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"getter_name","qualname":"<Bitfield>::getter_name","value":"pub fn getter_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust getter for this bitfield.","sig":null,"attributes":[{"value":"/ Name of the generated Rust getter for this bitfield.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":483972,"byte_end":484028,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484033,"byte_end":484036,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Panics if called before assigning bitfield accessor names or if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484041,"byte_end":484108,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ this bitfield have no name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484113,"byte_end":484144,"line_start":373,"line_end":373,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484674,"byte_end":484685,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"setter_name","qualname":"<Bitfield>::setter_name","value":"pub fn setter_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust setter for this bitfield.","sig":null,"attributes":[{"value":"/ Name of the generated Rust setter for this bitfield.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484490,"byte_end":484546,"line_start":385,"line_end":385,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484551,"byte_end":484554,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Panics if called before assigning bitfield accessor names or if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484559,"byte_end":484626,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/ this bitfield have no name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":484631,"byte_end":484662,"line_start":388,"line_end":388,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4887},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":500304,"byte_end":500313,"line_start":878,"line_end":878,"column_start":12,"column_end":21},"name":"FieldData","qualname":"::ir::comp::FieldData","value":"FieldData {  }","parent":null,"children":[{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894}],"decl_id":null,"docs":" Common data shared across different field types.\n","sig":null,"attributes":[{"value":"/ Common data shared across different field types.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":500216,"byte_end":500268,"line_start":876,"line_end":876,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4900},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501630,"byte_end":501636,"line_start":939,"line_end":939,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::BaseKind::Normal","value":"BaseKind::Normal","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":" Normal inheritance, like:","sig":null,"attributes":[{"value":"/ Normal inheritance, like:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501530,"byte_end":501559,"line_start":934,"line_end":934,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501564,"byte_end":501567,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501572,"byte_end":501582,"line_start":936,"line_end":936,"column_start":5,"column_end":15}},{"value":"/ class A : public B {};","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501587,"byte_end":501613,"line_start":937,"line_end":937,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501618,"byte_end":501625,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4902},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501750,"byte_end":501757,"line_start":945,"line_end":945,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::BaseKind::Virtual","value":"BaseKind::Virtual","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":" Virtual inheritance, like:","sig":null,"attributes":[{"value":"/ Virtual inheritance, like:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501642,"byte_end":501672,"line_start":940,"line_end":940,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501677,"byte_end":501680,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501685,"byte_end":501695,"line_start":942,"line_end":942,"column_start":5,"column_end":15}},{"value":"/ class A: public virtual B {};","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501700,"byte_end":501733,"line_start":943,"line_end":943,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501738,"byte_end":501745,"line_start":944,"line_end":944,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":4899},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501515,"byte_end":501523,"line_start":933,"line_end":933,"column_start":10,"column_end":18},"name":"BaseKind","qualname":"::ir::comp::BaseKind","value":"pub enum BaseKind { Normal, Virtual, }","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":4902}],"decl_id":null,"docs":" The kind of inheritance a base class is using.\n","sig":null,"attributes":[{"value":"/ The kind of inheritance a base class is using.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501416,"byte_end":501466,"line_start":931,"line_end":931,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":4914},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501815,"byte_end":501819,"line_start":950,"line_end":950,"column_start":12,"column_end":16},"name":"Base","qualname":"::ir::comp::Base","value":"Base { ty, kind, field_name, is_pub }","parent":null,"children":[{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918}],"decl_id":null,"docs":" A base class.\n","sig":null,"attributes":[{"value":"/ A base class.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501762,"byte_end":501779,"line_start":948,"line_end":948,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4915},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501867,"byte_end":501869,"line_start":952,"line_end":952,"column_start":9,"column_end":11},"name":"ty","qualname":"::ir::comp::Base::ty","value":"ir::context::TypeId","parent":{"krate":0,"index":4914},"children":[],"decl_id":null,"docs":" The type of this base class.\n","sig":null,"attributes":[{"value":"/ The type of this base class.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501826,"byte_end":501858,"line_start":951,"line_end":951,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4916},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501932,"byte_end":501936,"line_start":954,"line_end":954,"column_start":9,"column_end":13},"name":"kind","qualname":"::ir::comp::Base::kind","value":"ir::comp::BaseKind","parent":{"krate":0,"index":4914},"children":[],"decl_id":null,"docs":" The kind of inheritance we're doing.\n","sig":null,"attributes":[{"value":"/ The kind of inheritance we're doing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501883,"byte_end":501923,"line_start":953,"line_end":953,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4917},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502019,"byte_end":502029,"line_start":956,"line_end":956,"column_start":9,"column_end":19},"name":"field_name","qualname":"::ir::comp::Base::field_name","value":"std::string::String","parent":{"krate":0,"index":4914},"children":[],"decl_id":null,"docs":" Name of the field in which this base should be stored.\n","sig":null,"attributes":[{"value":"/ Name of the field in which this base should be stored.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":501952,"byte_end":502010,"line_start":955,"line_end":955,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4918},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502103,"byte_end":502109,"line_start":958,"line_end":958,"column_start":9,"column_end":15},"name":"is_pub","qualname":"::ir::comp::Base::is_pub","value":"bool","parent":{"krate":0,"index":4914},"children":[],"decl_id":null,"docs":" Whether this base is inherited from publically.\n","sig":null,"attributes":[{"value":"/ Whether this base is inherited from publically.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502043,"byte_end":502094,"line_start":957,"line_end":957,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502200,"byte_end":502210,"line_start":963,"line_end":963,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Base>::is_virtual","value":"pub fn is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class is inheriting virtually.\n","sig":null,"attributes":[{"value":"/ Whether this base class is inheriting virtually.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502136,"byte_end":502188,"line_start":962,"line_end":962,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502357,"byte_end":502373,"line_start":968,"line_end":968,"column_start":12,"column_end":28},"name":"requires_storage","qualname":"<Base>::requires_storage","value":"pub fn requires_storage(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class should have it's own field for storage.\n","sig":null,"attributes":[{"value":"/ Whether this base class should have it's own field for storage.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502278,"byte_end":502345,"line_start":967,"line_end":967,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502979,"byte_end":502988,"line_start":988,"line_end":988,"column_start":12,"column_end":21},"name":"is_public","qualname":"<Base>::is_public","value":"pub fn is_public(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base is inherited from publically.\n","sig":null,"attributes":[{"value":"/ Whether this base is inherited from publically.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502916,"byte_end":502967,"line_start":987,"line_end":987,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4923},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":503255,"byte_end":503263,"line_start":999,"line_end":999,"column_start":12,"column_end":20},"name":"CompInfo","qualname":"::ir::comp::CompInfo","value":"CompInfo {  }","parent":null,"children":[{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4932},{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4939}],"decl_id":null,"docs":" A compound type.","sig":null,"attributes":[{"value":"/ A compound type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":503035,"byte_end":503055,"line_start":993,"line_end":993,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":503056,"byte_end":503059,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ Either a struct or union, a compound type is built up from the combination","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":503060,"byte_end":503138,"line_start":995,"line_end":995,"column_start":1,"column_end":79}},{"value":"/ of fields which also are associated with their own (potentially compound)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":503139,"byte_end":503216,"line_start":996,"line_end":996,"column_start":1,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":503217,"byte_end":503226,"line_start":997,"line_end":997,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":505772,"byte_end":505775,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<CompInfo>::new","value":"pub fn new(CompKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type.\n","sig":null,"attributes":[{"value":"/ Construct a new compound type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":505726,"byte_end":505760,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506810,"byte_end":506816,"line_start":1103,"line_end":1103,"column_start":12,"column_end":18},"name":"layout","qualname":"<CompInfo>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Compute the layout of this type.","sig":null,"attributes":[{"value":"/ Compute the layout of this type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506411,"byte_end":506447,"line_start":1095,"line_end":1095,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506452,"byte_end":506455,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ This is called as a fallback under some circumstances where LLVM doesn't","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506460,"byte_end":506536,"line_start":1097,"line_end":1097,"column_start":5,"column_end":81}},{"value":"/ give us the correct layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506541,"byte_end":506572,"line_start":1098,"line_end":1098,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506577,"byte_end":506580,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ If we're a union without known layout, we try to compute it from our","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506585,"byte_end":506657,"line_start":1100,"line_end":1100,"column_start":5,"column_end":77}},{"value":"/ members. This is not ideal, but clang fails to report the size for these","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506662,"byte_end":506738,"line_start":1101,"line_end":1101,"column_start":5,"column_end":81}},{"value":"/ kind of unions, see test/headers/template_union.hpp","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":506743,"byte_end":506798,"line_start":1102,"line_end":1102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":507779,"byte_end":507785,"line_start":1136,"line_end":1136,"column_start":12,"column_end":18},"name":"fields","qualname":"<CompInfo>::fields","value":"pub fn fields(&Self) -> &[Field]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of fields.\n","sig":null,"attributes":[{"value":"/ Get this type's set of fields.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":507733,"byte_end":507767,"line_start":1135,"line_end":1135,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":508804,"byte_end":508831,"line_start":1164,"line_end":1164,"column_start":12,"column_end":39},"name":"has_too_large_bitfield_unit","qualname":"<CompInfo>::has_too_large_bitfield_unit","value":"pub fn has_too_large_bitfield_unit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we have a too large bitfield unit, in which case we may\n not be able to derive some of the things we should be able to normally\n derive.\n","sig":null,"attributes":[{"value":"/ Returns whether we have a too large bitfield unit, in which case we may","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":508622,"byte_end":508697,"line_start":1161,"line_end":1161,"column_start":5,"column_end":80}},{"value":"/ not be able to derive some of the things we should be able to normally","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":508702,"byte_end":508776,"line_start":1162,"line_end":1162,"column_start":5,"column_end":79}},{"value":"/ derive.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":508781,"byte_end":508792,"line_start":1163,"line_end":1163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509259,"byte_end":509287,"line_start":1178,"line_end":1178,"column_start":12,"column_end":40},"name":"has_non_type_template_params","qualname":"<CompInfo>::has_non_type_template_params","value":"pub fn has_non_type_template_params(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this type have any template parameters that aren't types\n (e.g. int)?\n","sig":null,"attributes":[{"value":"/ Does this type have any template parameters that aren't types","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509162,"byte_end":509227,"line_start":1176,"line_end":1176,"column_start":5,"column_end":70}},{"value":"/ (e.g. int)?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509232,"byte_end":509247,"line_start":1177,"line_end":1177,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509466,"byte_end":509488,"line_start":1184,"line_end":1184,"column_start":12,"column_end":34},"name":"has_own_virtual_method","qualname":"<CompInfo>::has_own_virtual_method","value":"pub fn has_own_virtual_method(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we see a virtual function during parsing?\n Get the has_own_virtual_method boolean.\n","sig":null,"attributes":[{"value":"/ Do we see a virtual function during parsing?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509358,"byte_end":509406,"line_start":1182,"line_end":1182,"column_start":5,"column_end":53}},{"value":"/ Get the has_own_virtual_method boolean.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509411,"byte_end":509454,"line_start":1183,"line_end":1183,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509616,"byte_end":509634,"line_start":1189,"line_end":1189,"column_start":12,"column_end":30},"name":"has_own_destructor","qualname":"<CompInfo>::has_own_destructor","value":"pub fn has_own_destructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did we see a destructor when parsing this type?\n","sig":null,"attributes":[{"value":"/ Did we see a destructor when parsing this type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509553,"byte_end":509604,"line_start":1188,"line_end":1188,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509738,"byte_end":509745,"line_start":1194,"line_end":1194,"column_start":12,"column_end":19},"name":"methods","qualname":"<CompInfo>::methods","value":"pub fn methods(&Self) -> &[Method]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of methods.\n","sig":null,"attributes":[{"value":"/ Get this type's set of methods.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509691,"byte_end":509726,"line_start":1193,"line_end":1193,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509853,"byte_end":509865,"line_start":1199,"line_end":1199,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CompInfo>::constructors","value":"pub fn constructors(&Self) -> &[FunctionId]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of constructors.\n","sig":null,"attributes":[{"value":"/ Get this type's set of constructors.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509801,"byte_end":509841,"line_start":1198,"line_end":1198,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509973,"byte_end":509983,"line_start":1204,"line_end":1204,"column_start":12,"column_end":22},"name":"destructor","qualname":"<CompInfo>::destructor","value":"pub fn destructor(&Self) -> Option<(MethodKind, FunctionId)>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's destructor.\n","sig":null,"attributes":[{"value":"/ Get this type's destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":509930,"byte_end":509961,"line_start":1203,"line_end":1203,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510115,"byte_end":510119,"line_start":1209,"line_end":1209,"column_start":12,"column_end":16},"name":"kind","qualname":"<CompInfo>::kind","value":"pub fn kind(&Self) -> CompKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of compound type is this?\n","sig":null,"attributes":[{"value":"/ What kind of compound type is this?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510064,"byte_end":510103,"line_start":1208,"line_end":1208,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510202,"byte_end":510210,"line_start":1214,"line_end":1214,"column_start":12,"column_end":20},"name":"is_union","qualname":"<CompInfo>::is_union","value":"pub fn is_union(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[{"value":"/ Is this a union?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510170,"byte_end":510190,"line_start":1213,"line_end":1213,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510339,"byte_end":510351,"line_start":1219,"line_end":1219,"column_start":12,"column_end":24},"name":"base_members","qualname":"<CompInfo>::base_members","value":"pub fn base_members(&Self) -> &[Base]","parent":null,"children":[],"decl_id":null,"docs":" The set of types that this one inherits from.\n","sig":null,"attributes":[{"value":"/ The set of types that this one inherits from.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510278,"byte_end":510327,"line_start":1218,"line_end":1218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510474,"byte_end":510481,"line_start":1224,"line_end":1224,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<CompInfo>::from_ty","value":"pub fn from_ty(ItemId, &clang::Type, Option<clang::Cursor>,\n               &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type from a Clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new compound type from a Clang type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":510410,"byte_end":510462,"line_start":1223,"line_end":1223,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":524847,"byte_end":524858,"line_start":1572,"line_end":1572,"column_start":12,"column_end":23},"name":"inner_types","qualname":"<CompInfo>::inner_types","value":"pub fn inner_types(&Self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of types that were declared within this compound type\n (e.g. nested class definitions).\n","sig":null,"attributes":[{"value":"/ Get the set of types that were declared within this compound type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":524725,"byte_end":524794,"line_start":1570,"line_end":1570,"column_start":5,"column_end":74}},{"value":"/ (e.g. nested class definitions).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":524799,"byte_end":524835,"line_start":1571,"line_end":1571,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":525001,"byte_end":525011,"line_start":1577,"line_end":1577,"column_start":12,"column_end":22},"name":"inner_vars","qualname":"<CompInfo>::inner_vars","value":"pub fn inner_vars(&Self) -> &[VarId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of static variables declared within this compound type.\n","sig":null,"attributes":[{"value":"/ Get the set of static variables declared within this compound type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":524918,"byte_end":524989,"line_start":1576,"line_end":1576,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":525199,"byte_end":525217,"line_start":1583,"line_end":1583,"column_start":12,"column_end":30},"name":"found_unknown_attr","qualname":"<CompInfo>::found_unknown_attr","value":"pub fn found_unknown_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we found a field with an opaque type that could potentially mess up\n the layout of this compound type?\n","sig":null,"attributes":[{"value":"/ Have we found a field with an opaque type that could potentially mess up","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":525069,"byte_end":525145,"line_start":1581,"line_end":1581,"column_start":5,"column_end":81}},{"value":"/ the layout of this compound type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":525150,"byte_end":525187,"line_start":1582,"line_end":1582,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":525323,"byte_end":525332,"line_start":1588,"line_end":1588,"column_start":12,"column_end":21},"name":"is_packed","qualname":"<CompInfo>::is_packed","value":"pub fn is_packed(&Self, &BindgenContext, Option<&Layout>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this compound type packed?\n","sig":null,"attributes":[{"value":"/ Is this compound type packed?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":525278,"byte_end":525311,"line_start":1587,"line_end":1587,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":526544,"byte_end":526566,"line_start":1624,"line_end":1624,"column_start":12,"column_end":34},"name":"is_forward_declaration","qualname":"<CompInfo>::is_forward_declaration","value":"pub fn is_forward_declaration(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if compound type has been forward declared\n","sig":null,"attributes":[{"value":"/ Returns true if compound type has been forward declared","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":526473,"byte_end":526532,"line_start":1623,"line_end":1623,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":526707,"byte_end":526729,"line_start":1629,"line_end":1629,"column_start":12,"column_end":34},"name":"compute_bitfield_units","qualname":"<CompInfo>::compute_bitfield_units","value":"pub fn compute_bitfield_units(&mut Self, &BindgenContext)","parent":null,"children":[],"decl_id":null,"docs":" Compute this compound structure's bitfield allocation units.\n","sig":null,"attributes":[{"value":"/ Compute this compound structure's bitfield allocation units.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":526631,"byte_end":526695,"line_start":1628,"line_end":1628,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527042,"byte_end":527060,"line_start":1636,"line_end":1636,"column_start":12,"column_end":30},"name":"deanonymize_fields","qualname":"<CompInfo>::deanonymize_fields","value":"pub fn deanonymize_fields(&mut Self, &BindgenContext)","parent":null,"children":[],"decl_id":null,"docs":" Assign for each anonymous field a generated name.\n","sig":null,"attributes":[{"value":"/ Assign for each anonymous field a generated name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":526977,"byte_end":527030,"line_start":1635,"line_end":1635,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527389,"byte_end":527406,"line_start":1645,"line_end":1645,"column_start":12,"column_end":29},"name":"can_be_rust_union","qualname":"<CompInfo>::can_be_rust_union","value":"pub fn can_be_rust_union(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current union can be represented as a Rust `union`","sig":null,"attributes":[{"value":"/ Returns whether the current union can be represented as a Rust `union`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527167,"byte_end":527241,"line_start":1640,"line_end":1640,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527246,"byte_end":527249,"line_start":1641,"line_end":1641,"column_start":5,"column_end":8}},{"value":"/ Requirements:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527254,"byte_end":527271,"line_start":1642,"line_end":1642,"column_start":5,"column_end":22}},{"value":"/     1. Current RustTarget allows for `untagged_union`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527276,"byte_end":527333,"line_start":1643,"line_end":1643,"column_start":5,"column_end":62}},{"value":"/     2. Each field can derive `Copy`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527338,"byte_end":527377,"line_start":1644,"line_end":1644,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4942},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":534300,"byte_end":534306,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"ItemId","qualname":"::ir::context::ItemId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for some kind of IR item.\n","sig":null,"attributes":[{"value":"/ An identifier for some kind of IR item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":534188,"byte_end":534231,"line_start":36,"line_end":36,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4974},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":536530,"byte_end":536536,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"name":"TypeId","qualname":"::ir::context::TypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Type`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":536694,"byte_end":536704,"line_start":120,"line_end":120,"column_start":19,"column_end":29},"name":"as_type_id","qualname":"<ItemId>::as_type_id","value":"pub fn as_type_id(&Self, &BindgenContext) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` if its associated item is a type,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":536869,"byte_end":536883,"line_start":125,"line_end":125,"column_start":20,"column_end":34},"name":"expect_type_id","qualname":"<ItemId>::expect_type_id","value":"pub fn expect_type_id(&Self, &BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4973},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":537039,"byte_end":537059,"line_start":129,"line_end":129,"column_start":21,"column_end":41},"name":"as_type_id_unchecked","qualname":"<ItemId>::as_type_id_unchecked","value":"pub fn as_type_id_unchecked(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` without actually checking whether\n this id actually points to a `Type`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5006},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":537194,"byte_end":537202,"line_start":135,"line_end":135,"column_start":16,"column_end":24},"name":"ModuleId","qualname":"::ir::context::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Module`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":537364,"byte_end":537376,"line_start":139,"line_end":139,"column_start":19,"column_end":31},"name":"as_module_id","qualname":"<ItemId>::as_module_id","value":"pub fn as_module_id(&Self, &BindgenContext) -> Option<ModuleId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` if its associated item is a\n module, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":537547,"byte_end":537563,"line_start":144,"line_end":144,"column_start":20,"column_end":36},"name":"expect_module_id","qualname":"<ItemId>::expect_module_id","value":"pub fn expect_module_id(&Self, &BindgenContext) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5005},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":537723,"byte_end":537745,"line_start":148,"line_end":148,"column_start":21,"column_end":43},"name":"as_module_id_unchecked","qualname":"<ItemId>::as_module_id_unchecked","value":"pub fn as_module_id_unchecked(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` without actually checking\n whether this id actually points to a `Module`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5038},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":537877,"byte_end":537882,"line_start":154,"line_end":154,"column_start":16,"column_end":21},"name":"VarId","qualname":"::ir::context::VarId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Var`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5035},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":538038,"byte_end":538047,"line_start":158,"line_end":158,"column_start":19,"column_end":28},"name":"as_var_id","qualname":"<ItemId>::as_var_id","value":"pub fn as_var_id(&Self, &BindgenContext) -> Option<VarId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` if its associated item is a var,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5036},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":538209,"byte_end":538222,"line_start":163,"line_end":163,"column_start":20,"column_end":33},"name":"expect_var_id","qualname":"<ItemId>::expect_var_id","value":"pub fn expect_var_id(&Self, &BindgenContext) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":538376,"byte_end":538395,"line_start":167,"line_end":167,"column_start":21,"column_end":40},"name":"as_var_id_unchecked","qualname":"<ItemId>::as_var_id_unchecked","value":"pub fn as_var_id_unchecked(&Self) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` without actually checking whether\n this id actually points to a `Var`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5070},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":538532,"byte_end":538542,"line_start":173,"line_end":173,"column_start":16,"column_end":26},"name":"FunctionId","qualname":"::ir::context::FunctionId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5067},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":538708,"byte_end":538722,"line_start":177,"line_end":177,"column_start":19,"column_end":33},"name":"as_function_id","qualname":"<ItemId>::as_function_id","value":"pub fn as_function_id(&Self, &BindgenContext) -> Option<FunctionId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` if its associated item is a function,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5068},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":538899,"byte_end":538917,"line_start":182,"line_end":182,"column_start":20,"column_end":38},"name":"expect_function_id","qualname":"<ItemId>::expect_function_id","value":"pub fn expect_function_id(&Self, &BindgenContext) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539081,"byte_end":539105,"line_start":186,"line_end":186,"column_start":21,"column_end":45},"name":"as_function_id_unchecked","qualname":"<ItemId>::as_function_id_unchecked","value":"pub fn as_function_id_unchecked(&Self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` without actually checking whether\n this id actually points to a `Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539271,"byte_end":539279,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"as_usize","qualname":"<ItemId>::as_usize","value":"pub fn as_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get a numeric representation of this id.\n","sig":null,"attributes":[{"value":"/ Get a numeric representation of this id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539215,"byte_end":539259,"line_start":196,"line_end":196,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5107},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":542060,"byte_end":542074,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"BindgenContext","qualname":"::ir::context::BindgenContext","value":"BindgenContext {  }","parent":null,"children":[{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139}],"decl_id":null,"docs":" A context used during parsing and generation of structs.\n","sig":null,"attributes":[{"value":"/ A context used during parsing and generation of structs.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":541971,"byte_end":542031,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552053,"byte_end":552069,"line_start":581,"line_end":581,"column_start":12,"column_end":28},"name":"is_target_wasm32","qualname":"<BindgenContext>::is_target_wasm32","value":"pub fn is_target_wasm32(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the target architecture is wasm32\n","sig":null,"attributes":[{"value":"/ Returns `true` if the target architecture is wasm32","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":551986,"byte_end":552041,"line_start":580,"line_end":580,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552415,"byte_end":552420,"line_start":591,"line_end":591,"column_start":12,"column_end":17},"name":"timer","qualname":"<BindgenContext>::timer","value":"pub fn timer<'a>(&Self, &'a str) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer for the current bindgen phase. If time_phases is `true`,\n the timer will print to stderr when it is dropped, otherwise it will do\n nothing.\n","sig":null,"attributes":[{"value":"/ Creates a timer for the current bindgen phase. If time_phases is `true`,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552230,"byte_end":552306,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/ the timer will print to stderr when it is dropped, otherwise it will do","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552311,"byte_end":552386,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ nothing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552391,"byte_end":552403,"line_start":590,"line_end":590,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552636,"byte_end":552655,"line_start":597,"line_end":597,"column_start":12,"column_end":31},"name":"target_pointer_size","qualname":"<BindgenContext>::target_pointer_size","value":"pub fn target_pointer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer width to use for the target for the current\n translation.\n","sig":null,"attributes":[{"value":"/ Returns the pointer width to use for the target for the current","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552536,"byte_end":552603,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ translation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552608,"byte_end":552624,"line_start":596,"line_end":596,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552920,"byte_end":552942,"line_start":606,"line_end":606,"column_start":12,"column_end":34},"name":"currently_parsed_types","qualname":"<BindgenContext>::currently_parsed_types","value":"pub fn currently_parsed_types(&Self) -> &[PartialType]","parent":null,"children":[],"decl_id":null,"docs":" Get the stack of partially parsed types that we are in the middle of\n parsing.\n","sig":null,"attributes":[{"value":"/ Get the stack of partially parsed types that we are in the middle of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552819,"byte_end":552891,"line_start":604,"line_end":604,"column_start":5,"column_end":77}},{"value":"/ parsing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":552896,"byte_end":552908,"line_start":605,"line_end":605,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553228,"byte_end":553241,"line_start":613,"line_end":613,"column_start":12,"column_end":25},"name":"begin_parsing","qualname":"<BindgenContext>::begin_parsing","value":"pub fn begin_parsing(&mut Self, PartialType)","parent":null,"children":[],"decl_id":null,"docs":" Begin parsing the given partial type, and push it onto the\n `currently_parsed_types` stack so that we won't infinite recurse if we\n run into a reference to it while parsing it.\n","sig":null,"attributes":[{"value":"/ Begin parsing the given partial type, and push it onto the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553022,"byte_end":553084,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/ `currently_parsed_types` stack so that we won't infinite recurse if we","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553089,"byte_end":553163,"line_start":611,"line_end":611,"column_start":5,"column_end":79}},{"value":"/ run into a reference to it while parsing it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553168,"byte_end":553216,"line_start":612,"line_end":612,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553471,"byte_end":553485,"line_start":619,"line_end":619,"column_start":12,"column_end":26},"name":"finish_parsing","qualname":"<BindgenContext>::finish_parsing","value":"pub fn finish_parsing(&mut Self) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Finish parsing the current partial type, pop it off the\n `currently_parsed_types` stack, and return it.\n","sig":null,"attributes":[{"value":"/ Finish parsing the current partial type, pop it off the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553345,"byte_end":553404,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ `currently_parsed_types` stack, and return it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553409,"byte_end":553459,"line_start":618,"line_end":618,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553732,"byte_end":553747,"line_start":626,"line_end":626,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<BindgenContext>::parse_callbacks","value":"pub fn parse_callbacks(&Self) -> Option<&dyn ParseCallbacks>","parent":null,"children":[],"decl_id":null,"docs":" Get the user-provided callbacks by reference, if any.\n","sig":null,"attributes":[{"value":"/ Get the user-provided callbacks by reference, if any.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553663,"byte_end":553720,"line_start":625,"line_end":625,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":554006,"byte_end":554014,"line_start":634,"line_end":634,"column_start":12,"column_end":20},"name":"add_item","qualname":"<BindgenContext>::add_item","value":"pub fn add_item(&mut Self, Item, Option<Cursor>, Option<Cursor>)","parent":null,"children":[],"decl_id":null,"docs":" Define a new item.","sig":null,"attributes":[{"value":"/ Define a new item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553861,"byte_end":553883,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553888,"byte_end":553891,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This inserts it into the internal items set, and its type into the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553896,"byte_end":553966,"line_start":632,"line_end":632,"column_start":5,"column_end":75}},{"value":"/ internal types set.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":553971,"byte_end":553994,"line_start":633,"line_end":633,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":558545,"byte_end":558559,"line_start":757,"line_end":757,"column_start":12,"column_end":26},"name":"add_type_param","qualname":"<BindgenContext>::add_type_param","value":"pub fn add_type_param(&mut Self, Item, clang::Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Add a new named template type parameter to this context's item set.\n","sig":null,"attributes":[{"value":"/ Add a new named template type parameter to this context's item set.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":558462,"byte_end":558533,"line_start":756,"line_end":756,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":559676,"byte_end":559690,"line_start":792,"line_end":792,"column_start":12,"column_end":26},"name":"get_type_param","qualname":"<BindgenContext>::get_type_param","value":"pub fn get_type_param(&Self, &clang::Cursor) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get the named type defined at the given cursor location, if we've\n already added one.\n","sig":null,"attributes":[{"value":"/ Get the named type defined at the given cursor location, if we've","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":559568,"byte_end":559637,"line_start":790,"line_end":790,"column_start":5,"column_end":74}},{"value":"/ already added one.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":559642,"byte_end":559664,"line_start":791,"line_end":791,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":560061,"byte_end":560072,"line_start":803,"line_end":803,"column_start":12,"column_end":23},"name":"rust_mangle","qualname":"<BindgenContext>::rust_mangle","value":"pub fn rust_mangle<'a>(&Self, &'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Mangles a name so it doesn't conflict with any keyword.\n","sig":null,"attributes":[{"value":"/ Mangles a name so it doesn't conflict with any keyword.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":559990,"byte_end":560049,"line_start":802,"line_end":802,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":561478,"byte_end":561488,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"rust_ident","qualname":"<BindgenContext>::rust_ident","value":"pub fn rust_ident<S>(&Self, S) -> Ident where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[{"value":"/ Returns a mangled name as a rust identifier.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":561418,"byte_end":561466,"line_start":833,"line_end":833,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":561688,"byte_end":561702,"line_start":842,"line_end":842,"column_start":12,"column_end":26},"name":"rust_ident_raw","qualname":"<BindgenContext>::rust_ident_raw","value":"pub fn rust_ident_raw<T>(&Self, T) -> Ident where T: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[{"value":"/ Returns a mangled name as a rust identifier.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":561628,"byte_end":561676,"line_start":841,"line_end":841,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":561896,"byte_end":561901,"line_start":850,"line_end":850,"column_start":12,"column_end":17},"name":"items","qualname":"<BindgenContext>::items","value":"pub fn items(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all items that have been defined.\n","sig":null,"attributes":[{"value":"/ Iterate over all items that have been defined.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":561834,"byte_end":561884,"line_start":849,"line_end":849,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":562189,"byte_end":562207,"line_start":858,"line_end":858,"column_start":12,"column_end":30},"name":"collected_typerefs","qualname":"<BindgenContext>::collected_typerefs","value":"pub fn collected_typerefs(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we collected all unresolved type references yet?\n","sig":null,"attributes":[{"value":"/ Have we collected all unresolved type references yet?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":562120,"byte_end":562177,"line_start":857,"line_end":857,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":575856,"byte_end":575872,"line_start":1239,"line_end":1239,"column_start":12,"column_end":28},"name":"lookup_sizedness","qualname":"<BindgenContext>::lookup_sizedness","value":"pub fn lookup_sizedness(&Self, TypeId) -> SizednessResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the type with the given id is sized or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the type with the given id is sized or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":575781,"byte_end":575844,"line_start":1238,"line_end":1238,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":576545,"byte_end":576562,"line_start":1261,"line_end":1261,"column_start":12,"column_end":29},"name":"lookup_has_vtable","qualname":"<BindgenContext>::lookup_has_vtable","value":"pub fn lookup_has_vtable(&Self, TypeId) -> HasVtableResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has vtable or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has vtable or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":576476,"byte_end":576533,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":577355,"byte_end":577376,"line_start":1285,"line_end":1285,"column_start":12,"column_end":33},"name":"lookup_has_destructor","qualname":"<BindgenContext>::lookup_has_destructor","value":"pub fn lookup_has_destructor(&Self, TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has a destructor.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has a destructor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":577287,"byte_end":577343,"line_start":1284,"line_end":1284,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":579338,"byte_end":579361,"line_start":1329,"line_end":1329,"column_start":12,"column_end":35},"name":"uses_template_parameter","qualname":"<BindgenContext>::uses_template_parameter","value":"pub fn uses_template_parameter(&Self, ItemId, TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses the given `template_param`, `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if `item` uses the given `template_param`, `false`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578517,"byte_end":578585,"line_start":1315,"line_end":1315,"column_start":5,"column_end":73}},{"value":"/ otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578590,"byte_end":578604,"line_start":1316,"line_end":1316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578609,"byte_end":578612,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ This method may only be called during the codegen phase, because the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578617,"byte_end":578689,"line_start":1318,"line_end":1318,"column_start":5,"column_end":77}},{"value":"/ template usage information is only computed as we enter the codegen","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578694,"byte_end":578765,"line_start":1319,"line_end":1319,"column_start":5,"column_end":76}},{"value":"/ phase.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578770,"byte_end":578780,"line_start":1320,"line_end":1320,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578785,"byte_end":578788,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ If the item is blacklisted, then we say that it always uses the template","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578793,"byte_end":578869,"line_start":1322,"line_end":1322,"column_start":5,"column_end":81}},{"value":"/ parameter. This is a little subtle. The template parameter usage","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578874,"byte_end":578942,"line_start":1323,"line_end":1323,"column_start":5,"column_end":73}},{"value":"/ analysis only considers whitelisted items, and if any blacklisted item","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":578947,"byte_end":579021,"line_start":1324,"line_end":1324,"column_start":5,"column_end":79}},{"value":"/ shows up in the generated bindings, it is the user's responsibility to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":579026,"byte_end":579100,"line_start":1325,"line_end":1325,"column_start":5,"column_end":79}},{"value":"/ manually provide a definition for them. To give them the most","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":579105,"byte_end":579170,"line_start":1326,"line_end":1326,"column_start":5,"column_end":70}},{"value":"/ flexibility when doing that, we assume that they use every template","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":579175,"byte_end":579246,"line_start":1327,"line_end":1327,"column_start":5,"column_end":76}},{"value":"/ parameter and always pass template arguments through in instantiations.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":579251,"byte_end":579326,"line_start":1328,"line_end":1328,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":580336,"byte_end":580364,"line_start":1361,"line_end":1361,"column_start":12,"column_end":40},"name":"uses_any_template_parameters","qualname":"<BindgenContext>::uses_any_template_parameters","value":"pub fn uses_any_template_parameters(&Self, ItemId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses any unbound, generic template parameters,\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if `item` uses any unbound, generic template parameters,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":580145,"byte_end":580219,"line_start":1357,"line_end":1357,"column_start":5,"column_end":79}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":580224,"byte_end":580246,"line_start":1358,"line_end":1358,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":580251,"byte_end":580254,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ Has the same restrictions that `uses_template_parameter` has.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":580259,"byte_end":580324,"line_start":1360,"line_end":1360,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":581791,"byte_end":581802,"line_start":1399,"line_end":1399,"column_start":12,"column_end":23},"name":"root_module","qualname":"<BindgenContext>::root_module","value":"pub fn root_module(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the root module.\n","sig":null,"attributes":[{"value":"/ Get the root module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":581755,"byte_end":581779,"line_start":1398,"line_end":1398,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582024,"byte_end":582036,"line_start":1407,"line_end":1407,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<BindgenContext>::resolve_type","value":"pub fn resolve_type(&Self, TypeId) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Resolve a type with the given id.","sig":null,"attributes":[{"value":"/ Resolve a type with the given id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":581860,"byte_end":581897,"line_start":1403,"line_end":1403,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":581902,"byte_end":581905,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ Panics if there is no item for the given `TypeId` or if the resolved","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":581910,"byte_end":581982,"line_start":1405,"line_end":1405,"column_start":5,"column_end":77}},{"value":"/ item is not a `Type`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":581987,"byte_end":582012,"line_start":1406,"line_end":1406,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582315,"byte_end":582327,"line_start":1415,"line_end":1415,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<BindgenContext>::resolve_func","value":"pub fn resolve_func(&Self, FunctionId) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Resolve a function with the given id.","sig":null,"attributes":[{"value":"/ Resolve a function with the given id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582139,"byte_end":582180,"line_start":1411,"line_end":1411,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582185,"byte_end":582188,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ Panics if there is no item for the given `FunctionId` or if the resolved","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582193,"byte_end":582269,"line_start":1413,"line_end":1413,"column_start":5,"column_end":81}},{"value":"/ item is not a `Function`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582274,"byte_end":582303,"line_start":1414,"line_end":1414,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582625,"byte_end":582642,"line_start":1423,"line_end":1423,"column_start":12,"column_end":29},"name":"safe_resolve_type","qualname":"<BindgenContext>::safe_resolve_type","value":"pub fn safe_resolve_type(&Self, TypeId) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` as a type, or `None` if there is no item with\n the given id.","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` as a type, or `None` if there is no item with","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582442,"byte_end":582518,"line_start":1419,"line_end":1419,"column_start":5,"column_end":81}},{"value":"/ the given id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582523,"byte_end":582540,"line_start":1420,"line_end":1420,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582545,"byte_end":582548,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ Panics if the id resolves to an item that is not a type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582553,"byte_end":582613,"line_start":1422,"line_end":1422,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582886,"byte_end":582907,"line_start":1430,"line_end":1430,"column_start":12,"column_end":33},"name":"resolve_item_fallible","qualname":"<BindgenContext>::resolve_item_fallible","value":"pub fn resolve_item_fallible<Id: Into<ItemId>>(&Self, Id) -> Option<&Item>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`, or `None` if no such item\n exists.\n","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` into an `Item`, or `None` if no such item","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582786,"byte_end":582858,"line_start":1428,"line_end":1428,"column_start":5,"column_end":77}},{"value":"/ exists.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":582863,"byte_end":582874,"line_start":1429,"line_end":1429,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583167,"byte_end":583179,"line_start":1440,"line_end":1440,"column_start":12,"column_end":24},"name":"resolve_item","qualname":"<BindgenContext>::resolve_item","value":"pub fn resolve_item<Id: Into<ItemId>>(&Self, Id) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`.","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` into an `Item`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583040,"byte_end":583086,"line_start":1437,"line_end":1437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583091,"byte_end":583094,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ Panics if the given id does not resolve to any item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583099,"byte_end":583155,"line_start":1439,"line_end":1439,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583469,"byte_end":583483,"line_start":1449,"line_end":1449,"column_start":12,"column_end":26},"name":"current_module","qualname":"<BindgenContext>::current_module","value":"pub fn current_module(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the current module.\n","sig":null,"attributes":[{"value":"/ Get the current module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583430,"byte_end":583457,"line_start":1448,"line_end":1448,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583919,"byte_end":583938,"line_start":1461,"line_end":1461,"column_start":12,"column_end":31},"name":"add_semantic_parent","qualname":"<BindgenContext>::add_semantic_parent","value":"pub fn add_semantic_parent(&mut Self, clang::Cursor, ItemId)","parent":null,"children":[],"decl_id":null,"docs":" Add a semantic parent for a given type definition.","sig":null,"attributes":[{"value":"/ Add a semantic parent for a given type definition.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583544,"byte_end":583598,"line_start":1453,"line_end":1453,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583603,"byte_end":583606,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ We do this from the type declaration, in order to be able to find the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583611,"byte_end":583684,"line_start":1455,"line_end":1455,"column_start":5,"column_end":78}},{"value":"/ correct type definition afterwards.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583689,"byte_end":583728,"line_start":1456,"line_end":1456,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583733,"byte_end":583736,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ TODO(emilio): We could consider doing this only when","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583741,"byte_end":583797,"line_start":1458,"line_end":1458,"column_start":5,"column_end":61}},{"value":"/ declaration.lexical_parent() != definition.lexical_parent(), but it's","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583802,"byte_end":583875,"line_start":1459,"line_end":1459,"column_start":5,"column_end":78}},{"value":"/ not sure it's worth it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":583880,"byte_end":583907,"line_start":1460,"line_end":1460,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":584172,"byte_end":584193,"line_start":1470,"line_end":1470,"column_start":12,"column_end":33},"name":"known_semantic_parent","qualname":"<BindgenContext>::known_semantic_parent","value":"pub fn known_semantic_parent(&Self, clang::Cursor) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Returns a known semantic parent for a given definition.\n","sig":null,"attributes":[{"value":"/ Returns a known semantic parent for a given definition.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":584101,"byte_end":584160,"line_start":1469,"line_end":1469,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":597126,"byte_end":597143,"line_start":1781,"line_end":1781,"column_start":12,"column_end":29},"name":"get_resolved_type","qualname":"<BindgenContext>::get_resolved_type","value":"pub fn get_resolved_type(&Self, &clang::CanonicalTypeDeclaration)\n-> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" If we have already resolved the type for the given type declaration,\n return its `ItemId`. Otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If we have already resolved the type for the given type declaration,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":596987,"byte_end":597059,"line_start":1779,"line_end":1779,"column_start":5,"column_end":77}},{"value":"/ return its `ItemId`. Otherwise, return `None`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":597064,"byte_end":597114,"line_start":1780,"line_end":1780,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":597645,"byte_end":597667,"line_start":1797,"line_end":1797,"column_start":12,"column_end":34},"name":"builtin_or_resolved_ty","qualname":"<BindgenContext>::builtin_or_resolved_ty","value":"pub fn builtin_or_resolved_ty(&mut Self, ItemId, Option<ItemId>, &clang::Type,\n                              Option<clang::Cursor>) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Looks up for an already resolved type, either because it's builtin, or\n because we already have it in the map.\n","sig":null,"attributes":[{"value":"/ Looks up for an already resolved type, either because it's builtin, or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":597512,"byte_end":597586,"line_start":1795,"line_end":1795,"column_start":5,"column_end":79}},{"value":"/ because we already have it in the map.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":597591,"byte_end":597633,"line_start":1796,"line_end":1796,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600575,"byte_end":600591,"line_start":1867,"line_end":1867,"column_start":12,"column_end":28},"name":"build_ty_wrapper","qualname":"<BindgenContext>::build_ty_wrapper","value":"pub fn build_ty_wrapper(&mut Self, ItemId, TypeId, Option<ItemId>,\n                        &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Make a new item that is a resolved type reference to the `wrapped_id`.","sig":null,"attributes":[{"value":"/ Make a new item that is a resolved type reference to the `wrapped_id`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600201,"byte_end":600275,"line_start":1859,"line_end":1859,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600280,"byte_end":600283,"line_start":1860,"line_end":1860,"column_start":5,"column_end":8}},{"value":"/ This is unfortunately a lot of bloat, but is needed to properly track","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600288,"byte_end":600361,"line_start":1861,"line_end":1861,"column_start":5,"column_end":78}},{"value":"/ constness et al.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600366,"byte_end":600386,"line_start":1862,"line_end":1862,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600391,"byte_end":600394,"line_start":1863,"line_end":1863,"column_start":5,"column_end":8}},{"value":"/ We should probably make the constness tracking separate, so it doesn't","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600399,"byte_end":600473,"line_start":1864,"line_end":1864,"column_start":5,"column_end":79}},{"value":"/ bloat that much, but hey, we already bloat the heck out of builtin","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600478,"byte_end":600548,"line_start":1865,"line_end":1865,"column_start":5,"column_end":75}},{"value":"/ types.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600553,"byte_end":600563,"line_start":1866,"line_end":1866,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600985,"byte_end":601004,"line_start":1880,"line_end":1880,"column_start":12,"column_end":31},"name":"build_const_wrapper","qualname":"<BindgenContext>::build_const_wrapper","value":"pub fn build_const_wrapper(&mut Self, ItemId, TypeId, Option<ItemId>,\n                           &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" A wrapper over a type that adds a const qualifier explicitly.","sig":null,"attributes":[{"value":"/ A wrapper over a type that adds a const qualifier explicitly.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600833,"byte_end":600898,"line_start":1877,"line_end":1877,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600903,"byte_end":600906,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ Needed to handle const methods in C++, wrapping the type .","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":600911,"byte_end":600973,"line_start":1879,"line_end":1879,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":602038,"byte_end":602050,"line_start":1916,"line_end":1916,"column_start":12,"column_end":24},"name":"next_item_id","qualname":"<BindgenContext>::next_item_id","value":"pub fn next_item_id(&mut Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Returns the next item id to be used for an item.\n","sig":null,"attributes":[{"value":"/ Returns the next item id to be used for an item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":601974,"byte_end":602026,"line_start":1915,"line_end":1915,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605067,"byte_end":605083,"line_start":1984,"line_end":1984,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<BindgenContext>::translation_unit","value":"pub fn translation_unit(&Self) -> &clang::TranslationUnit","parent":null,"children":[],"decl_id":null,"docs":" Get the current Clang translation unit that is being processed.\n","sig":null,"attributes":[{"value":"/ Get the current Clang translation unit that is being processed.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":604988,"byte_end":605055,"line_start":1983,"line_end":1983,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605230,"byte_end":605242,"line_start":1989,"line_end":1989,"column_start":12,"column_end":24},"name":"parsed_macro","qualname":"<BindgenContext>::parsed_macro","value":"pub fn parsed_macro(&Self, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we parsed the macro named `macro_name` already?\n","sig":null,"attributes":[{"value":"/ Have we parsed the macro named `macro_name` already?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605162,"byte_end":605218,"line_start":1988,"line_end":1988,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605390,"byte_end":605403,"line_start":1994,"line_end":1994,"column_start":12,"column_end":25},"name":"parsed_macros","qualname":"<BindgenContext>::parsed_macros","value":"pub fn parsed_macros(&Self) -> &StdHashMap<Vec<u8>, cexpr::expr::EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently parsed macros.\n","sig":null,"attributes":[{"value":"/ Get the currently parsed macros.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605342,"byte_end":605378,"line_start":1993,"line_end":1993,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605625,"byte_end":605642,"line_start":2002,"line_end":2002,"column_start":12,"column_end":29},"name":"note_parsed_macro","qualname":"<BindgenContext>::note_parsed_macro","value":"pub fn note_parsed_macro(&mut Self, Vec<u8>, cexpr::expr::EvalResult)","parent":null,"children":[],"decl_id":null,"docs":" Mark the macro named `macro_name` as parsed.\n","sig":null,"attributes":[{"value":"/ Mark the macro named `macro_name` as parsed.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605565,"byte_end":605613,"line_start":2001,"line_end":2001,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605833,"byte_end":605849,"line_start":2011,"line_end":2011,"column_start":12,"column_end":28},"name":"in_codegen_phase","qualname":"<BindgenContext>::in_codegen_phase","value":"pub fn in_codegen_phase(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are we in the codegen phase?\n","sig":null,"attributes":[{"value":"/ Are we in the codegen phase?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605789,"byte_end":605821,"line_start":2010,"line_end":2010,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606149,"byte_end":606156,"line_start":2020,"line_end":2020,"column_start":12,"column_end":19},"name":"replace","qualname":"<BindgenContext>::replace","value":"pub fn replace(&mut Self, &[String], ItemId)","parent":null,"children":[],"decl_id":null,"docs":" Mark the type with the given `name` as replaced by the type with id\n `potential_ty`.","sig":null,"attributes":[{"value":"/ Mark the type with the given `name` as replaced by the type with id","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605902,"byte_end":605973,"line_start":2015,"line_end":2015,"column_start":5,"column_end":76}},{"value":"/ `potential_ty`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":605978,"byte_end":605997,"line_start":2016,"line_end":2016,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606002,"byte_end":606005,"line_start":2017,"line_end":2017,"column_start":5,"column_end":8}},{"value":"/ Replacement types are declared using the `replaces=\"xxx\"` annotation,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606010,"byte_end":606083,"line_start":2018,"line_end":2018,"column_start":5,"column_end":78}},{"value":"/ and implies that the original type is hidden.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606088,"byte_end":606137,"line_start":2019,"line_end":2019,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606956,"byte_end":606972,"line_start":2043,"line_end":2043,"column_start":12,"column_end":28},"name":"is_replaced_type","qualname":"<BindgenContext>::is_replaced_type","value":"pub fn is_replaced_type<Id: Into<ItemId>>(&Self, &[String], Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the item with the given `name` and `id` been replaced by another\n type?\n","sig":null,"attributes":[{"value":"/ Has the item with the given `name` and `id` been replaced by another","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606858,"byte_end":606930,"line_start":2041,"line_end":2041,"column_start":5,"column_end":77}},{"value":"/ type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":606935,"byte_end":606944,"line_start":2042,"line_end":2042,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":607309,"byte_end":607323,"line_start":2056,"line_end":2056,"column_start":12,"column_end":26},"name":"opaque_by_name","qualname":"<BindgenContext>::opaque_by_name","value":"pub fn opaque_by_name(&Self, &[String]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the type with the given `name` marked as opaque?\n","sig":null,"attributes":[{"value":"/ Is the type with the given `name` marked as opaque?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":607242,"byte_end":607297,"line_start":2055,"line_end":2055,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":611135,"byte_end":611141,"line_start":2153,"line_end":2153,"column_start":12,"column_end":18},"name":"module","qualname":"<BindgenContext>::module","value":"pub fn module(&mut Self, clang::Cursor) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Given a CXCursor_Namespace cursor, return the item id of the\n corresponding module, or create one on the fly.\n","sig":null,"attributes":[{"value":"/ Given a CXCursor_Namespace cursor, return the item id of the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":611003,"byte_end":611067,"line_start":2151,"line_end":2151,"column_start":5,"column_end":69}},{"value":"/ corresponding module, or create one on the fly.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":611072,"byte_end":611123,"line_start":2152,"line_end":2152,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612109,"byte_end":612120,"line_start":2183,"line_end":2183,"column_start":12,"column_end":23},"name":"with_module","qualname":"<BindgenContext>::with_module","value":"pub fn with_module<F>(&mut Self, ModuleId, F) where F: FnOnce(&mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start traversing the module with the given `module_id`, invoke the\n callback `cb`, and then return to traversing the original module.\n","sig":null,"attributes":[{"value":"/ Start traversing the module with the given `module_id`, invoke the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":611953,"byte_end":612023,"line_start":2181,"line_end":2181,"column_start":5,"column_end":75}},{"value":"/ callback `cb`, and then return to traversing the original module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612028,"byte_end":612097,"line_start":2182,"line_end":2182,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612638,"byte_end":612655,"line_start":2201,"line_end":2201,"column_start":12,"column_end":29},"name":"whitelisted_items","qualname":"<BindgenContext>::whitelisted_items","value":"pub fn whitelisted_items(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all (explicitly or transitively) whitelisted items.","sig":null,"attributes":[{"value":"/ Iterate over all (explicitly or transitively) whitelisted items.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612451,"byte_end":612519,"line_start":2197,"line_end":2197,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612524,"byte_end":612527,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ If no items are explicitly whitelisted, then all items are considered","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612532,"byte_end":612605,"line_start":2199,"line_end":2199,"column_start":5,"column_end":78}},{"value":"/ whitelisted.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612610,"byte_end":612626,"line_start":2200,"line_end":2200,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612903,"byte_end":612916,"line_start":2209,"line_end":2209,"column_start":12,"column_end":25},"name":"codegen_items","qualname":"<BindgenContext>::codegen_items","value":"pub fn codegen_items(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the set of items we should generate.\n","sig":null,"attributes":[{"value":"/ Get a reference to the set of items we should generate.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":612832,"byte_end":612891,"line_start":2208,"line_end":2208,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":619876,"byte_end":619888,"line_start":2367,"line_end":2367,"column_start":12,"column_end":24},"name":"trait_prefix","qualname":"<BindgenContext>::trait_prefix","value":"pub fn trait_prefix(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Convenient method for getting the prefix to use for most traits in\n codegen depending on the `use_core` option.\n","sig":null,"attributes":[{"value":"/ Convenient method for getting the prefix to use for most traits in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":619742,"byte_end":619812,"line_start":2365,"line_end":2365,"column_start":5,"column_end":75}},{"value":"/ codegen depending on the `use_core` option.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":619817,"byte_end":619864,"line_start":2366,"line_end":2366,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620115,"byte_end":620140,"line_start":2376,"line_end":2376,"column_start":12,"column_end":37},"name":"generated_bindgen_complex","qualname":"<BindgenContext>::generated_bindgen_complex","value":"pub fn generated_bindgen_complex(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Call if a bindgen complex is generated\n","sig":null,"attributes":[{"value":"/ Call if a bindgen complex is generated","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620061,"byte_end":620103,"line_start":2375,"line_end":2375,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620278,"byte_end":620303,"line_start":2381,"line_end":2381,"column_start":12,"column_end":37},"name":"need_bindgen_complex_type","qualname":"<BindgenContext>::need_bindgen_complex_type","value":"pub fn need_bindgen_complex_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether we need to generate the bindgen complex type\n","sig":null,"attributes":[{"value":"/ Whether we need to generate the bindgen complex type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620210,"byte_end":620266,"line_start":2380,"line_end":2380,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620917,"byte_end":620940,"line_start":2400,"line_end":2400,"column_start":12,"column_end":35},"name":"lookup_can_derive_debug","qualname":"<BindgenContext>::lookup_can_derive_debug","value":"pub fn lookup_can_derive_debug<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive debug or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620834,"byte_end":620876,"line_start":2398,"line_end":2398,"column_start":5,"column_end":47}},{"value":"/ derive debug or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":620881,"byte_end":620905,"line_start":2399,"line_end":2399,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":621885,"byte_end":621910,"line_start":2427,"line_end":2427,"column_start":12,"column_end":37},"name":"lookup_can_derive_default","qualname":"<BindgenContext>::lookup_can_derive_default","value":"pub fn lookup_can_derive_default<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive default or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":621800,"byte_end":621842,"line_start":2425,"line_end":2425,"column_start":5,"column_end":47}},{"value":"/ derive default or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":621847,"byte_end":621873,"line_start":2426,"line_end":2426,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":623219,"byte_end":623241,"line_start":2465,"line_end":2465,"column_start":12,"column_end":34},"name":"lookup_can_derive_hash","qualname":"<BindgenContext>::lookup_can_derive_hash","value":"pub fn lookup_can_derive_hash<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive hash or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":623137,"byte_end":623179,"line_start":2463,"line_end":2463,"column_start":5,"column_end":47}},{"value":"/ derive hash or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":623184,"byte_end":623207,"line_start":2464,"line_end":2464,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":624355,"byte_end":624396,"line_start":2494,"line_end":2494,"column_start":12,"column_end":53},"name":"lookup_can_derive_partialeq_or_partialord","qualname":"<BindgenContext>::lookup_can_derive_partialeq_or_partialord","value":"pub fn lookup_can_derive_partialeq_or_partialord<Id: Into<ItemId>>(&Self, Id)\n-> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Partial{Eq,Ord}`.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can derive `Partial{Eq,Ord}`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":624275,"byte_end":624343,"line_start":2493,"line_end":2493,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":625023,"byte_end":625045,"line_start":2515,"line_end":2515,"column_start":12,"column_end":34},"name":"lookup_can_derive_copy","qualname":"<BindgenContext>::lookup_can_derive_copy","value":"pub fn lookup_can_derive_copy<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Copy` or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can derive `Copy` or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":624947,"byte_end":625011,"line_start":2514,"line_end":2514,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":625918,"byte_end":625948,"line_start":2538,"line_end":2538,"column_start":12,"column_end":42},"name":"lookup_has_type_param_in_array","qualname":"<BindgenContext>::lookup_has_type_param_in_array","value":"pub fn lookup_has_type_param_in_array<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has type parameter in array or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has type parameter in array or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":625832,"byte_end":625906,"line_start":2537,"line_end":2537,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":626770,"byte_end":626786,"line_start":2565,"line_end":2565,"column_start":12,"column_end":28},"name":"lookup_has_float","qualname":"<BindgenContext>::lookup_has_float","value":"pub fn lookup_has_float<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has array or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has array or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":626702,"byte_end":626758,"line_start":2564,"line_end":2564,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627201,"byte_end":627221,"line_start":2577,"line_end":2577,"column_start":12,"column_end":32},"name":"no_partialeq_by_name","qualname":"<BindgenContext>::no_partialeq_by_name","value":"pub fn no_partialeq_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-partialeq` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-partialeq` flag is enabled for this item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627129,"byte_end":627189,"line_start":2576,"line_end":2576,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627456,"byte_end":627471,"line_start":2583,"line_end":2583,"column_start":12,"column_end":27},"name":"no_copy_by_name","qualname":"<BindgenContext>::no_copy_by_name","value":"pub fn no_copy_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-copy` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-copy` flag is enabled for this item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627389,"byte_end":627444,"line_start":2582,"line_end":2582,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627702,"byte_end":627718,"line_start":2589,"line_end":2589,"column_start":12,"column_end":28},"name":"no_debug_by_name","qualname":"<BindgenContext>::no_debug_by_name","value":"pub fn no_debug_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-debug` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-debug` flag is enabled for this item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627634,"byte_end":627690,"line_start":2588,"line_end":2588,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627952,"byte_end":627970,"line_start":2595,"line_end":2595,"column_start":12,"column_end":30},"name":"no_default_by_name","qualname":"<BindgenContext>::no_default_by_name","value":"pub fn no_default_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-default` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-default` flag is enabled for this item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":627882,"byte_end":627940,"line_start":2594,"line_end":2594,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628203,"byte_end":628218,"line_start":2601,"line_end":2601,"column_start":12,"column_end":27},"name":"no_hash_by_name","qualname":"<BindgenContext>::no_hash_by_name","value":"pub fn no_hash_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-hash` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-hash` flag is enabled for this item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628136,"byte_end":628191,"line_start":2600,"line_end":2600,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5144},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628482,"byte_end":628494,"line_start":2609,"line_end":2609,"column_start":12,"column_end":24},"name":"ItemResolver","qualname":"::ir::context::ItemResolver","value":"ItemResolver {  }","parent":null,"children":[{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147}],"decl_id":null,"docs":" A builder struct for configuring item resolution options.\n","sig":null,"attributes":[{"value":"/ A builder struct for configuring item resolution options.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628379,"byte_end":628440,"line_start":2607,"line_end":2607,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628654,"byte_end":628667,"line_start":2617,"line_end":2617,"column_start":12,"column_end":25},"name":"into_resolver","qualname":"<ItemId>::into_resolver","value":"pub fn into_resolver(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Create an `ItemResolver` from this item id.\n","sig":null,"attributes":[{"value":"/ Create an `ItemResolver` from this item id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628595,"byte_end":628642,"line_start":2616,"line_end":2616,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628948,"byte_end":628951,"line_start":2633,"line_end":2633,"column_start":12,"column_end":15},"name":"new","qualname":"<ItemResolver>::new","value":"pub fn new<Id: Into<ItemId>>(Id) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `ItemResolver` from the given id.\n","sig":null,"attributes":[{"value":"/ Construct a new `ItemResolver` from the given id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628883,"byte_end":628936,"line_start":2632,"line_end":2632,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":629228,"byte_end":629245,"line_start":2643,"line_end":2643,"column_start":12,"column_end":29},"name":"through_type_refs","qualname":"<ItemResolver>::through_type_refs","value":"pub fn through_type_refs(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::TypeRef` items.\n","sig":null,"attributes":[{"value":"/ Keep resolving through `Type::TypeRef` items.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":629167,"byte_end":629216,"line_start":2642,"line_end":2642,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":629396,"byte_end":629416,"line_start":2649,"line_end":2649,"column_start":12,"column_end":32},"name":"through_type_aliases","qualname":"<ItemResolver>::through_type_aliases","value":"pub fn through_type_aliases(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::Alias` items.\n","sig":null,"attributes":[{"value":"/ Keep resolving through `Type::Alias` items.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":629337,"byte_end":629384,"line_start":2648,"line_end":2648,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":629585,"byte_end":629592,"line_start":2655,"line_end":2655,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ItemResolver>::resolve","value":"pub fn resolve(Self, &BindgenContext) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Finish configuring and perform the actual item resolution.\n","sig":null,"attributes":[{"value":"/ Finish configuring and perform the actual item resolution.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":629511,"byte_end":629573,"line_start":2654,"line_end":2654,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5153},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630573,"byte_end":630584,"line_start":2684,"line_end":2684,"column_start":12,"column_end":23},"name":"PartialType","qualname":"::ir::context::PartialType","value":"PartialType {  }","parent":null,"children":[{"krate":0,"index":5154},{"krate":0,"index":5155}],"decl_id":null,"docs":" A type that we are in the middle of parsing.\n","sig":null,"attributes":[{"value":"/ A type that we are in the middle of parsing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630468,"byte_end":630516,"line_start":2682,"line_end":2682,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630830,"byte_end":630833,"line_start":2693,"line_end":2693,"column_start":12,"column_end":15},"name":"new","qualname":"<PartialType>::new","value":"pub fn new(Cursor, ItemId) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `PartialType`.\n","sig":null,"attributes":[{"value":"/ Construct a new `PartialType`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630784,"byte_end":630818,"line_start":2692,"line_end":2692,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":631057,"byte_end":631061,"line_start":2699,"line_end":2699,"column_start":12,"column_end":16},"name":"decl","qualname":"<PartialType>::decl","value":"pub fn decl(&Self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" The cursor pointing to this partial type's declaration location.\n","sig":null,"attributes":[{"value":"/ The cursor pointing to this partial type's declaration location.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630977,"byte_end":631045,"line_start":2698,"line_end":2698,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":631236,"byte_end":631238,"line_start":2705,"line_end":2705,"column_start":12,"column_end":14},"name":"id","qualname":"<PartialType>::id","value":"pub fn id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" The item ID allocated for this type. This is *NOT* a key for an entry in\n the context's item set yet!\n","sig":null,"attributes":[{"value":"/ The item ID allocated for this type. This is *NOT* a key for an entry in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":631112,"byte_end":631188,"line_start":2703,"line_end":2703,"column_start":5,"column_end":81}},{"value":"/ the context's item set yet!","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":631193,"byte_end":631224,"line_start":2704,"line_end":2704,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5169},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635842,"byte_end":635845,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"Yes","qualname":"::ir::derive::CanDerive::Yes","value":"CanDerive::Yes","parent":{"krate":0,"index":5168},"children":[],"decl_id":null,"docs":" Yes, we can derive automatically.\n","sig":null,"attributes":[{"value":"/ Yes, we can derive automatically.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635800,"byte_end":635837,"line_start":97,"line_end":97,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5171},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636066,"byte_end":636074,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Manually","qualname":"::ir::derive::CanDerive::Manually","value":"CanDerive::Manually","parent":{"krate":0,"index":5168},"children":[],"decl_id":null,"docs":" The only thing that stops us from automatically deriving is that\n array with more than maximum number of elements is used.","sig":null,"attributes":[{"value":"/ The only thing that stops us from automatically deriving is that","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635852,"byte_end":635920,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ array with more than maximum number of elements is used.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635925,"byte_end":635985,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635990,"byte_end":635993,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This means we probably can \"manually\" implement such trait.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635998,"byte_end":636061,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5173},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636104,"byte_end":636106,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::derive::CanDerive::No","value":"CanDerive::No","parent":{"krate":0,"index":5168},"children":[],"decl_id":null,"docs":" No, we cannot.\n","sig":null,"attributes":[{"value":"/ No, we cannot.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636081,"byte_end":636099,"line_start":106,"line_end":106,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":5168},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635784,"byte_end":635793,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"CanDerive","qualname":"::ir::derive::CanDerive","value":"pub enum CanDerive { Yes, Manually, No, }","parent":null,"children":[{"krate":0,"index":5169},{"krate":0,"index":5171},{"krate":0,"index":5173}],"decl_id":null,"docs":" Whether it is possible or not to automatically derive trait for an item.","sig":null,"attributes":[{"value":"/ Whether it is possible or not to automatically derive trait for an item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635362,"byte_end":635438,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635439,"byte_end":635442,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635443,"byte_end":635456,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/         No","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635457,"byte_end":635471,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/          ^","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635472,"byte_end":635486,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/          |","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635487,"byte_end":635501,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/      Manually","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635502,"byte_end":635519,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/          ^","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635520,"byte_end":635534,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/          |","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635535,"byte_end":635549,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/         Yes","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635550,"byte_end":635565,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635566,"byte_end":635573,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635574,"byte_end":635577,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Initially we assume that we can derive trait for all types and then","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635578,"byte_end":635649,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ update our understanding as we learn more about each type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":635650,"byte_end":635712,"line_start":94,"line_end":94,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636288,"byte_end":636292,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"join","qualname":"<CanDerive>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636225,"byte_end":636276,"line_start":117,"line_end":117,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5191},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639608,"byte_end":639622,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"ModuleConstify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::ModuleConstify","value":"EnumVariantCustomBehavior::ModuleConstify","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":" This variant will be a module containing constants.\n","sig":null,"attributes":[{"value":"/ This variant will be a module containing constants.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639548,"byte_end":639603,"line_start":15,"line_end":15,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5193},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639709,"byte_end":639717,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Constify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Constify","value":"EnumVariantCustomBehavior::Constify","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":" This variant will be constified, that is, forced to generate a constant.\n","sig":null,"attributes":[{"value":"/ This variant will be constified, that is, forced to generate a constant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639628,"byte_end":639704,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5195},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639793,"byte_end":639797,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Hide","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Hide","value":"EnumVariantCustomBehavior::Hide","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":" This variant will be hidden entirely from the resulting enum.\n","sig":null,"attributes":[{"value":"/ This variant will be hidden entirely from the resulting enum.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639723,"byte_end":639788,"line_start":19,"line_end":19,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":5190},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639516,"byte_end":639541,"line_start":14,"line_end":14,"column_start":10,"column_end":35},"name":"EnumVariantCustomBehavior","qualname":"::ir::enum_ty::EnumVariantCustomBehavior","value":"pub enum EnumVariantCustomBehavior { ModuleConstify, Constify, Hide, }","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5193},{"krate":0,"index":5195}],"decl_id":null,"docs":" An enum representing custom handling that can be given to a variant.\n","sig":null,"attributes":[{"value":"/ An enum representing custom handling that can be given to a variant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639389,"byte_end":639461,"line_start":12,"line_end":12,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5208},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639855,"byte_end":639859,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Enum","qualname":"::ir::enum_ty::Enum","value":"Enum {  }","parent":null,"children":[{"krate":0,"index":5209},{"krate":0,"index":5210}],"decl_id":null,"docs":" A C/C++ enumeration.\n","sig":null,"attributes":[{"value":"/ A C/C++ enumeration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":639802,"byte_end":639826,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640330,"byte_end":640333,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Enum>::new","value":"pub fn new(Option<TypeId>, Vec<EnumVariant>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Enum` with the given representation and variants.\n","sig":null,"attributes":[{"value":"/ Construct a new `Enum` with the given representation and variants.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640248,"byte_end":640318,"line_start":38,"line_end":38,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640491,"byte_end":640495,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"repr","qualname":"<Enum>::repr","value":"pub fn repr(&Self) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's representation.\n","sig":null,"attributes":[{"value":"/ Get this enumeration's representation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640437,"byte_end":640479,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640600,"byte_end":640608,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"variants","qualname":"<Enum>::variants","value":"pub fn variants(&Self) -> &[EnumVariant]","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's variants.\n","sig":null,"attributes":[{"value":"/ Get this enumeration's variants.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640552,"byte_end":640588,"line_start":48,"line_end":48,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640737,"byte_end":640744,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<Enum>::from_ty","value":"pub fn from_ty(&clang::Type, &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct an enumeration from the given Clang type.\n","sig":null,"attributes":[{"value":"/ Construct an enumeration from the given Clang type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640670,"byte_end":640725,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":644971,"byte_end":644994,"line_start":171,"line_end":171,"column_start":12,"column_end":35},"name":"computed_enum_variation","qualname":"<Enum>::computed_enum_variation","value":"pub fn computed_enum_variation(&Self, &BindgenContext, &Item) -> EnumVariation","parent":null,"children":[],"decl_id":null,"docs":" Returns the final representation of the enum.\n","sig":null,"attributes":[{"value":"/ Returns the final representation of the enum.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":644910,"byte_end":644959,"line_start":170,"line_end":170,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5213},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":646514,"byte_end":646525,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"EnumVariant","qualname":"::ir::enum_ty::EnumVariant","value":"EnumVariant {  }","parent":null,"children":[{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217}],"decl_id":null,"docs":" A single enum variant, to be contained only in an enum.\n","sig":null,"attributes":[{"value":"/ A single enum variant, to be contained only in an enum.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":646426,"byte_end":646485,"line_start":221,"line_end":221,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5221},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647016,"byte_end":647023,"line_start":241,"line_end":241,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::ir::enum_ty::EnumVariantValue::Boolean","value":"EnumVariantValue::Boolean(bool)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":" A boolean constant.\n","sig":null,"attributes":[{"value":"/ A boolean constant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":646988,"byte_end":647011,"line_start":240,"line_end":240,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5224},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647063,"byte_end":647069,"line_start":244,"line_end":244,"column_start":5,"column_end":11},"name":"Signed","qualname":"::ir::enum_ty::EnumVariantValue::Signed","value":"EnumVariantValue::Signed(i64)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":" A signed constant.\n","sig":null,"attributes":[{"value":"/ A signed constant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647036,"byte_end":647058,"line_start":243,"line_end":243,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5227},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647111,"byte_end":647119,"line_start":247,"line_end":247,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::ir::enum_ty::EnumVariantValue::Unsigned","value":"EnumVariantValue::Unsigned(u64)","parent":{"krate":0,"index":5220},"children":[],"decl_id":null,"docs":" An unsigned constant.\n","sig":null,"attributes":[{"value":"/ An unsigned constant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647081,"byte_end":647106,"line_start":246,"line_end":246,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":5220},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":646965,"byte_end":646981,"line_start":239,"line_end":239,"column_start":10,"column_end":26},"name":"EnumVariantValue","qualname":"::ir::enum_ty::EnumVariantValue","value":"pub enum EnumVariantValue { Boolean(bool), Signed(i64), Unsigned(u64), }","parent":null,"children":[{"krate":0,"index":5221},{"krate":0,"index":5224},{"krate":0,"index":5227}],"decl_id":null,"docs":" A constant value assigned to an enumeration variant.\n","sig":null,"attributes":[{"value":"/ A constant value assigned to an enumeration variant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":646831,"byte_end":646887,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647225,"byte_end":647228,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumVariant>::new","value":"pub fn new(String, Option<String>, EnumVariantValue,\n           Option<EnumVariantCustomBehavior>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new enumeration variant from the given parts.\n","sig":null,"attributes":[{"value":"/ Construct a new enumeration variant from the given parts.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647152,"byte_end":647213,"line_start":251,"line_end":251,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647560,"byte_end":647564,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"name","qualname":"<EnumVariant>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's name.\n","sig":null,"attributes":[{"value":"/ Get this variant's name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647520,"byte_end":647548,"line_start":266,"line_end":266,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647653,"byte_end":647656,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"val","qualname":"<EnumVariant>::val","value":"pub fn val(&Self) -> EnumVariantValue","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's value.\n","sig":null,"attributes":[{"value":"/ Get this variant's value.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647612,"byte_end":647641,"line_start":271,"line_end":271,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647763,"byte_end":647770,"line_start":277,"line_end":277,"column_start":12,"column_end":19},"name":"comment","qualname":"<EnumVariant>::comment","value":"pub fn comment(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's documentation.\n","sig":null,"attributes":[{"value":"/ Get this variant's documentation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647714,"byte_end":647751,"line_start":276,"line_end":276,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647959,"byte_end":647979,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"force_constification","qualname":"<EnumVariant>::force_constification","value":"pub fn force_constification(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this variant should be enforced to be a constant by code\n generation.\n","sig":null,"attributes":[{"value":"/ Returns whether this variant should be enforced to be a constant by code","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647851,"byte_end":647927,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ generation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647932,"byte_end":647947,"line_start":282,"line_end":282,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":648227,"byte_end":648233,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"hidden","qualname":"<EnumVariant>::hidden","value":"pub fn hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current variant should be hidden completely from the\n resulting rust enum.\n","sig":null,"attributes":[{"value":"/ Returns whether the current variant should be hidden completely from the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":648110,"byte_end":648186,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ resulting rust enum.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":648191,"byte_end":648215,"line_start":289,"line_end":289,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":649034,"byte_end":649042,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::function::FunctionKind::Function","value":"FunctionKind::Function","parent":{"krate":0,"index":5249},"children":[],"decl_id":null,"docs":" A plain, free function.\n","sig":null,"attributes":[{"value":"/ A plain, free function.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":649002,"byte_end":649029,"line_start":24,"line_end":24,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5252},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":649079,"byte_end":649085,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Method","qualname":"::ir::function::FunctionKind::Method","value":"FunctionKind::Method(MethodKind)","parent":{"krate":0,"index":5249},"children":[],"decl_id":null,"docs":" A method of some kind.\n","sig":null,"attributes":[{"value":"/ A method of some kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":649048,"byte_end":649074,"line_start":26,"line_end":26,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":5249},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":648983,"byte_end":648995,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"FunctionKind","qualname":"::ir::function::FunctionKind","value":"pub enum FunctionKind { Function, Method(MethodKind), }","parent":null,"children":[{"krate":0,"index":5250},{"krate":0,"index":5252}],"decl_id":null,"docs":" What kind of a function are we looking at?\n","sig":null,"attributes":[{"value":"/ What kind of a function are we looking at?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":648886,"byte_end":648932,"line_start":21,"line_end":21,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5265},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650513,"byte_end":650521,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"External","qualname":"::ir::function::Linkage::External","value":"Linkage::External","parent":{"krate":0,"index":5264},"children":[],"decl_id":null,"docs":" Externally visible and can be linked against\n","sig":null,"attributes":[{"value":"/ Externally visible and can be linked against","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650460,"byte_end":650508,"line_start":66,"line_end":66,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5267},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650616,"byte_end":650624,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"Internal","qualname":"::ir::function::Linkage::Internal","value":"Linkage::Internal","parent":{"krate":0,"index":5264},"children":[],"decl_id":null,"docs":" Not exposed externally. 'static inline' functions will have this kind of linkage\n","sig":null,"attributes":[{"value":"/ Not exposed externally. 'static inline' functions will have this kind of linkage","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650527,"byte_end":650611,"line_start":68,"line_end":68,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":5264},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650446,"byte_end":650453,"line_start":65,"line_end":65,"column_start":10,"column_end":17},"name":"Linkage","qualname":"::ir::function::Linkage","value":"pub enum Linkage { External, Internal, }","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5267}],"decl_id":null,"docs":" The style of linkage\n","sig":null,"attributes":[{"value":"/ The style of linkage","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650382,"byte_end":650406,"line_start":63,"line_end":63,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5274},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650826,"byte_end":650834,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"Function","qualname":"::ir::function::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280}],"decl_id":null,"docs":" A function declaration, with a signature, arguments, and argument names.","sig":null,"attributes":[{"value":"/ A function declaration, with a signature, arguments, and argument names.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650629,"byte_end":650705,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650706,"byte_end":650709,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The argument names vector must be the same length as the ones in the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650710,"byte_end":650782,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/ signature.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":650783,"byte_end":650797,"line_start":75,"line_end":75,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651321,"byte_end":651324,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Function>::new","value":"pub fn new(String, Option<String>, TypeId, Option<String>, FunctionKind,\n           Linkage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function.\n","sig":null,"attributes":[{"value":"/ Construct a new function.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651280,"byte_end":651309,"line_start":98,"line_end":98,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651724,"byte_end":651728,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[{"value":"/ Get this function's name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651683,"byte_end":651712,"line_start":117,"line_end":117,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651817,"byte_end":651829,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Function>::mangled_name","value":"pub fn mangled_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[{"value":"/ Get this function's name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651776,"byte_end":651805,"line_start":122,"line_end":122,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651966,"byte_end":651975,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"signature","qualname":"<Function>::signature","value":"pub fn signature(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function's signature type.\n","sig":null,"attributes":[{"value":"/ Get this function's signature type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651915,"byte_end":651954,"line_start":127,"line_end":127,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652070,"byte_end":652074,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"kind","qualname":"<Function>::kind","value":"pub fn kind(&Self) -> FunctionKind","parent":null,"children":[],"decl_id":null,"docs":" Get this function's kind.\n","sig":null,"attributes":[{"value":"/ Get this function's kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652029,"byte_end":652058,"line_start":132,"line_end":132,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652173,"byte_end":652180,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Function>::linkage","value":"pub fn linkage(&Self) -> Linkage","parent":null,"children":[],"decl_id":null,"docs":" Get this function's linkage.\n","sig":null,"attributes":[{"value":"/ Get this function's linkage.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652129,"byte_end":652161,"line_start":137,"line_end":137,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5284},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652882,"byte_end":652883,"line_start":170,"line_end":170,"column_start":5,"column_end":6},"name":"C","qualname":"::ir::function::Abi::C","value":"Abi::C","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" The default C ABI.\n","sig":null,"attributes":[{"value":"/ The default C ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652855,"byte_end":652877,"line_start":169,"line_end":169,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5286},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652916,"byte_end":652923,"line_start":172,"line_end":172,"column_start":5,"column_end":12},"name":"Stdcall","qualname":"::ir::function::Abi::Stdcall","value":"Abi::Stdcall","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" The \"stdcall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"stdcall\" ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652889,"byte_end":652911,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5288},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652957,"byte_end":652965,"line_start":174,"line_end":174,"column_start":5,"column_end":13},"name":"Fastcall","qualname":"::ir::function::Abi::Fastcall","value":"Abi::Fastcall","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" The \"fastcall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"fastcall\" ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652929,"byte_end":652952,"line_start":173,"line_end":173,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5290},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652999,"byte_end":653007,"line_start":176,"line_end":176,"column_start":5,"column_end":13},"name":"ThisCall","qualname":"::ir::function::Abi::ThisCall","value":"Abi::ThisCall","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" The \"thiscall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"thiscall\" ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652971,"byte_end":652994,"line_start":175,"line_end":175,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5292},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653038,"byte_end":653043,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Aapcs","qualname":"::ir::function::Abi::Aapcs","value":"Abi::Aapcs","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" The \"aapcs\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"aapcs\" ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653013,"byte_end":653033,"line_start":177,"line_end":177,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5294},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653074,"byte_end":653079,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Win64","qualname":"::ir::function::Abi::Win64","value":"Abi::Win64","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" The \"win64\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"win64\" ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653049,"byte_end":653069,"line_start":179,"line_end":179,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5296},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653120,"byte_end":653127,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ir::function::Abi::Unknown","value":"Abi::Unknown(CXCallingConv)","parent":{"krate":0,"index":5283},"children":[],"decl_id":null,"docs":" An unknown or invalid ABI.\n","sig":null,"attributes":[{"value":"/ An unknown or invalid ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653085,"byte_end":653115,"line_start":181,"line_end":181,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":5283},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652845,"byte_end":652848,"line_start":168,"line_end":168,"column_start":10,"column_end":13},"name":"Abi","qualname":"::ir::function::Abi","value":"pub enum Abi {\n    C,\n    Stdcall,\n    Fastcall,\n    ThisCall,\n    Aapcs,\n    Win64,\n    Unknown(CXCallingConv),\n}","parent":null,"children":[{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":5290},{"krate":0,"index":5292},{"krate":0,"index":5294},{"krate":0,"index":5296}],"decl_id":null,"docs":" An ABI extracted from a clang cursor.\n","sig":null,"attributes":[{"value":"/ An ABI extracted from a clang cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652764,"byte_end":652805,"line_start":166,"line_end":166,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5304},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653989,"byte_end":654000,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"FunctionSig","qualname":"::ir::function::FunctionSig","value":"FunctionSig {  }","parent":null,"children":[{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":" A function signature.\n","sig":null,"attributes":[{"value":"/ A function signature.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653935,"byte_end":653960,"line_start":212,"line_end":212,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":658641,"byte_end":658644,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionSig>::new","value":"pub fn new(TypeId, Vec<(Option<String>, TypeId)>, bool, bool, Abi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature.\n","sig":null,"attributes":[{"value":"/ Construct a new function signature.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":658590,"byte_end":658629,"line_start":348,"line_end":348,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":659057,"byte_end":659064,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<FunctionSig>::from_ty","value":"pub fn from_ty(&clang::Type, &clang::Cursor, &mut BindgenContext)\n-> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature from the given Clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new function signature from the given Clang type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":658980,"byte_end":659045,"line_start":365,"line_end":365,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665287,"byte_end":665298,"line_start":527,"line_end":527,"column_start":12,"column_end":23},"name":"return_type","qualname":"<FunctionSig>::return_type","value":"pub fn return_type(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's return type.\n","sig":null,"attributes":[{"value":"/ Get this function signature's return type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665229,"byte_end":665275,"line_start":526,"line_end":526,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665428,"byte_end":665442,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"name":"argument_types","qualname":"<FunctionSig>::argument_types","value":"pub fn argument_types(&Self) -> &[(Option<String>, TypeId)]","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's argument (name, type) pairs.\n","sig":null,"attributes":[{"value":"/ Get this function signature's argument (name, type) pairs.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665354,"byte_end":665416,"line_start":531,"line_end":531,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665573,"byte_end":665576,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"abi","qualname":"<FunctionSig>::abi","value":"pub fn abi(&Self) -> Abi","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's ABI.\n","sig":null,"attributes":[{"value":"/ Get this function signature's ABI.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665523,"byte_end":665561,"line_start":536,"line_end":536,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665673,"byte_end":665684,"line_start":542,"line_end":542,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<FunctionSig>::is_variadic","value":"pub fn is_variadic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this function signature variadic?\n","sig":null,"attributes":[{"value":"/ Is this function signature variadic?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665621,"byte_end":665661,"line_start":541,"line_end":541,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666043,"byte_end":666051,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"must_use","qualname":"<FunctionSig>::must_use","value":"pub fn must_use(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Must this function's return value be used?\n","sig":null,"attributes":[{"value":"/ Must this function's return value be used?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":665985,"byte_end":666031,"line_start":549,"line_end":549,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666545,"byte_end":666573,"line_start":563,"line_end":563,"column_start":12,"column_end":40},"name":"function_pointers_can_derive","qualname":"<FunctionSig>::function_pointers_can_derive","value":"pub fn function_pointers_can_derive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are function pointers with this signature able to derive Rust traits?\n Rust only supports deriving traits for function pointers with a limited\n number of parameters and a couple ABIs.","sig":null,"attributes":[{"value":"/ Are function pointers with this signature able to derive Rust traits?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666102,"byte_end":666175,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ Rust only supports deriving traits for function pointers with a limited","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666180,"byte_end":666255,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ number of parameters and a couple ABIs.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666260,"byte_end":666303,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666308,"byte_end":666311,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ For more details, see:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666316,"byte_end":666342,"line_start":558,"line_end":558,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666347,"byte_end":666350,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ * https://github.com/rust-lang/rust-bindgen/issues/547,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666355,"byte_end":666414,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/ * https://github.com/rust-lang/rust/issues/38848,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666419,"byte_end":666472,"line_start":561,"line_end":561,"column_start":5,"column_end":58}},{"value":"/ * and https://github.com/rust-lang/rust/issues/40158","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666477,"byte_end":666533,"line_start":562,"line_end":562,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5313},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669602,"byte_end":669606,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::int::IntKind::Bool","value":"IntKind::Bool","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A `bool`.\n","sig":null,"attributes":[{"value":"/ A `bool`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669584,"byte_end":669597,"line_start":6,"line_end":6,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5315},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669638,"byte_end":669643,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"SChar","qualname":"::ir::int::IntKind::SChar","value":"IntKind::SChar","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A `signed char`.\n","sig":null,"attributes":[{"value":"/ A `signed char`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669613,"byte_end":669633,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5317},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669678,"byte_end":669683,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"UChar","qualname":"::ir::int::IntKind::UChar","value":"IntKind::UChar","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `unsigned char`.\n","sig":null,"attributes":[{"value":"/ An `unsigned char`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669650,"byte_end":669673,"line_start":12,"line_end":12,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5319},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669712,"byte_end":669717,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"WChar","qualname":"::ir::int::IntKind::WChar","value":"IntKind::WChar","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `wchar_t`.\n","sig":null,"attributes":[{"value":"/ An `wchar_t`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669690,"byte_end":669707,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":5321},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669795,"byte_end":669799,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::int::IntKind::Char","value":"IntKind::Char { is_signed }","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A platform-dependent `char` type, with the signedness support.\n","sig":null,"attributes":[{"value":"/ A platform-dependent `char` type, with the signedness support.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669724,"byte_end":669790,"line_start":18,"line_end":18,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5323},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669922,"byte_end":669927,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Short","qualname":"::ir::int::IntKind::Short","value":"IntKind::Short","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A `short`.\n","sig":null,"attributes":[{"value":"/ A `short`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669903,"byte_end":669917,"line_start":24,"line_end":24,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5325},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669963,"byte_end":669969,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"UShort","qualname":"::ir::int::IntKind::UShort","value":"IntKind::UShort","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `unsigned short`.\n","sig":null,"attributes":[{"value":"/ An `unsigned short`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669934,"byte_end":669958,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5327},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669994,"byte_end":669997,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::int::IntKind::Int","value":"IntKind::Int","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `int`.\n","sig":null,"attributes":[{"value":"/ An `int`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669976,"byte_end":669989,"line_start":30,"line_end":30,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5329},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670031,"byte_end":670035,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"UInt","qualname":"::ir::int::IntKind::UInt","value":"IntKind::UInt","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `unsigned int`.\n","sig":null,"attributes":[{"value":"/ An `unsigned int`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670004,"byte_end":670026,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5331},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670060,"byte_end":670064,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Long","qualname":"::ir::int::IntKind::Long","value":"IntKind::Long","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A `long`.\n","sig":null,"attributes":[{"value":"/ A `long`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670042,"byte_end":670055,"line_start":36,"line_end":36,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5333},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670099,"byte_end":670104,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"ULong","qualname":"::ir::int::IntKind::ULong","value":"IntKind::ULong","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `unsigned long`.\n","sig":null,"attributes":[{"value":"/ An `unsigned long`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670071,"byte_end":670094,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5335},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670134,"byte_end":670142,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"LongLong","qualname":"::ir::int::IntKind::LongLong","value":"IntKind::LongLong","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A `long long`.\n","sig":null,"attributes":[{"value":"/ A `long long`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670111,"byte_end":670129,"line_start":42,"line_end":42,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5337},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670182,"byte_end":670191,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ULongLong","qualname":"::ir::int::IntKind::ULongLong","value":"IntKind::ULongLong","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `unsigned long long`.\n","sig":null,"attributes":[{"value":"/ An `unsigned long long`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670149,"byte_end":670177,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5339},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670230,"byte_end":670232,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"I8","qualname":"::ir::int::IntKind::I8","value":"IntKind::I8","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 8-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 8-bit signed integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670198,"byte_end":670225,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5341},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670273,"byte_end":670275,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"U8","qualname":"::ir::int::IntKind::U8","value":"IntKind::U8","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 8-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 8-bit unsigned integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670239,"byte_end":670268,"line_start":51,"line_end":51,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5343},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670315,"byte_end":670318,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"I16","qualname":"::ir::int::IntKind::I16","value":"IntKind::I16","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 16-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 16-bit signed integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670282,"byte_end":670310,"line_start":54,"line_end":54,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5345},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670369,"byte_end":670372,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"U16","qualname":"::ir::int::IntKind::U16","value":"IntKind::U16","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" Either a `char16_t` or a `wchar_t`.\n","sig":null,"attributes":[{"value":"/ Either a `char16_t` or a `wchar_t`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670325,"byte_end":670364,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5347},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670412,"byte_end":670415,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"I32","qualname":"::ir::int::IntKind::I32","value":"IntKind::I32","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 32-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit signed integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670379,"byte_end":670407,"line_start":60,"line_end":60,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5349},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670457,"byte_end":670460,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"U32","qualname":"::ir::int::IntKind::U32","value":"IntKind::U32","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit unsigned integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670422,"byte_end":670452,"line_start":63,"line_end":63,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5351},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670500,"byte_end":670503,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I64","qualname":"::ir::int::IntKind::I64","value":"IntKind::I64","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 64-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit signed integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670467,"byte_end":670495,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5353},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670545,"byte_end":670548,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"U64","qualname":"::ir::int::IntKind::U64","value":"IntKind::U64","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A 64-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit unsigned integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670510,"byte_end":670540,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5355},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670577,"byte_end":670581,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"I128","qualname":"::ir::int::IntKind::I128","value":"IntKind::I128","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" An `int128_t`\n","sig":null,"attributes":[{"value":"/ An `int128_t`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670555,"byte_end":670572,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5357},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670611,"byte_end":670615,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"U128","qualname":"::ir::int::IntKind::U128","value":"IntKind::U128","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A `uint128_t`.\n","sig":null,"attributes":[{"value":"/ A `uint128_t`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670588,"byte_end":670606,"line_start":75,"line_end":75,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":5359},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670714,"byte_end":670720,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ir::int::IntKind::Custom","value":"IntKind::Custom { name, is_signed }","parent":{"krate":0,"index":5312},"children":[],"decl_id":null,"docs":" A custom integer type, used to allow custom macro types depending on\n range.\n","sig":null,"attributes":[{"value":"/ A custom integer type, used to allow custom macro types depending on","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670622,"byte_end":670694,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ range.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670699,"byte_end":670709,"line_start":79,"line_end":79,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":5312},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669570,"byte_end":669577,"line_start":5,"line_end":5,"column_start":10,"column_end":17},"name":"IntKind","qualname":"::ir::int::IntKind","value":"pub enum IntKind {\n    Bool,\n    SChar,\n    UChar,\n    WChar,\n    Char {\n        is_signed: bool,\n    },\n    Short,\n    UShort,\n    Int,\n    UInt,\n    Long,\n    ULong,\n    LongLong,\n    ULongLong,\n    I8,\n    U8,\n    I16,\n    U16,\n    I32,\n    U32,\n    I64,\n    U64,\n    I128,\n    U128,\n    Custom {\n        name: &'static str,\n        is_signed: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5325},{"krate":0,"index":5327},{"krate":0,"index":5329},{"krate":0,"index":5331},{"krate":0,"index":5333},{"krate":0,"index":5335},{"krate":0,"index":5337},{"krate":0,"index":5339},{"krate":0,"index":5341},{"krate":0,"index":5343},{"krate":0,"index":5345},{"krate":0,"index":5347},{"krate":0,"index":5349},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5355},{"krate":0,"index":5357},{"krate":0,"index":5359}],"decl_id":null,"docs":" Which integral type are we dealing with?\n","sig":null,"attributes":[{"value":"/ Which integral type are we dealing with?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":669448,"byte_end":669492,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670973,"byte_end":670982,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"is_signed","qualname":"<IntKind>::is_signed","value":"pub fn is_signed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this integral type signed?\n","sig":null,"attributes":[{"value":"/ Is this integral type signed?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670928,"byte_end":670961,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":671820,"byte_end":671830,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"known_size","qualname":"<IntKind>::known_size","value":"pub fn known_size(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" If this type has a known size, return it (in bytes). This is to\n alleviate libclang sometimes not giving us a layout (like in the case\n when an enum is defined inside a class with template parameters).\n","sig":null,"attributes":[{"value":"/ If this type has a known size, return it (in bytes). This is to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":671589,"byte_end":671656,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/ alleviate libclang sometimes not giving us a layout (like in the case","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":671661,"byte_end":671734,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ when an enum is defined inside a class with template parameters).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":671739,"byte_end":671808,"line_start":110,"line_end":110,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":672209,"byte_end":672227,"line_start":124,"line_end":124,"column_start":12,"column_end":30},"name":"signedness_matches","qualname":"<IntKind>::signedness_matches","value":"pub fn signedness_matches(&Self, i64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this type's signedness matches the value.\n","sig":null,"attributes":[{"value":"/ Whether this type's signedness matches the value.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":672144,"byte_end":672197,"line_start":123,"line_end":123,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":2925},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":674857,"byte_end":674862,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::item::IsOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Extra context the IR thing needs to determine if it is opaque or not.\n","sig":null,"attributes":[{"value":"/ Extra context the IR thing needs to determine if it is opaque or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":674774,"byte_end":674847,"line_start":76,"line_end":76,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":5381},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683392,"byte_end":683396,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"Item","qualname":"::ir::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390}],"decl_id":null,"docs":" An item is the base of the bindgen representation, it can be either a\n module, a type, a function, or a variable (see `ItemKind` for more\n information).","sig":null,"attributes":[{"value":"/ An item is the base of the bindgen representation, it can be either a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682562,"byte_end":682635,"line_start":363,"line_end":363,"column_start":1,"column_end":74}},{"value":"/ module, a type, a function, or a variable (see `ItemKind` for more","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682636,"byte_end":682706,"line_start":364,"line_end":364,"column_start":1,"column_end":71}},{"value":"/ information).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682707,"byte_end":682724,"line_start":365,"line_end":365,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682725,"byte_end":682728,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Items refer to each other by `ItemId`. Every item has its parent's","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682729,"byte_end":682799,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/ id. Depending on the kind of item this is, it may also refer to other items,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682800,"byte_end":682880,"line_start":368,"line_end":368,"column_start":1,"column_end":81}},{"value":"/ such as a compound type item referring to other types. Collectively, these","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682881,"byte_end":682959,"line_start":369,"line_end":369,"column_start":1,"column_end":79}},{"value":"/ references form a graph.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682960,"byte_end":682988,"line_start":370,"line_end":370,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682989,"byte_end":682992,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ The entry-point to this graph is the \"root module\": a meta-item used to hold","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682993,"byte_end":683073,"line_start":372,"line_end":372,"column_start":1,"column_end":81}},{"value":"/ all top-level items.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683074,"byte_end":683098,"line_start":373,"line_end":373,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683099,"byte_end":683102,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ An item may have a comment, and annotations (see the `annotations` module).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683103,"byte_end":683182,"line_start":375,"line_end":375,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683183,"byte_end":683186,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ Note that even though we parse all the types of annotations in comments, not","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683187,"byte_end":683267,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ all of them apply to every item. Those rules are described in the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683268,"byte_end":683337,"line_start":378,"line_end":378,"column_start":1,"column_end":70}},{"value":"/ `annotations` module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":683338,"byte_end":683363,"line_start":379,"line_end":379,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":684950,"byte_end":684953,"line_start":430,"line_end":430,"column_start":12,"column_end":15},"name":"new","qualname":"<Item>::new","value":"pub fn new(ItemId, Option<String>, Option<Annotations>, ItemId, ItemKind)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Item`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Item`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":684911,"byte_end":684938,"line_start":429,"line_end":429,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":685611,"byte_end":685626,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"new_opaque_type","qualname":"<Item>::new_opaque_type","value":"pub fn new_opaque_type(ItemId, &clang::Type, &mut BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque item type.\n","sig":null,"attributes":[{"value":"/ Construct a new opaque item type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":685562,"byte_end":685599,"line_start":451,"line_end":451,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686041,"byte_end":686043,"line_start":465,"line_end":465,"column_start":12,"column_end":14},"name":"id","qualname":"<Item>::id","value":"pub fn id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s identifier.\n","sig":null,"attributes":[{"value":"/ Get this `Item`'s identifier.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":685996,"byte_end":686029,"line_start":464,"line_end":464,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686212,"byte_end":686221,"line_start":472,"line_end":472,"column_start":12,"column_end":21},"name":"parent_id","qualname":"<Item>::parent_id","value":"pub fn parent_id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s parent's identifier.","sig":null,"attributes":[{"value":"/ Get this `Item`'s parent's identifier.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686090,"byte_end":686132,"line_start":469,"line_end":469,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686137,"byte_end":686140,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ For the root module, the parent's ID is its own ID.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686145,"byte_end":686200,"line_start":471,"line_end":471,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686403,"byte_end":686429,"line_start":479,"line_end":479,"column_start":12,"column_end":38},"name":"set_parent_for_replacement","qualname":"<Item>::set_parent_for_replacement","value":"pub fn set_parent_for_replacement<Id: Into<ItemId>>(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":" Set this item's parent id.","sig":null,"attributes":[{"value":"/ Set this item's parent id.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686275,"byte_end":686305,"line_start":476,"line_end":476,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686310,"byte_end":686313,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This is only used so replacements get generated in the proper module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686318,"byte_end":686391,"line_start":478,"line_end":478,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686662,"byte_end":686675,"line_start":486,"line_end":486,"column_start":12,"column_end":25},"name":"codegen_depth","qualname":"<Item>::codegen_depth","value":"pub fn codegen_depth(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth this item is indented to.","sig":null,"attributes":[{"value":"/ Returns the depth this item is indented to.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686516,"byte_end":686563,"line_start":483,"line_end":483,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686568,"byte_end":686571,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ FIXME(emilio): This may need fixes for the enums within modules stuff.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":686576,"byte_end":686650,"line_start":485,"line_end":485,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687241,"byte_end":687248,"line_start":504,"line_end":504,"column_start":12,"column_end":19},"name":"comment","qualname":"<Item>::comment","value":"pub fn comment(&Self, &BindgenContext) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s comment, if it has any, already preprocessed and with\n the right indentation.\n","sig":null,"attributes":[{"value":"/ Get this `Item`'s comment, if it has any, already preprocessed and with","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687123,"byte_end":687198,"line_start":502,"line_end":502,"column_start":5,"column_end":80}},{"value":"/ the right indentation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687203,"byte_end":687229,"line_start":503,"line_end":503,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687556,"byte_end":687560,"line_start":515,"line_end":515,"column_start":12,"column_end":16},"name":"kind","qualname":"<Item>::kind","value":"pub fn kind(&Self) -> &ItemKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of item is this?\n","sig":null,"attributes":[{"value":"/ What kind of item is this?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687514,"byte_end":687544,"line_start":514,"line_end":514,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687673,"byte_end":687681,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Item>::kind_mut","value":"pub fn kind_mut(&mut Self) -> &mut ItemKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this item's kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687613,"byte_end":687661,"line_start":519,"line_end":519,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688059,"byte_end":688067,"line_start":529,"line_end":529,"column_start":12,"column_end":20},"name":"local_id","qualname":"<Item>::local_id","value":"pub fn local_id(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates this item from its siblings.","sig":null,"attributes":[{"value":"/ Get an identifier that differentiates this item from its siblings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687746,"byte_end":687816,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687821,"byte_end":687824,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This should stay relatively stable in the face of code motion outside or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687829,"byte_end":687905,"line_start":526,"line_end":526,"column_start":5,"column_end":81}},{"value":"/ below this item's lexical scope, meaning that this can be useful for","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687910,"byte_end":687982,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/ generating relatively stable identifiers within a scope.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":687987,"byte_end":688047,"line_start":528,"line_end":528,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688559,"byte_end":688578,"line_start":542,"line_end":542,"column_start":12,"column_end":31},"name":"next_child_local_id","qualname":"<Item>::next_child_local_id","value":"pub fn next_child_local_id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates a child of this item of other\n related items.","sig":null,"attributes":[{"value":"/ Get an identifier that differentiates a child of this item of other","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688270,"byte_end":688341,"line_start":536,"line_end":536,"column_start":5,"column_end":76}},{"value":"/ related items.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688346,"byte_end":688364,"line_start":537,"line_end":537,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688369,"byte_end":688372,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This is currently used for anonymous items, and template instantiation","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688377,"byte_end":688451,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/ tests, in both cases in order to reduce noise when system headers are at","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688456,"byte_end":688532,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ place.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688537,"byte_end":688547,"line_start":541,"line_end":541,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689376,"byte_end":689387,"line_start":566,"line_end":566,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Item>::is_toplevel","value":"pub fn is_toplevel(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this item is a top-level item, from the point of view of\n bindgen.","sig":null,"attributes":[{"value":"/ Returns whether this item is a top-level item, from the point of view of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688732,"byte_end":688808,"line_start":548,"line_end":548,"column_start":5,"column_end":81}},{"value":"/ bindgen.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688813,"byte_end":688825,"line_start":549,"line_end":549,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688830,"byte_end":688833,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This point of view changes depending on whether namespaces are enabled","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688838,"byte_end":688912,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"/ or not. That way, in the following example:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688917,"byte_end":688964,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688969,"byte_end":688972,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688977,"byte_end":688987,"line_start":554,"line_end":554,"column_start":5,"column_end":15}},{"value":"/ namespace foo {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":688992,"byte_end":689011,"line_start":555,"line_end":555,"column_start":5,"column_end":24}},{"value":"/     static int var;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689016,"byte_end":689039,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689044,"byte_end":689049,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689054,"byte_end":689061,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689066,"byte_end":689069,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ `var` would be a toplevel item if namespaces are disabled, but won't if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689074,"byte_end":689149,"line_start":560,"line_end":560,"column_start":5,"column_end":80}},{"value":"/ they aren't.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689154,"byte_end":689170,"line_start":561,"line_end":561,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689175,"byte_end":689178,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is used to determine when the codegen phase should call","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689183,"byte_end":689256,"line_start":563,"line_end":563,"column_start":5,"column_end":78}},{"value":"/ `codegen` on an item, since any item that is not top-level will be","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689261,"byte_end":689331,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/ generated by its parent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":689336,"byte_end":689364,"line_start":565,"line_end":565,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690373,"byte_end":690384,"line_start":597,"line_end":597,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<Item>::expect_type","value":"pub fn expect_type(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`. Panic if this is some\n other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Type`. Panic if this is some","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690258,"byte_end":690333,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ other kind of item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690338,"byte_end":690361,"line_start":596,"line_end":596,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690567,"byte_end":690574,"line_start":603,"line_end":603,"column_start":12,"column_end":19},"name":"as_type","qualname":"<Item>::as_type","value":"pub fn as_type(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`, or `None` if this is\n some other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Type`, or `None` if this is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690448,"byte_end":690522,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ some other kind of item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690527,"byte_end":690555,"line_start":602,"line_end":602,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690761,"byte_end":690776,"line_start":609,"line_end":609,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<Item>::expect_function","value":"pub fn expect_function(&Self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Function`. Panic if this is\n some other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Function`. Panic if this is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690642,"byte_end":690716,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/ some other kind of item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690721,"byte_end":690749,"line_start":608,"line_end":608,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690886,"byte_end":690895,"line_start":614,"line_end":614,"column_start":12,"column_end":21},"name":"is_module","qualname":"<Item>::is_module","value":"pub fn is_module(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a module?\n","sig":null,"attributes":[{"value":"/ Is this item a module?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":690848,"byte_end":690874,"line_start":613,"line_end":613,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":691070,"byte_end":691081,"line_start":622,"line_end":622,"column_start":12,"column_end":23},"name":"annotations","qualname":"<Item>::annotations","value":"pub fn annotations(&Self) -> &Annotations","parent":null,"children":[],"decl_id":null,"docs":" Get this item's annotations.\n","sig":null,"attributes":[{"value":"/ Get this item's annotations.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":691026,"byte_end":691058,"line_start":621,"line_end":621,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":691289,"byte_end":691303,"line_start":629,"line_end":629,"column_start":12,"column_end":26},"name":"is_blacklisted","qualname":"<Item>::is_blacklisted","value":"pub fn is_blacklisted(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this item should be blacklisted.","sig":null,"attributes":[{"value":"/ Whether this item should be blacklisted.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":691144,"byte_end":691188,"line_start":626,"line_end":626,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":691193,"byte_end":691196,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This may be due to either annotations or to other kind of configuration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":691201,"byte_end":691277,"line_start":628,"line_end":628,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":692248,"byte_end":692259,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Item>::is_type_ref","value":"pub fn is_type_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[{"value":"/ Is this a reference to another type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":692196,"byte_end":692236,"line_start":654,"line_end":654,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":692388,"byte_end":692394,"line_start":660,"line_end":660,"column_start":12,"column_end":18},"name":"is_var","qualname":"<Item>::is_var","value":"pub fn is_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a var type?\n","sig":null,"attributes":[{"value":"/ Is this item a var type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":692348,"byte_end":692376,"line_start":659,"line_end":659,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":692566,"byte_end":692570,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"name","qualname":"<Item>::name","value":"pub fn name<'a>(&'a Self, &'a BindgenContext) -> NameOptions","parent":null,"children":[],"decl_id":null,"docs":" Take out item NameOptions\n","sig":null,"attributes":[{"value":"/ Take out item NameOptions","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":692525,"byte_end":692554,"line_start":667,"line_end":667,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":693755,"byte_end":693778,"line_start":702,"line_end":702,"column_start":12,"column_end":35},"name":"full_disambiguated_name","qualname":"<Item>::full_disambiguated_name","value":"pub fn full_disambiguated_name(&Self, &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" Create a fully disambiguated name for an item, including template\n parameters if it is a type\n","sig":null,"attributes":[{"value":"/ Create a fully disambiguated name for an item, including template","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":693639,"byte_end":693708,"line_start":700,"line_end":700,"column_start":5,"column_end":74}},{"value":"/ parameters if it is a type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":693713,"byte_end":693743,"line_start":701,"line_end":701,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698411,"byte_end":698430,"line_start":826,"line_end":826,"column_start":12,"column_end":31},"name":"real_canonical_name","qualname":"<Item>::real_canonical_name","value":"pub fn real_canonical_name(&Self, &BindgenContext, &NameOptions) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical name without taking into account the replaces\n annotation.","sig":null,"attributes":[{"value":"/ Get the canonical name without taking into account the replaces","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697681,"byte_end":697748,"line_start":811,"line_end":811,"column_start":5,"column_end":72}},{"value":"/ annotation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697753,"byte_end":697768,"line_start":812,"line_end":812,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697773,"byte_end":697776,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ This is the base logic used to implement hiding and replacing via","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697781,"byte_end":697850,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/ annotations, and also to implement proper name mangling.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697855,"byte_end":697915,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697920,"byte_end":697923,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ The idea is that each generated type in the same \"level\" (read: module","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":697928,"byte_end":698002,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ or namespace) has a unique canonical name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698007,"byte_end":698053,"line_start":818,"line_end":818,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698058,"byte_end":698061,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ This name should be derived from the immutable state contained in the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698066,"byte_end":698139,"line_start":820,"line_end":820,"column_start":5,"column_end":78}},{"value":"/ type and the parent chain, since it should be consistent.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698144,"byte_end":698205,"line_start":821,"line_end":821,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698210,"byte_end":698213,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ If `BindgenOptions::disable_nested_struct_naming` is true then returned","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698218,"byte_end":698293,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ name is the inner most non-anonymous name plus all the anonymous base names","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698298,"byte_end":698377,"line_start":824,"line_end":824,"column_start":5,"column_end":84}},{"value":"/ that follows.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":698382,"byte_end":698399,"line_start":825,"line_end":825,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":701382,"byte_end":701392,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"exposed_id","qualname":"<Item>::exposed_id","value":"pub fn exposed_id(&Self, &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" The exposed id that represents an unique id among the siblings of a\n given item.\n","sig":null,"attributes":[{"value":"/ The exposed id that represents an unique id among the siblings of a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":701279,"byte_end":701350,"line_start":920,"line_end":920,"column_start":5,"column_end":76}},{"value":"/ given item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":701355,"byte_end":701370,"line_start":921,"line_end":921,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":702243,"byte_end":702252,"line_start":943,"line_end":943,"column_start":12,"column_end":21},"name":"as_module","qualname":"<Item>::as_module","value":"pub fn as_module(&Self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's `Module`, or `None` if this is not a\n `Module` item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's `Module`, or `None` if this is not a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":702137,"byte_end":702208,"line_start":941,"line_end":941,"column_start":5,"column_end":76}},{"value":"/ `Module` item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":702213,"byte_end":702231,"line_start":942,"line_end":942,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":702523,"byte_end":702536,"line_start":952,"line_end":952,"column_start":12,"column_end":25},"name":"as_module_mut","qualname":"<Item>::as_module_mut","value":"pub fn as_module_mut(&mut Self) -> Option<&mut Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's `Module`, or `None` if this is\n not a `Module` item.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this item's `Module`, or `None` if this is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":702409,"byte_end":702482,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ not a `Module` item.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":702487,"byte_end":702511,"line_start":951,"line_end":951,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":704016,"byte_end":704038,"line_start":991,"line_end":991,"column_start":12,"column_end":34},"name":"is_enabled_for_codegen","qualname":"<Item>::is_enabled_for_codegen","value":"pub fn is_enabled_for_codegen(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item of a kind that is enabled for code generation?\n","sig":null,"attributes":[{"value":"/ Is this item of a kind that is enabled for code generation?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":703941,"byte_end":704004,"line_start":990,"line_end":990,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3060},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":705118,"byte_end":705139,"line_start":1017,"line_end":1017,"column_start":12,"column_end":33},"name":"path_for_whitelisting","qualname":"<Item>::path_for_whitelisting","value":"pub fn path_for_whitelisting(&Self, &BindgenContext) -> &Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path we should use for whitelisting / blacklisting, which\n doesn't include user-mangling.\n","sig":null,"attributes":[{"value":"/ Returns the path we should use for whitelisting / blacklisting, which","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":704994,"byte_end":705067,"line_start":1015,"line_end":1015,"column_start":5,"column_end":78}},{"value":"/ doesn't include user-mangling.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":705072,"byte_end":705106,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5417},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735153,"byte_end":735164,"line_start":1931,"line_end":1931,"column_start":12,"column_end":23},"name":"NameOptions","qualname":"::ir::item::NameOptions","value":"NameOptions {  }","parent":null,"children":[{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422}],"decl_id":null,"docs":" Builder struct for naming variations, which hold inside different\n flags for naming options.\n","sig":null,"attributes":[{"value":"/ Builder struct for naming variations, which hold inside different","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735025,"byte_end":735094,"line_start":1928,"line_end":1928,"column_start":1,"column_end":70}},{"value":"/ flags for naming options.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735095,"byte_end":735124,"line_start":1929,"line_end":1929,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735359,"byte_end":735362,"line_start":1940,"line_end":1940,"column_start":12,"column_end":15},"name":"new","qualname":"<NameOptions>::new","value":"pub fn new(&'a Item, &'a BindgenContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `NameOptions`\n","sig":null,"attributes":[{"value":"/ Construct a new `NameOptions`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735314,"byte_end":735347,"line_start":1939,"line_end":1939,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735750,"byte_end":735767,"line_start":1951,"line_end":1951,"column_start":12,"column_end":29},"name":"within_namespaces","qualname":"<NameOptions>::within_namespaces","value":"pub fn within_namespaces(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the name without the item's containing C++ namespaces mangled\n into it. In other words, the item's name within the item's namespace.\n","sig":null,"attributes":[{"value":"/ Construct the name without the item's containing C++ namespaces mangled","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735585,"byte_end":735660,"line_start":1949,"line_end":1949,"column_start":5,"column_end":80}},{"value":"/ into it. In other words, the item's name within the item's namespace.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735665,"byte_end":735738,"line_start":1950,"line_end":1950,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":736033,"byte_end":736036,"line_start":1962,"line_end":1962,"column_start":12,"column_end":15},"name":"get","qualname":"<NameOptions>::get","value":"pub fn get(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Construct a name `String`\n","sig":null,"attributes":[{"value":"/ Construct a name `String`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735992,"byte_end":736021,"line_start":1961,"line_end":1961,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5427},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736541,"byte_end":736547,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Module","qualname":"::ir::item_kind::ItemKind::Module","value":"ItemKind::Module(Module)","parent":{"krate":0,"index":5426},"children":[],"decl_id":null,"docs":" A module, created implicitly once (the root module), or via C++\n namespaces.\n","sig":null,"attributes":[{"value":"/ A module, created implicitly once (the root module), or via C++","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736449,"byte_end":736516,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ namespaces.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736521,"byte_end":736536,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5430},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736634,"byte_end":736638,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Type","qualname":"::ir::item_kind::ItemKind::Type","value":"ItemKind::Type(Type)","parent":{"krate":0,"index":5426},"children":[],"decl_id":null,"docs":" A type declared in any of the multiple ways it can be declared.\n","sig":null,"attributes":[{"value":"/ A type declared in any of the multiple ways it can be declared.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736562,"byte_end":736629,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5433},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736693,"byte_end":736701,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::item_kind::ItemKind::Function","value":"ItemKind::Function(Function)","parent":{"krate":0,"index":5426},"children":[],"decl_id":null,"docs":" A function or method declaration.\n","sig":null,"attributes":[{"value":"/ A function or method declaration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736651,"byte_end":736688,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5436},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736772,"byte_end":736775,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Var","qualname":"::ir::item_kind::ItemKind::Var","value":"ItemKind::Var(Var)","parent":{"krate":0,"index":5426},"children":[],"decl_id":null,"docs":" A variable declaration, most likely a static.\n","sig":null,"attributes":[{"value":"/ A variable declaration, most likely a static.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736718,"byte_end":736767,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":5426},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736434,"byte_end":736442,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ir::item_kind::ItemKind","value":"pub enum ItemKind {\n    Module(Module),\n    Type(Type),\n    Function(Function),\n    Var(Var),\n}","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5436}],"decl_id":null,"docs":" A item we parse and translate.\n","sig":null,"attributes":[{"value":"/ A item we parse and translate.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736373,"byte_end":736407,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736921,"byte_end":736930,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"as_module","qualname":"<ItemKind>::as_module","value":"pub fn as_module(&Self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or `None` if it\n is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Module`, or `None` if it","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736805,"byte_end":736881,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ is some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736886,"byte_end":736909,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737138,"byte_end":737147,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"kind_name","qualname":"<ItemKind>::kind_name","value":"pub fn kind_name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transform our `ItemKind` into a string.\n","sig":null,"attributes":[{"value":"/ Transform our `ItemKind` into a string.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737083,"byte_end":737126,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737427,"byte_end":737436,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"is_module","qualname":"<ItemKind>::is_module","value":"pub fn is_module(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a module?\n","sig":null,"attributes":[{"value":"/ Is this a module?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737394,"byte_end":737415,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737615,"byte_end":737628,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"expect_module","qualname":"<ItemKind>::expect_module","value":"pub fn expect_module(&Self) -> &Module","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or panic if it\n is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Module`, or panic if it","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737500,"byte_end":737575,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ is some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737580,"byte_end":737603,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737826,"byte_end":737837,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"as_function","qualname":"<ItemKind>::as_function","value":"pub fn as_function(&Self) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Function`, or `None` if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737708,"byte_end":737783,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ it is some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737788,"byte_end":737814,"line_start":60,"line_end":60,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738025,"byte_end":738036,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"is_function","qualname":"<ItemKind>::is_function","value":"pub fn is_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function?\n","sig":null,"attributes":[{"value":"/ Is this a function?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":737990,"byte_end":738013,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738219,"byte_end":738234,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<ItemKind>::expect_function","value":"pub fn expect_function(&Self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or panic if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Function`, or panic if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738102,"byte_end":738176,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ it is some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738181,"byte_end":738207,"line_start":74,"line_end":74,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738434,"byte_end":738441,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"as_type","qualname":"<ItemKind>::as_type","value":"pub fn as_type(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Type`, or `None` if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738320,"byte_end":738391,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ it is some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738396,"byte_end":738422,"line_start":80,"line_end":80,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738704,"byte_end":738715,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"as_type_mut","qualname":"<ItemKind>::as_type_mut","value":"pub fn as_type_mut(&mut Self) -> Option<&mut Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`\n if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738582,"byte_end":738658,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ if it is some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738663,"byte_end":738692,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738899,"byte_end":738906,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_type","qualname":"<ItemKind>::is_type","value":"pub fn is_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a type?\n","sig":null,"attributes":[{"value":"/ Is this a type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738868,"byte_end":738887,"line_start":97,"line_end":97,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739081,"byte_end":739092,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<ItemKind>::expect_type","value":"pub fn expect_type(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or panic if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Type`, or panic if it is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":738968,"byte_end":739044,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739049,"byte_end":739069,"line_start":103,"line_end":103,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739279,"byte_end":739285,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"as_var","qualname":"<ItemKind>::as_var","value":"pub fn as_var(&Self) -> Option<&Var>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739166,"byte_end":739242,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739247,"byte_end":739267,"line_start":109,"line_end":109,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739457,"byte_end":739463,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_var","qualname":"<ItemKind>::is_var","value":"pub fn is_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a variable?\n","sig":null,"attributes":[{"value":"/ Is this a variable?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739422,"byte_end":739445,"line_start":117,"line_end":117,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739636,"byte_end":739646,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"expect_var","qualname":"<ItemKind>::expect_var","value":"pub fn expect_var(&Self) -> &Var","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or panic if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Var`, or panic if it is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739524,"byte_end":739599,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ some other kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739604,"byte_end":739624,"line_start":123,"line_end":123,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5441},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740654,"byte_end":740660,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Layout","qualname":"::ir::layout::Layout","value":"Layout { size, align, packed }","parent":null,"children":[{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5444}],"decl_id":null,"docs":" A type that represents the struct layout of a type.\n","sig":null,"attributes":[{"value":"/ A type that represents the struct layout of a type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740546,"byte_end":740601,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5442},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740715,"byte_end":740719,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"size","qualname":"::ir::layout::Layout::size","value":"usize","parent":{"krate":0,"index":5441},"children":[],"decl_id":null,"docs":" The size (in bytes) of this layout.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of this layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740667,"byte_end":740706,"line_start":12,"line_end":12,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5443},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740785,"byte_end":740790,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"align","qualname":"::ir::layout::Layout::align","value":"usize","parent":{"krate":0,"index":5441},"children":[],"decl_id":null,"docs":" The alignment (in bytes) of this layout.\n","sig":null,"attributes":[{"value":"/ The alignment (in bytes) of this layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740732,"byte_end":740776,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":5444},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740864,"byte_end":740870,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"packed","qualname":"::ir::layout::Layout::packed","value":"bool","parent":{"krate":0,"index":5441},"children":[],"decl_id":null,"docs":" Whether this layout's members are packed or not.\n","sig":null,"attributes":[{"value":"/ Whether this layout's members are packed or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":740803,"byte_end":740855,"line_start":16,"line_end":16,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741313,"byte_end":741332,"line_start":37,"line_end":37,"column_start":12,"column_end":31},"name":"known_type_for_size","qualname":"<Layout>::known_type_for_size","value":"pub fn known_type_for_size(&BindgenContext, usize) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer type name for a given known size.\n","sig":null,"attributes":[{"value":"/ Gets the integer type name for a given known size.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741247,"byte_end":741301,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741762,"byte_end":741765,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Layout` with the given `size` and `align`. It is not\n packed.\n","sig":null,"attributes":[{"value":"/ Construct a new `Layout` with the given `size` and `align`. It is not","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741661,"byte_end":741734,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ packed.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741739,"byte_end":741750,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742341,"byte_end":742349,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"for_size","qualname":"<Layout>::for_size","value":"pub fn for_size(&BindgenContext, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a non-packed layout for a given size, trying to use the maximum\n alignment possible.\n","sig":null,"attributes":[{"value":"/ Creates a non-packed layout for a given size, trying to use the maximum","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742226,"byte_end":742301,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ alignment possible.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742306,"byte_end":742329,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742515,"byte_end":742522,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Layout>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a zero-sized layout?\n","sig":null,"attributes":[{"value":"/ Is this a zero-sized layout?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742471,"byte_end":742503,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742639,"byte_end":742643,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"zero","qualname":"<Layout>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a zero-sized layout.\n","sig":null,"attributes":[{"value":"/ Construct a zero-sized layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742593,"byte_end":742627,"line_start":84,"line_end":84,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742741,"byte_end":742747,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Layout>::opaque","value":"pub fn opaque(&Self) -> Opaque","parent":null,"children":[],"decl_id":null,"docs":" Get this layout as an opaque type.\n","sig":null,"attributes":[{"value":"/ Get this layout as an opaque type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742691,"byte_end":742729,"line_start":89,"line_end":89,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5454},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742922,"byte_end":742928,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::ir::layout::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":" When we are treating a type as opaque, it is just a blob with a `Layout`.\n","sig":null,"attributes":[{"value":"/ When we are treating a type as opaque, it is just a blob with a `Layout`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742798,"byte_end":742875,"line_start":95,"line_end":95,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":5456},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742929,"byte_end":742939,"line_start":97,"line_end":97,"column_start":19,"column_end":29},"name":"0","qualname":"::ir::layout::Opaque::0","value":"ir::layout::Layout","parent":{"krate":0,"index":5454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743031,"byte_end":743044,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Opaque>::from_clang_ty","value":"pub fn from_clang_ty(&clang::Type, &BindgenContext) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque type from the given clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new opaque type from the given clang type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742961,"byte_end":743019,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743422,"byte_end":743447,"line_start":110,"line_end":110,"column_start":12,"column_end":37},"name":"known_rust_type_for_array","qualname":"<Opaque>::known_rust_type_for_array","value":"pub fn known_rust_type_for_array(&Self, &BindgenContext)\n-> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the known rust type we should use to create a correctly-aligned\n field with this layout.\n","sig":null,"attributes":[{"value":"/ Return the known rust type we should use to create a correctly-aligned","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743304,"byte_end":743378,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ field with this layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743383,"byte_end":743410,"line_start":109,"line_end":109,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743742,"byte_end":743752,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"array_size","qualname":"<Opaque>::array_size","value":"pub fn array_size(&Self, &BindgenContext) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the array size that an opaque type for this layout should have if\n we know the correct type for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array size that an opaque type for this layout should have if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743592,"byte_end":743668,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ we know the correct type for it, or `None` otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743673,"byte_end":743730,"line_start":118,"line_end":118,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":744171,"byte_end":744201,"line_start":130,"line_end":130,"column_start":12,"column_end":42},"name":"array_size_within_derive_limit","qualname":"<Opaque>::array_size_within_derive_limit","value":"pub fn array_size_within_derive_limit(&Self, &BindgenContext) -> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if this opaque layout's array size will fit within the\n maximum number of array elements that Rust allows deriving traits\n with. Return `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Return `true` if this opaque layout's array size will fit within the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":743973,"byte_end":744045,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ maximum number of array elements that Rust allows deriving traits","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":744050,"byte_end":744119,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ with. Return `false` otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":744124,"byte_end":744159,"line_start":129,"line_end":129,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5466},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":744916,"byte_end":744922,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::module::ModuleKind::Normal","value":"ModuleKind::Normal","parent":{"krate":0,"index":5465},"children":[],"decl_id":null,"docs":" This module is not inline.\n","sig":null,"attributes":[{"value":"/ This module is not inline.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":744881,"byte_end":744911,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5468},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":744992,"byte_end":744998,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ir::module::ModuleKind::Inline","value":"ModuleKind::Inline","parent":{"krate":0,"index":5465},"children":[],"decl_id":null,"docs":" This module is inline, as in `inline namespace foo {}`.\n","sig":null,"attributes":[{"value":"/ This module is inline, as in `inline namespace foo {}`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":744928,"byte_end":744987,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":5465},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":744864,"byte_end":744874,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ir::module::ModuleKind","value":"pub enum ModuleKind { Normal, Inline, }","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5468}],"decl_id":null,"docs":" Whether this module is inline or not.\n","sig":null,"attributes":[{"value":"/ Whether this module is inline or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":744768,"byte_end":744809,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5481},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745076,"byte_end":745082,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Module","qualname":"::ir::module::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484}],"decl_id":null,"docs":" A module, as in, a C++ namespace.\n","sig":null,"attributes":[{"value":"/ A module, as in, a C++ namespace.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745003,"byte_end":745040,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745377,"byte_end":745380,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Module>::new","value":"pub fn new(Option<String>, ModuleKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Module`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Module`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745336,"byte_end":745365,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745594,"byte_end":745598,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this module's name.\n","sig":null,"attributes":[{"value":"/ Get this module's name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745555,"byte_end":745582,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745742,"byte_end":745754,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"children_mut","qualname":"<Module>::children_mut","value":"pub fn children_mut(&mut Self) -> &mut ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this module's children.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this module's children.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745676,"byte_end":745730,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745865,"byte_end":745873,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"children","qualname":"<Module>::children","value":"pub fn children(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get this module's children.\n","sig":null,"attributes":[{"value":"/ Get this module's children.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745822,"byte_end":745853,"line_start":51,"line_end":51,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745978,"byte_end":745987,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<Module>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this namespace is inline.\n","sig":null,"attributes":[{"value":"/ Whether this namespace is inline.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745929,"byte_end":745966,"line_start":56,"line_end":56,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5489},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":747800,"byte_end":747813,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"ObjCInterface","qualname":"::ir::objc::ObjCInterface","value":"ObjCInterface { template_names, conforms_to, parent_class }","parent":null,"children":[{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497}],"decl_id":null,"docs":" Objective C interface as used in TypeKind","sig":null,"attributes":[{"value":"/ Objective C interface as used in TypeKind","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":747664,"byte_end":747709,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":747710,"byte_end":747713,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Also protocols and categories are parsed as this type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":747714,"byte_end":747771,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5493},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748010,"byte_end":748024,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"template_names","qualname":"::ir::objc::ObjCInterface::template_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" The list of template names almost always, ObjectType or KeyType\n","sig":null,"attributes":[{"value":"/ The list of template names almost always, ObjectType or KeyType","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":747934,"byte_end":748001,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":5494},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748111,"byte_end":748122,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"conforms_to","qualname":"::ir::objc::ObjCInterface::conforms_to","value":"std::vec::Vec<ir::context::ItemId>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" The list of protocols that this interface conforms to.\n","sig":null,"attributes":[{"value":"/ The list of protocols that this interface conforms to.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748044,"byte_end":748102,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5495},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748192,"byte_end":748204,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"parent_class","qualname":"::ir::objc::ObjCInterface::parent_class","value":"std::option::Option<ir::context::ItemId>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" The direct parent for this interface.\n","sig":null,"attributes":[{"value":"/ The direct parent for this interface.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748142,"byte_end":748183,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5500},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748402,"byte_end":748412,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"ObjCMethod","qualname":"::ir::objc::ObjCMethod","value":"ObjCMethod {  }","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504}],"decl_id":null,"docs":" The objective c methods\n","sig":null,"attributes":[{"value":"/ The objective c methods","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748346,"byte_end":748373,"line_start":49,"line_end":49,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749128,"byte_end":749132,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCInterface>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name\n like, NSObject\n","sig":null,"attributes":[{"value":"/ The name","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749081,"byte_end":749093,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/ like, NSObject","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749098,"byte_end":749116,"line_start":81,"line_end":81,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749358,"byte_end":749367,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCInterface>::rust_name","value":"pub fn rust_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Formats the name for rust\n Can be like NSObject, but with categories might be like NSObject_NSCoderMethods\n and protocols are like PNSObject\n","sig":null,"attributes":[{"value":"/ Formats the name for rust","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749188,"byte_end":749217,"line_start":86,"line_end":86,"column_start":5,"column_end":34}},{"value":"/ Can be like NSObject, but with categories might be like NSObject_NSCoderMethods","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749222,"byte_end":749305,"line_start":87,"line_end":87,"column_start":5,"column_end":88}},{"value":"/ and protocols are like PNSObject","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749310,"byte_end":749346,"line_start":88,"line_end":88,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749732,"byte_end":749743,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_template","qualname":"<ObjCInterface>::is_template","value":"pub fn is_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template interface?\n","sig":null,"attributes":[{"value":"/ Is this a template interface?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749687,"byte_end":749720,"line_start":101,"line_end":101,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749873,"byte_end":749880,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"methods","qualname":"<ObjCInterface>::methods","value":"pub fn methods(&Self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the methods defined in this interface\n","sig":null,"attributes":[{"value":"/ List of the methods defined in this interface","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749812,"byte_end":749861,"line_start":106,"line_end":106,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749978,"byte_end":749989,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"is_protocol","qualname":"<ObjCInterface>::is_protocol","value":"pub fn is_protocol(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a protocol?\n","sig":null,"attributes":[{"value":"/ Is this a protocol?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":749943,"byte_end":749966,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":750078,"byte_end":750089,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"is_category","qualname":"<ObjCInterface>::is_category","value":"pub fn is_category(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a category?\n","sig":null,"attributes":[{"value":"/ Is this a category?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":750043,"byte_end":750066,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":750217,"byte_end":750230,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"class_methods","qualname":"<ObjCInterface>::class_methods","value":"pub fn class_methods(&Self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the class methods defined in this interface\n","sig":null,"attributes":[{"value":"/ List of the class methods defined in this interface","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":750150,"byte_end":750205,"line_start":121,"line_end":121,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":750363,"byte_end":750370,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<ObjCInterface>::from_ty","value":"pub fn from_ty(&clang::Cursor, &mut BindgenContext) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses the Objective C interface from the cursor\n","sig":null,"attributes":[{"value":"/ Parses the Objective C interface from the cursor","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":750299,"byte_end":750351,"line_start":126,"line_end":126,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754264,"byte_end":754268,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCMethod>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The original method selector name\n like, dataWithBytes:length:\n","sig":null,"attributes":[{"value":"/ The original method selector name","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754179,"byte_end":754216,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ like, dataWithBytes:length:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754221,"byte_end":754252,"line_start":228,"line_end":228,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754408,"byte_end":754417,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCMethod>::rust_name","value":"pub fn rust_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Method name as converted to rust\n like, dataWithBytes_length_\n","sig":null,"attributes":[{"value":"/ Method name as converted to rust","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754324,"byte_end":754360,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ like, dataWithBytes_length_","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754365,"byte_end":754396,"line_start":234,"line_end":234,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754538,"byte_end":754547,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"signature","qualname":"<ObjCMethod>::signature","value":"pub fn signature(&Self) -> &FunctionSig","parent":null,"children":[],"decl_id":null,"docs":" Returns the methods signature as FunctionSig\n","sig":null,"attributes":[{"value":"/ Returns the methods signature as FunctionSig","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754478,"byte_end":754526,"line_start":239,"line_end":239,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754647,"byte_end":754662,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"is_class_method","qualname":"<ObjCMethod>::is_class_method","value":"pub fn is_class_method(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a class method?\n","sig":null,"attributes":[{"value":"/ Is this a class method?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754608,"byte_end":754635,"line_start":244,"line_end":244,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754759,"byte_end":754777,"line_start":250,"line_end":250,"column_start":12,"column_end":30},"name":"format_method_call","qualname":"<ObjCMethod>::format_method_call","value":"pub fn format_method_call(&Self, &[TokenStream]) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Formats the method call\n","sig":null,"attributes":[{"value":"/ Formats the method call","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":754720,"byte_end":754747,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":3407},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763138,"byte_end":763143,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::template::AsTemplateParam::Extra","value":"type Extra;","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":" Any extra information the implementor might need to make this decision.\n","sig":null,"attributes":[{"value":"/ Any extra information the implementor might need to make this decision.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763053,"byte_end":763128,"line_start":168,"line_end":168,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":5508},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763664,"byte_end":763685,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"TemplateInstantiation","qualname":"::ir::template::TemplateInstantiation","value":"TemplateInstantiation {  }","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5510}],"decl_id":null,"docs":" A concrete instantiation of a generic template.\n","sig":null,"attributes":[{"value":"/ A concrete instantiation of a generic template.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763577,"byte_end":763628,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764038,"byte_end":764041,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TemplateInstantiation>::new","value":"pub fn new<I>(TypeId, I) -> TemplateInstantiation where I: IntoIterator<Item =\nTypeId>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new template instantiation from the given parts.\n","sig":null,"attributes":[{"value":"/ Construct a new template instantiation from the given parts.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763962,"byte_end":764026,"line_start":199,"line_end":199,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764345,"byte_end":764364,"line_start":211,"line_end":211,"column_start":12,"column_end":31},"name":"template_definition","qualname":"<TemplateInstantiation>::template_definition","value":"pub fn template_definition(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get the template definition for this instantiation.\n","sig":null,"attributes":[{"value":"/ Get the template definition for this instantiation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764278,"byte_end":764333,"line_start":210,"line_end":210,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764498,"byte_end":764516,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"template_arguments","qualname":"<TemplateInstantiation>::template_arguments","value":"pub fn template_arguments(&Self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete template arguments used in this instantiation.\n","sig":null,"attributes":[{"value":"/ Get the concrete template arguments used in this instantiation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764419,"byte_end":764486,"line_start":215,"line_end":215,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764641,"byte_end":764648,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<TemplateInstantiation>::from_ty","value":"pub fn from_ty(&clang::Type, &mut BindgenContext)\n-> Option<TemplateInstantiation>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `TemplateInstantiation` from a clang `Type`.\n","sig":null,"attributes":[{"value":"/ Parse a `TemplateInstantiation` from a clang `Type`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":764573,"byte_end":764629,"line_start":220,"line_end":220,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":3491},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779734,"byte_end":779739,"line_start":366,"line_end":366,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::traversal::Trace::Extra","value":"type Extra;","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":" If a particular type needs extra information beyond what it has in\n `self` and `context` to find its referenced items, its implementation\n can define this associated type, forcing callers to pass the needed\n information through.\n","sig":null,"attributes":[{"value":"/ If a particular type needs extra information beyond what it has in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779471,"byte_end":779541,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ `self` and `context` to find its referenced items, its implementation","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779546,"byte_end":779619,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ can define this associated type, forcing callers to pass the needed","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779624,"byte_end":779695,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ information through.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779700,"byte_end":779724,"line_start":365,"line_end":365,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":5594},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":784448,"byte_end":784452,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Type","qualname":"::ir::ty::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5598}],"decl_id":null,"docs":" The base representation of a type in bindgen.","sig":null,"attributes":[{"value":"/ The base representation of a type in bindgen.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":784153,"byte_end":784202,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":784203,"byte_end":784206,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A type has an optional name, which if present cannot be empty, a `layout`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":784207,"byte_end":784284,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ (size, alignment and packedness) if known, a `Kind`, which determines which","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":784285,"byte_end":784364,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ kind of type it is, and whether the type is const.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":784365,"byte_end":784419,"line_start":25,"line_end":25,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785207,"byte_end":785214,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"as_comp","qualname":"<Type>::as_comp","value":"pub fn as_comp(&Self) -> Option<&CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type, or `None` if this is some\n other kind of type.\n","sig":null,"attributes":[{"value":"/ Get the underlying `CompInfo` for this type, or `None` if this is some","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785093,"byte_end":785167,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ other kind of type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785172,"byte_end":785195,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785500,"byte_end":785511,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"as_comp_mut","qualname":"<Type>::as_comp_mut","value":"pub fn as_comp_mut(&mut Self) -> Option<&mut CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type as a mutable reference, or\n `None` if this is some other kind of type.\n","sig":null,"attributes":[{"value":"/ Get the underlying `CompInfo` for this type as a mutable reference, or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785363,"byte_end":785437,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ `None` if this is some other kind of type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785442,"byte_end":785488,"line_start":56,"line_end":56,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785711,"byte_end":785714,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Type>::new","value":"pub fn new(Option<String>, Option<Layout>, TypeKind, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Type`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Type`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785672,"byte_end":785699,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785999,"byte_end":786003,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"pub fn kind(&Self) -> &TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Which kind of type is this?\n","sig":null,"attributes":[{"value":"/ Which kind of type is this?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785956,"byte_end":785987,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786116,"byte_end":786124,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Type>::kind_mut","value":"pub fn kind_mut(&mut Self) -> &mut TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this type's kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this type's kind.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786056,"byte_end":786104,"line_start":84,"line_end":84,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786226,"byte_end":786230,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"name","qualname":"<Type>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's name.\n","sig":null,"attributes":[{"value":"/ Get this type's name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786189,"byte_end":786214,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786367,"byte_end":786383,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"is_block_pointer","qualname":"<Type>::is_block_pointer","value":"pub fn is_block_pointer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this is a block pointer type.\n","sig":null,"attributes":[{"value":"/ Whether this is a block pointer type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786314,"byte_end":786355,"line_start":94,"line_end":94,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786560,"byte_end":786567,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_comp","qualname":"<Type>::is_comp","value":"pub fn is_comp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a compound type?\n","sig":null,"attributes":[{"value":"/ Is this a compound type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786520,"byte_end":786548,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786728,"byte_end":786736,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"is_union","qualname":"<Type>::is_union","value":"pub fn is_union(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[{"value":"/ Is this a union?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786696,"byte_end":786716,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786941,"byte_end":786954,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_type_param","qualname":"<Type>::is_type_param","value":"pub fn is_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type of kind `TypeKind::TypeParam`?\n","sig":null,"attributes":[{"value":"/ Is this type of kind `TypeKind::TypeParam`?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":786882,"byte_end":786929,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787138,"byte_end":787163,"line_start":127,"line_end":127,"column_start":12,"column_end":37},"name":"is_template_instantiation","qualname":"<Type>::is_template_instantiation","value":"pub fn is_template_instantiation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template instantiation type?\n","sig":null,"attributes":[{"value":"/ Is this a template instantiation type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787084,"byte_end":787126,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787355,"byte_end":787372,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"is_template_alias","qualname":"<Type>::is_template_alias","value":"pub fn is_template_alias(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template alias type?\n","sig":null,"attributes":[{"value":"/ Is this a template alias type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787309,"byte_end":787343,"line_start":134,"line_end":134,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787550,"byte_end":787561,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"is_function","qualname":"<Type>::is_function","value":"pub fn is_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function type?\n","sig":null,"attributes":[{"value":"/ Is this a function type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787510,"byte_end":787538,"line_start":142,"line_end":142,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787731,"byte_end":787738,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"is_enum","qualname":"<Type>::is_enum","value":"pub fn is_enum(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an enum type?\n","sig":null,"attributes":[{"value":"/ Is this an enum type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787694,"byte_end":787719,"line_start":150,"line_end":150,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787922,"byte_end":787946,"line_start":159,"line_end":159,"column_start":12,"column_end":36},"name":"is_builtin_or_type_param","qualname":"<Type>::is_builtin_or_type_param","value":"pub fn is_builtin_or_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this either a builtin or named type?\n","sig":null,"attributes":[{"value":"/ Is this either a builtin or named type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":787867,"byte_end":787910,"line_start":158,"line_end":158,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788407,"byte_end":788412,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"pub fn named(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named type, with name `name`.\n","sig":null,"attributes":[{"value":"/ Creates a new named type, with name `name`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788348,"byte_end":788395,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788620,"byte_end":788628,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Type>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a floating point type?\n","sig":null,"attributes":[{"value":"/ Is this a floating point type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788574,"byte_end":788608,"line_start":180,"line_end":180,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788797,"byte_end":788804,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Type>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a boolean type?\n","sig":null,"attributes":[{"value":"/ Is this a boolean type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788758,"byte_end":788785,"line_start":188,"line_end":188,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788983,"byte_end":788993,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Type>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an integer type?\n","sig":null,"attributes":[{"value":"/ Is this an integer type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":788943,"byte_end":788971,"line_start":196,"line_end":196,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789219,"byte_end":789229,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Type>::as_integer","value":"pub fn as_integer(&Self) -> Option<IntKind>","parent":null,"children":[],"decl_id":null,"docs":" Cast this type to an integer kind, or `None` if it is not an integer\n type.\n","sig":null,"attributes":[{"value":"/ Cast this type to an integer kind, or `None` if it is not an integer","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789121,"byte_end":789193,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789198,"byte_end":789207,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789432,"byte_end":789440,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a `const` qualified type?\n","sig":null,"attributes":[{"value":"/ Is this a `const` qualified type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789383,"byte_end":789420,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789543,"byte_end":789554,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Type>::is_type_ref","value":"pub fn is_type_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[{"value":"/ Is this a reference to another type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789491,"byte_end":789531,"line_start":218,"line_end":218,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789792,"byte_end":789809,"line_start":228,"line_end":228,"column_start":12,"column_end":29},"name":"is_unresolved_ref","qualname":"<Type>::is_unresolved_ref","value":"pub fn is_unresolved_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an unresolved reference?\n","sig":null,"attributes":[{"value":"/ Is this an unresolved reference?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789744,"byte_end":789780,"line_start":227,"line_end":227,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":790004,"byte_end":790023,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"is_incomplete_array","qualname":"<Type>::is_incomplete_array","value":"pub fn is_incomplete_array(&Self, &BindgenContext) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Is this a incomplete array type?\n","sig":null,"attributes":[{"value":"/ Is this a incomplete array type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":789956,"byte_end":789992,"line_start":235,"line_end":235,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":790514,"byte_end":790520,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"layout","qualname":"<Type>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" What is the layout of this type?\n","sig":null,"attributes":[{"value":"/ What is the layout of this type?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":790466,"byte_end":790502,"line_start":252,"line_end":252,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":791567,"byte_end":791588,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"is_invalid_type_param","qualname":"<Type>::is_invalid_type_param","value":"pub fn is_invalid_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this named type is an invalid C++ identifier. This is done to\n avoid generating invalid code with some cases we can't handle, see:","sig":null,"attributes":[{"value":"/ Whether this named type is an invalid C++ identifier. This is done to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":791353,"byte_end":791426,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ avoid generating invalid code with some cases we can't handle, see:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":791431,"byte_end":791502,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":791507,"byte_end":791510,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ tests/headers/381-decltype-alias.hpp","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":791515,"byte_end":791555,"line_start":277,"line_end":277,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":792238,"byte_end":792252,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"sanitized_name","qualname":"<Type>::sanitized_name","value":"pub fn sanitized_name<'a>(&'a Self, &BindgenContext) -> Option<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's santizied name.\n","sig":null,"attributes":[{"value":"/ Get this type's santizied name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":792191,"byte_end":792226,"line_start":298,"line_end":298,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793125,"byte_end":793139,"line_start":326,"line_end":326,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"pub fn canonical_type<'tr>(&'tr Self, &'tr BindgenContext) -> &'tr Type","parent":null,"children":[],"decl_id":null,"docs":" See safe_canonical_type.\n","sig":null,"attributes":[{"value":"/ See safe_canonical_type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793085,"byte_end":793113,"line_start":325,"line_end":325,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793648,"byte_end":793667,"line_start":339,"line_end":339,"column_start":12,"column_end":31},"name":"safe_canonical_type","qualname":"<Type>::safe_canonical_type","value":"pub fn safe_canonical_type<'tr>(&'tr Self, &'tr BindgenContext)\n-> Option<&'tr Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical type of this type, that is, the \"inner type\".","sig":null,"attributes":[{"value":"/ Returns the canonical type of this type, that is, the \"inner type\".","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793333,"byte_end":793404,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793409,"byte_end":793412,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ For example, for a `typedef`, the canonical type would be the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793417,"byte_end":793482,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/ `typedef`ed type, for a template instantiation, would be the template","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793487,"byte_end":793560,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ its specializing, and so on. Return None if the type is unresolved.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":793565,"byte_end":793636,"line_start":338,"line_end":338,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":795029,"byte_end":795061,"line_start":378,"line_end":378,"column_start":12,"column_end":44},"name":"should_be_traced_unconditionally","qualname":"<Type>::should_be_traced_unconditionally","value":"pub fn should_be_traced_unconditionally(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are some types we don't want to stop at when finding an opaque\n item, so we can arrive to the proper item that needs to be generated.\n","sig":null,"attributes":[{"value":"/ There are some types we don't want to stop at when finding an opaque","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":794867,"byte_end":794939,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ item, so we can arrive to the proper item that needs to be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":794944,"byte_end":795017,"line_start":377,"line_end":377,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5602},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801640,"byte_end":801645,"line_start":609,"line_end":609,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::FloatKind::Float","value":"FloatKind::Float","parent":{"krate":0,"index":5601},"children":[],"decl_id":null,"docs":" A `float`.\n","sig":null,"attributes":[{"value":"/ A `float`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801621,"byte_end":801635,"line_start":608,"line_end":608,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5604},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801671,"byte_end":801677,"line_start":611,"line_end":611,"column_start":5,"column_end":11},"name":"Double","qualname":"::ir::ty::FloatKind::Double","value":"FloatKind::Double","parent":{"krate":0,"index":5601},"children":[],"decl_id":null,"docs":" A `double`.\n","sig":null,"attributes":[{"value":"/ A `double`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801651,"byte_end":801666,"line_start":610,"line_end":610,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5606},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801708,"byte_end":801718,"line_start":613,"line_end":613,"column_start":5,"column_end":15},"name":"LongDouble","qualname":"::ir::ty::FloatKind::LongDouble","value":"FloatKind::LongDouble","parent":{"krate":0,"index":5601},"children":[],"decl_id":null,"docs":" A `long double`.\n","sig":null,"attributes":[{"value":"/ A `long double`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801683,"byte_end":801703,"line_start":612,"line_end":612,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5608},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801748,"byte_end":801756,"line_start":615,"line_end":615,"column_start":5,"column_end":13},"name":"Float128","qualname":"::ir::ty::FloatKind::Float128","value":"FloatKind::Float128","parent":{"krate":0,"index":5601},"children":[],"decl_id":null,"docs":" A `__float128`.\n","sig":null,"attributes":[{"value":"/ A `__float128`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801724,"byte_end":801743,"line_start":614,"line_end":614,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":5601},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801605,"byte_end":801614,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"FloatKind","qualname":"::ir::ty::FloatKind","value":"pub enum FloatKind { Float, Double, LongDouble, Float128, }","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5608}],"decl_id":null,"docs":" The kind of float this type represents.\n","sig":null,"attributes":[{"value":"/ The kind of float this type represents.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801511,"byte_end":801554,"line_start":605,"line_end":605,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5619},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801877,"byte_end":801881,"line_start":622,"line_end":622,"column_start":5,"column_end":9},"name":"Void","qualname":"::ir::ty::TypeKind::Void","value":"TypeKind::Void","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" The void type.\n","sig":null,"attributes":[{"value":"/ The void type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801854,"byte_end":801872,"line_start":621,"line_end":621,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5621},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801918,"byte_end":801925,"line_start":625,"line_end":625,"column_start":5,"column_end":12},"name":"NullPtr","qualname":"::ir::ty::TypeKind::NullPtr","value":"TypeKind::NullPtr","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" The `nullptr_t` type.\n","sig":null,"attributes":[{"value":"/ The `nullptr_t` type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801888,"byte_end":801913,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5623},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801993,"byte_end":801997,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"name":"Comp","qualname":"::ir::ty::TypeKind::Comp","value":"TypeKind::Comp(CompInfo)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A compound type, that is, a class, struct, or union.\n","sig":null,"attributes":[{"value":"/ A compound type, that is, a class, struct, or union.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801932,"byte_end":801988,"line_start":627,"line_end":627,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5626},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802188,"byte_end":802194,"line_start":633,"line_end":633,"column_start":5,"column_end":11},"name":"Opaque","qualname":"::ir::ty::TypeKind::Opaque","value":"TypeKind::Opaque","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" An opaque type that we just don't understand. All usage of this shoulf\n result in an opaque blob of bytes generated from the containing type's\n layout.\n","sig":null,"attributes":[{"value":"/ An opaque type that we just don't understand. All usage of this shoulf","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802014,"byte_end":802088,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ result in an opaque blob of bytes generated from the containing type's","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802093,"byte_end":802167,"line_start":631,"line_end":631,"column_start":5,"column_end":79}},{"value":"/ layout.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802172,"byte_end":802183,"line_start":632,"line_end":632,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5628},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802299,"byte_end":802302,"line_start":637,"line_end":637,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::ty::TypeKind::Int","value":"TypeKind::Int(IntKind)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" An integer type, of a given kind. `bool` and `char` are also considered\n integers.\n","sig":null,"attributes":[{"value":"/ An integer type, of a given kind. `bool` and `char` are also considered","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802201,"byte_end":802276,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/ integers.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802281,"byte_end":802294,"line_start":636,"line_end":636,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5631},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802349,"byte_end":802354,"line_start":640,"line_end":640,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::TypeKind::Float","value":"TypeKind::Float(FloatKind)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A floating point type.\n","sig":null,"attributes":[{"value":"/ A floating point type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802318,"byte_end":802344,"line_start":639,"line_end":639,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5634},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802411,"byte_end":802418,"line_start":643,"line_end":643,"column_start":5,"column_end":12},"name":"Complex","qualname":"::ir::ty::TypeKind::Complex","value":"TypeKind::Complex(FloatKind)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A complex floating point type.\n","sig":null,"attributes":[{"value":"/ A complex floating point type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802372,"byte_end":802406,"line_start":642,"line_end":642,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5637},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802500,"byte_end":802505,"line_start":646,"line_end":646,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ir::ty::TypeKind::Alias","value":"TypeKind::Alias(TypeId)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A type alias, with a name, that points to another type.\n","sig":null,"attributes":[{"value":"/ A type alias, with a name, that points to another type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802436,"byte_end":802495,"line_start":645,"line_end":645,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5640},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802629,"byte_end":802642,"line_start":650,"line_end":650,"column_start":5,"column_end":18},"name":"TemplateAlias","qualname":"::ir::ty::TypeKind::TemplateAlias","value":"TypeKind::TemplateAlias(TypeId, Vec<TypeId>)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A templated alias, pointing to an inner type, just as `Alias`, but with\n template parameters.\n","sig":null,"attributes":[{"value":"/ A templated alias, pointing to an inner type, just as `Alias`, but with","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802520,"byte_end":802595,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ template parameters.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802600,"byte_end":802624,"line_start":649,"line_end":649,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5644},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802733,"byte_end":802739,"line_start":653,"line_end":653,"column_start":5,"column_end":11},"name":"Vector","qualname":"::ir::ty::TypeKind::Vector","value":"TypeKind::Vector(TypeId, usize)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A packed vector type: element type, number of elements\n","sig":null,"attributes":[{"value":"/ A packed vector type: element type, number of elements","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802670,"byte_end":802728,"line_start":652,"line_end":652,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5648},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802802,"byte_end":802807,"line_start":656,"line_end":656,"column_start":5,"column_end":10},"name":"Array","qualname":"::ir::ty::TypeKind::Array","value":"TypeKind::Array(TypeId, usize)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" An array of a type and a length.\n","sig":null,"attributes":[{"value":"/ An array of a type and a length.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802761,"byte_end":802797,"line_start":655,"line_end":655,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5652},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802878,"byte_end":802886,"line_start":659,"line_end":659,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::ty::TypeKind::Function","value":"TypeKind::Function(FunctionSig)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A function type, with a given signature.\n","sig":null,"attributes":[{"value":"/ A function type, with a given signature.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802829,"byte_end":802873,"line_start":658,"line_end":658,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5655},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802930,"byte_end":802934,"line_start":662,"line_end":662,"column_start":5,"column_end":9},"name":"Enum","qualname":"::ir::ty::TypeKind::Enum","value":"TypeKind::Enum(Enum)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" An `enum` type.\n","sig":null,"attributes":[{"value":"/ An `enum` type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802906,"byte_end":802925,"line_start":661,"line_end":661,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5658},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803037,"byte_end":803044,"line_start":666,"line_end":666,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::ir::ty::TypeKind::Pointer","value":"TypeKind::Pointer(TypeId)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A pointer to a type. The bool field represents whether it's const or\n not.\n","sig":null,"attributes":[{"value":"/ A pointer to a type. The bool field represents whether it's const or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":802947,"byte_end":803019,"line_start":664,"line_end":664,"column_start":5,"column_end":77}},{"value":"/ not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803024,"byte_end":803032,"line_start":665,"line_end":665,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5661},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803096,"byte_end":803108,"line_start":669,"line_end":669,"column_start":5,"column_end":17},"name":"BlockPointer","qualname":"::ir::ty::TypeKind::BlockPointer","value":"TypeKind::BlockPointer(TypeId)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A pointer to an Apple block.\n","sig":null,"attributes":[{"value":"/ A pointer to an Apple block.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803059,"byte_end":803091,"line_start":668,"line_end":668,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5664},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803173,"byte_end":803182,"line_start":672,"line_end":672,"column_start":5,"column_end":14},"name":"Reference","qualname":"::ir::ty::TypeKind::Reference","value":"TypeKind::Reference(TypeId)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A reference to a type, as in: int& foo().\n","sig":null,"attributes":[{"value":"/ A reference to a type, as in: int& foo().","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803123,"byte_end":803168,"line_start":671,"line_end":671,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5667},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803308,"byte_end":803329,"line_start":676,"line_end":676,"column_start":5,"column_end":26},"name":"TemplateInstantiation","qualname":"::ir::ty::TypeKind::TemplateInstantiation","value":"TypeKind::TemplateInstantiation(TemplateInstantiation)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" An instantiation of an abstract template definition with a set of\n concrete template arguments.\n","sig":null,"attributes":[{"value":"/ An instantiation of an abstract template definition with a set of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803197,"byte_end":803266,"line_start":674,"line_end":674,"column_start":5,"column_end":74}},{"value":"/ concrete template arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803271,"byte_end":803303,"line_start":675,"line_end":675,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5670},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803717,"byte_end":803734,"line_start":685,"line_end":685,"column_start":5,"column_end":22},"name":"UnresolvedTypeRef","qualname":"::ir::ty::TypeKind::UnresolvedTypeRef","value":"TypeKind::UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A reference to a yet-to-resolve type. This stores the clang cursor\n itself, and postpones its resolution.","sig":null,"attributes":[{"value":"/ A reference to a yet-to-resolve type. This stores the clang cursor","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803359,"byte_end":803429,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ itself, and postpones its resolution.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803434,"byte_end":803475,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803480,"byte_end":803483,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ These are gone in a phase after parsing where these are mapped to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803488,"byte_end":803557,"line_start":681,"line_end":681,"column_start":5,"column_end":74}},{"value":"/ already known types, and are converted to ResolvedTypeRef.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803562,"byte_end":803624,"line_start":682,"line_end":682,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803629,"byte_end":803632,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ see tests/headers/typeref.hpp to see somewhere where this is a problem.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803637,"byte_end":803712,"line_start":684,"line_end":684,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5675},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804006,"byte_end":804021,"line_start":696,"line_end":696,"column_start":5,"column_end":20},"name":"ResolvedTypeRef","qualname":"::ir::ty::TypeKind::ResolvedTypeRef","value":"TypeKind::ResolvedTypeRef(TypeId)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" An indirection to another type.","sig":null,"attributes":[{"value":"/ An indirection to another type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803840,"byte_end":803875,"line_start":692,"line_end":692,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803880,"byte_end":803883,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ These are generated after we resolve a forward declaration, or when we","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803888,"byte_end":803962,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ replace one type with another.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":803967,"byte_end":804001,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5678},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804089,"byte_end":804098,"line_start":699,"line_end":699,"column_start":5,"column_end":14},"name":"TypeParam","qualname":"::ir::ty::TypeKind::TypeParam","value":"TypeKind::TypeParam","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" A named type, that is, a template parameter.\n","sig":null,"attributes":[{"value":"/ A named type, that is, a template parameter.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804036,"byte_end":804084,"line_start":698,"line_end":698,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804172,"byte_end":804185,"line_start":702,"line_end":702,"column_start":5,"column_end":18},"name":"ObjCInterface","qualname":"::ir::ty::TypeKind::ObjCInterface","value":"TypeKind::ObjCInterface(ObjCInterface)","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" Objective C interface. Always referenced through a pointer\n","sig":null,"attributes":[{"value":"/ Objective C interface. Always referenced through a pointer","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804105,"byte_end":804167,"line_start":701,"line_end":701,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5683},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804259,"byte_end":804265,"line_start":705,"line_end":705,"column_start":5,"column_end":11},"name":"ObjCId","qualname":"::ir::ty::TypeKind::ObjCId","value":"TypeKind::ObjCId","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" Objective C 'id' type, points to any object\n","sig":null,"attributes":[{"value":"/ Objective C 'id' type, points to any object","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804207,"byte_end":804254,"line_start":704,"line_end":704,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5685},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804306,"byte_end":804313,"line_start":708,"line_end":708,"column_start":5,"column_end":12},"name":"ObjCSel","qualname":"::ir::ty::TypeKind::ObjCSel","value":"TypeKind::ObjCSel","parent":{"krate":0,"index":5618},"children":[],"decl_id":null,"docs":" Objective C selector type\n","sig":null,"attributes":[{"value":"/ Objective C selector type","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804272,"byte_end":804301,"line_start":707,"line_end":707,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5618},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801839,"byte_end":801847,"line_start":620,"line_end":620,"column_start":10,"column_end":18},"name":"TypeKind","qualname":"::ir::ty::TypeKind","value":"pub enum TypeKind {\n    Void,\n    NullPtr,\n    Comp(CompInfo),\n    Opaque,\n    Int(IntKind),\n    Float(FloatKind),\n    Complex(FloatKind),\n    Alias(TypeId),\n    TemplateAlias(TypeId, Vec<TypeId>),\n    Vector(TypeId, usize),\n    Array(TypeId, usize),\n    Function(FunctionSig),\n    Enum(Enum),\n    Pointer(TypeId),\n    BlockPointer(TypeId),\n    Reference(TypeId),\n    TemplateInstantiation(TemplateInstantiation),\n    UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>),\n    ResolvedTypeRef(TypeId),\n    TypeParam,\n    ObjCInterface(ObjCInterface),\n    ObjCId,\n    ObjCSel,\n}","parent":null,"children":[{"krate":0,"index":5619},{"krate":0,"index":5621},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5628},{"krate":0,"index":5631},{"krate":0,"index":5634},{"krate":0,"index":5637},{"krate":0,"index":5640},{"krate":0,"index":5644},{"krate":0,"index":5648},{"krate":0,"index":5652},{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5661},{"krate":0,"index":5664},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5675},{"krate":0,"index":5678},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5685}],"decl_id":null,"docs":" The different kinds of types that we can parse.\n","sig":null,"attributes":[{"value":"/ The different kinds of types that we can parse.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":801761,"byte_end":801812,"line_start":618,"line_end":618,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804636,"byte_end":804649,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Type>::from_clang_ty","value":"pub fn from_clang_ty(ItemId, &clang::Type, Cursor, Option<ItemId>,\n                     &mut BindgenContext)\n-> Result<ParseResult<Self>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" This is another of the nasty methods. This one is the one that takes\n care of the core logic of converting a clang type to a `Type`.","sig":null,"attributes":[{"value":"/ This is another of the nasty methods. This one is the one that takes","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804334,"byte_end":804406,"line_start":712,"line_end":712,"column_start":5,"column_end":77}},{"value":"/ care of the core logic of converting a clang type to a `Type`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804411,"byte_end":804477,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804482,"byte_end":804485,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ It's sort of nasty and full of special-casing, but hopefully the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804490,"byte_end":804558,"line_start":715,"line_end":715,"column_start":5,"column_end":73}},{"value":"/ comments in every special case justify why they're there.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804563,"byte_end":804624,"line_start":716,"line_end":716,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830794,"byte_end":830798,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::var::VarType::Bool","value":"VarType::Bool(bool)","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" A boolean.\n","sig":null,"attributes":[{"value":"/ A boolean.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830775,"byte_end":830789,"line_start":23,"line_end":23,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5693},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830830,"byte_end":830833,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::var::VarType::Int","value":"VarType::Int(i64)","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830810,"byte_end":830825,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5696},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830877,"byte_end":830882,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::var::VarType::Float","value":"VarType::Float(f64)","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" A floating point number.\n","sig":null,"attributes":[{"value":"/ A floating point number.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830844,"byte_end":830872,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5699},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830914,"byte_end":830918,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::var::VarType::Char","value":"VarType::Char(u8)","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" A character.\n","sig":null,"attributes":[{"value":"/ A character.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830893,"byte_end":830909,"line_start":29,"line_end":29,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5702},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830981,"byte_end":830987,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"String","qualname":"::ir::var::VarType::String","value":"VarType::String(Vec<u8>)","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" A string, not necessarily well-formed utf-8.\n","sig":null,"attributes":[{"value":"/ A string, not necessarily well-formed utf-8.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830928,"byte_end":830976,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5689},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830761,"byte_end":830768,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"name":"VarType","qualname":"::ir::var::VarType","value":"pub enum VarType {\n    Bool(bool),\n    Int(i64),\n    Float(f64),\n    Char(u8),\n    String(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":5690},{"krate":0,"index":5693},{"krate":0,"index":5696},{"krate":0,"index":5699},{"krate":0,"index":5702}],"decl_id":null,"docs":" The type for a constant variable.\n","sig":null,"attributes":[{"value":"/ The type for a constant variable.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":830697,"byte_end":830734,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5707},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831091,"byte_end":831094,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Var","qualname":"::ir::var::Var","value":"Var {  }","parent":null,"children":[{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712}],"decl_id":null,"docs":" A `Var` is our intermediate representation of a variable.\n","sig":null,"attributes":[{"value":"/ A `Var` is our intermediate representation of a variable.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831001,"byte_end":831062,"line_start":35,"line_end":35,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831488,"byte_end":831491,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Var>::new","value":"pub fn new(String, Option<String>, TypeId, Option<VarType>, bool) -> Var","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Var`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Var`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831450,"byte_end":831476,"line_start":51,"line_end":51,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831862,"byte_end":831870,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Var>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this variable `const` qualified?\n","sig":null,"attributes":[{"value":"/ Is this variable `const` qualified?","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831811,"byte_end":831850,"line_start":69,"line_end":69,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831981,"byte_end":831984,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"val","qualname":"<Var>::val","value":"pub fn val(&Self) -> Option<&VarType>","parent":null,"children":[],"decl_id":null,"docs":" The value of this constant variable, if any.\n","sig":null,"attributes":[{"value":"/ The value of this constant variable, if any.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831921,"byte_end":831969,"line_start":74,"line_end":74,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832092,"byte_end":832094,"line_start":80,"line_end":80,"column_start":12,"column_end":14},"name":"ty","qualname":"<Var>::ty","value":"pub fn ty(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's type.\n","sig":null,"attributes":[{"value":"/ Get this variable's type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832051,"byte_end":832080,"line_start":79,"line_end":79,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832182,"byte_end":832186,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"name","qualname":"<Var>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's name.\n","sig":null,"attributes":[{"value":"/ Get this variable's name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832141,"byte_end":832170,"line_start":84,"line_end":84,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832283,"byte_end":832295,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Var>::mangled_name","value":"pub fn mangled_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's mangled name.\n","sig":null,"attributes":[{"value":"/ Get this variable's mangled name.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832234,"byte_end":832271,"line_start":89,"line_end":89,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5716},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845698,"byte_end":845705,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Recurse","qualname":"::parse::ParseError::Recurse","value":"ParseError::Recurse","parent":{"krate":0,"index":5715},"children":[],"decl_id":null,"docs":" Recurse down the current AST node's children.\n","sig":null,"attributes":[{"value":"/ Recurse down the current AST node's children.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845644,"byte_end":845693,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5718},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845865,"byte_end":845873,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Continue","qualname":"::parse::ParseError::Continue","value":"ParseError::Continue","parent":{"krate":0,"index":5715},"children":[],"decl_id":null,"docs":" Continue on to the next sibling AST node, or back up to the parent's\n siblings if we've exhausted all of this node's siblings (and so on).\n","sig":null,"attributes":[{"value":"/ Continue on to the next sibling AST node, or back up to the parent's","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845711,"byte_end":845783,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ siblings if we've exhausted all of this node's siblings (and so on).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845788,"byte_end":845860,"line_start":14,"line_end":14,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":5715},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845627,"byte_end":845637,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parse::ParseError","value":"pub enum ParseError { Recurse, Continue, }","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5718}],"decl_id":null,"docs":" Not so much an error in the traditional sense, but a control flow message\n when walking over Clang's AST with a cursor.\n","sig":null,"attributes":[{"value":"/ Not so much an error in the traditional sense, but a control flow message","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845474,"byte_end":845551,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ when walking over Clang's AST with a cursor.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845552,"byte_end":845600,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5724},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846062,"byte_end":846077,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"AlreadyResolved","qualname":"::parse::ParseResult::AlreadyResolved","value":"ParseResult::AlreadyResolved(ItemId)","parent":{"krate":0,"index":5722},"children":[],"decl_id":null,"docs":" We've already resolved this item before, here is the extant `ItemId` for\n it.\n","sig":null,"attributes":[{"value":"/ We've already resolved this item before, here is the extant `ItemId` for","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845969,"byte_end":846045,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846050,"byte_end":846057,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5727},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846220,"byte_end":846223,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"New","qualname":"::parse::ParseResult::New","value":"ParseResult::New(T, Option<clang::Cursor>)","parent":{"krate":0,"index":5722},"children":[],"decl_id":null,"docs":" This is a newly parsed item. If the cursor is `Some`, it points to the\n AST node where the new `T` was declared.\n","sig":null,"attributes":[{"value":"/ This is a newly parsed item. If the cursor is `Some`, it points to the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846092,"byte_end":846166,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ AST node where the new `T` was declared.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846171,"byte_end":846215,"line_start":26,"line_end":26,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5722},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845948,"byte_end":845959,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parse::ParseResult","value":"pub enum ParseResult<T> {\n    AlreadyResolved(ItemId),\n    New(T, Option<clang::Cursor>),\n}","parent":null,"children":[{"krate":0,"index":5724},{"krate":0,"index":5727}],"decl_id":null,"docs":" The result of parsing a Clang AST node.\n","sig":null,"attributes":[{"value":"/ The result of parsing a Clang AST node.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":845878,"byte_end":845921,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5743},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851348,"byte_end":851353,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Timer","qualname":"::time::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747}],"decl_id":null,"docs":" RAII timer to measure how long phases take.\n","sig":null,"attributes":[{"value":"/ RAII timer to measure how long phases take.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851272,"byte_end":851319,"line_start":4,"line_end":4,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851573,"byte_end":851576,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Timer with the given name, and starts it. By default,\n will print to stderr when it is `drop`'d\n","sig":null,"attributes":[{"value":"/ Creates a Timer with the given name, and starts it. By default,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851445,"byte_end":851512,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ will print to stderr when it is `drop`'d","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851517,"byte_end":851561,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851812,"byte_end":851823,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_output","qualname":"<Timer>::with_output","value":"pub fn with_output(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the Timer will print a message\n when it is dropped.\n","sig":null,"attributes":[{"value":"/ Sets whether or not the Timer will print a message","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851718,"byte_end":851772,"line_start":23,"line_end":23,"column_start":5,"column_end":59}},{"value":"/ when it is dropped.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851777,"byte_end":851800,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851979,"byte_end":851986,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Timer>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time elapsed since the timer's creation\n","sig":null,"attributes":[{"value":"/ Returns the time elapsed since the timer's creation","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851912,"byte_end":851967,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3864},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callbacks","qualname":"::callbacks","value":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","parent":null,"children":[{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":5751},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5759},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":3881},{"krate":0,"index":3883}],"decl_id":null,"docs":" A public API for more fine-grained customization of bindgen behavior.\n","sig":null,"attributes":[{"value":"/ A public API for more fine-grained customization of bindgen behavior.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852612,"byte_end":852685,"line_start":1,"line_end":1,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5752},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853061,"byte_end":853067,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::callbacks::MacroParsingBehavior::Ignore","value":"MacroParsingBehavior::Ignore","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Ignore the macro, generating no code for it, or anything that depends on\n it.\n","sig":null,"attributes":[{"value":"/ Ignore the macro, generating no code for it, or anything that depends on","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852968,"byte_end":853044,"line_start":11,"line_end":11,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853049,"byte_end":853056,"line_start":12,"line_end":12,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5754},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853132,"byte_end":853139,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Default","qualname":"::callbacks::MacroParsingBehavior::Default","value":"MacroParsingBehavior::Default","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" The default behavior bindgen would have otherwise.\n","sig":null,"attributes":[{"value":"/ The default behavior bindgen would have otherwise.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853073,"byte_end":853127,"line_start":14,"line_end":14,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":5751},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852941,"byte_end":852961,"line_start":10,"line_end":10,"column_start":10,"column_end":30},"name":"MacroParsingBehavior","qualname":"::callbacks::MacroParsingBehavior","value":"pub enum MacroParsingBehavior { Ignore, Default, }","parent":null,"children":[{"krate":0,"index":5752},{"krate":0,"index":5754}],"decl_id":null,"docs":" An enum to allow ignoring parsing of macros.\n","sig":null,"attributes":[{"value":"/ An enum to allow ignoring parsing of macros.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":852838,"byte_end":852886,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":3883},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853355,"byte_end":853369,"line_start":26,"line_end":26,"column_start":11,"column_end":25},"name":"ParseCallbacks","qualname":"::callbacks::ParseCallbacks","value":"ParseCallbacks: fmt::Debug + UnwindSafe","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891}],"decl_id":null,"docs":" A trait to allow configuring different kinds of types in different\n situations.\n","sig":null,"attributes":[{"value":"/ A trait to allow configuring different kinds of types in different","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853258,"byte_end":853328,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ situations.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853329,"byte_end":853344,"line_start":25,"line_end":25,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853473,"byte_end":853489,"line_start":28,"line_end":28,"column_start":8,"column_end":24},"name":"will_parse_macro","qualname":"::callbacks::ParseCallbacks::will_parse_macro","value":"pub fn will_parse_macro(&Self, &str) -> MacroParsingBehavior","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" This function will be run on every macro that is identified.\n","sig":null,"attributes":[{"value":"/ This function will be run on every macro that is identified.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853401,"byte_end":853465,"line_start":27,"line_end":27,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853741,"byte_end":853750,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"int_macro","qualname":"::callbacks::ParseCallbacks::int_macro","value":"pub fn int_macro(&Self, &str, i64) -> Option<IntKind>","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" The integer kind an integer macro should have, given a name and the\n value of that macro, or `None` if you want the default to be chosen.\n","sig":null,"attributes":[{"value":"/ The integer kind an integer macro should have, given a name and the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853585,"byte_end":853656,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ value of that macro, or `None` if you want the default to be chosen.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853661,"byte_end":853733,"line_start":33,"line_end":33,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854022,"byte_end":854031,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"str_macro","qualname":"::callbacks::ParseCallbacks::str_macro","value":"pub fn str_macro(&Self, &str, &[u8])","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" This will be run on every string macro. The callback cannot influence the further\n treatment of the macro, but may use the value to generate additional code or configuration.\n","sig":null,"attributes":[{"value":"/ This will be run on every string macro. The callback cannot influence the further","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853829,"byte_end":853914,"line_start":38,"line_end":38,"column_start":5,"column_end":90}},{"value":"/ treatment of the macro, but may use the value to generate additional code or configuration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853919,"byte_end":854014,"line_start":39,"line_end":39,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854513,"byte_end":854523,"line_start":49,"line_end":49,"column_start":8,"column_end":18},"name":"func_macro","qualname":"::callbacks::ParseCallbacks::func_macro","value":"pub fn func_macro(&Self, &str, &[&[u8]])","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" This will be run on every function-like macro. The callback cannot\n influence the further treatment of the macro, but may use the value to\n generate additional code or configuration.","sig":null,"attributes":[{"value":"/ This will be run on every function-like macro. The callback cannot","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854075,"byte_end":854145,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ influence the further treatment of the macro, but may use the value to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854150,"byte_end":854224,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ generate additional code or configuration.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854229,"byte_end":854275,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854280,"byte_end":854283,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The first parameter represents the name and argument list (including the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854288,"byte_end":854364,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ parentheses) of the function-like macro. The second parameter represents","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854369,"byte_end":854445,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ the expansion of the macro as a sequence of tokens.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854450,"byte_end":854505,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854712,"byte_end":854733,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"enum_variant_behavior","qualname":"::callbacks::ParseCallbacks::enum_variant_behavior","value":"pub fn enum_variant_behavior(&Self, Option<&str>, &str, EnumVariantValue)\n-> Option<EnumVariantCustomBehavior>","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" This function should return whether, given an enum variant\n name, and value, this enum variant will forcibly be a constant.\n","sig":null,"attributes":[{"value":"/ This function should return whether, given an enum variant","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854570,"byte_end":854632,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ name, and value, this enum variant will forcibly be a constant.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854637,"byte_end":854704,"line_start":52,"line_end":52,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":855014,"byte_end":855031,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"enum_variant_name","qualname":"::callbacks::ParseCallbacks::enum_variant_name","value":"pub fn enum_variant_name(&Self, Option<&str>, &str, EnumVariantValue)\n-> Option<String>","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" Allows to rename an enum variant, replacing `_original_variant_name`.\n","sig":null,"attributes":[{"value":"/ Allows to rename an enum variant, replacing `_original_variant_name`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":854933,"byte_end":855006,"line_start":62,"line_end":62,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":855282,"byte_end":855291,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"item_name","qualname":"::callbacks::ParseCallbacks::item_name","value":"pub fn item_name(&Self, &str) -> Option<String>","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" Allows to rename an item, replacing `_original_item_name`.\n","sig":null,"attributes":[{"value":"/ Allows to rename an item, replacing `_original_item_name`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":855212,"byte_end":855274,"line_start":72,"line_end":72,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":855467,"byte_end":855479,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"include_file","qualname":"::callbacks::ParseCallbacks::include_file","value":"pub fn include_file(&Self, &str)","parent":{"krate":0,"index":3883},"children":[],"decl_id":null,"docs":" This will be called on every file inclusion, with the full path of the included file.\n","sig":null,"attributes":[{"value":"/ This will be called on every file inclusion, with the full path of the included file.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":855370,"byte_end":855459,"line_start":77,"line_end":77,"column_start":5,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":3981},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":2596,"byte_end":2622,"line_start":91,"line_end":91,"column_start":11,"column_end":37},"name":"DEFAULT_ANON_FIELDS_PREFIX","qualname":"::DEFAULT_ANON_FIELDS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Default prefix for the anon fields.\n","sig":null,"attributes":[{"value":"/ Default prefix for the anon fields.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":2546,"byte_end":2585,"line_start":90,"line_end":90,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5767},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3307,"byte_end":3320,"line_start":117,"line_end":117,"column_start":16,"column_end":29},"name":"CodegenConfig","qualname":"::CodegenConfig","value":"CodegenConfig {  }","parent":null,"children":[{"krate":0,"index":5768}],"decl_id":null,"docs":" A type used to indicate which kind of items we have to generate.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5805},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3385,"byte_end":3394,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"name":"FUNCTIONS","qualname":"::CodegenConfig::FUNCTIONS","value":"Self","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" Whether to generate functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5806},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3458,"byte_end":3463,"line_start":121,"line_end":121,"column_start":15,"column_end":20},"name":"TYPES","qualname":"::CodegenConfig::TYPES","value":"Self","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" Whether to generate types.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5807},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3531,"byte_end":3535,"line_start":123,"line_end":123,"column_start":15,"column_end":19},"name":"VARS","qualname":"::CodegenConfig::VARS","value":"Self","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" Whether to generate constants.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5808},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3601,"byte_end":3608,"line_start":125,"line_end":125,"column_start":15,"column_end":22},"name":"METHODS","qualname":"::CodegenConfig::METHODS","value":"Self","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" Whether to generate methods.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5809},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3678,"byte_end":3690,"line_start":127,"line_end":127,"column_start":15,"column_end":27},"name":"CONSTRUCTORS","qualname":"::CodegenConfig::CONSTRUCTORS","value":"Self","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" Whether to generate constructors\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5810},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3760,"byte_end":3771,"line_start":129,"line_end":129,"column_start":15,"column_end":26},"name":"DESTRUCTORS","qualname":"::CodegenConfig::DESTRUCTORS","value":"Self","parent":{"krate":0,"index":5804},"children":[],"decl_id":null,"docs":" Whether to generate destructors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3985},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3878,"byte_end":3887,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"functions","qualname":"<CodegenConfig>::functions","value":"pub fn functions(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if functions should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if functions should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3816,"byte_end":3866,"line_start":134,"line_end":134,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4021,"byte_end":4026,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"types","qualname":"<CodegenConfig>::types","value":"pub fn types(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if types should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if types should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3963,"byte_end":4009,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4160,"byte_end":4164,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"vars","qualname":"<CodegenConfig>::vars","value":"pub fn vars(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constants should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if constants should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4098,"byte_end":4148,"line_start":144,"line_end":144,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3988},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4294,"byte_end":4301,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"methods","qualname":"<CodegenConfig>::methods","value":"pub fn methods(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if methds should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if methds should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4235,"byte_end":4282,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4440,"byte_end":4452,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CodegenConfig>::constructors","value":"pub fn constructors(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constructors should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if constructors should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4375,"byte_end":4428,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4595,"byte_end":4606,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"destructors","qualname":"<CodegenConfig>::destructors","value":"pub fn destructors(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if destructors should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if destructors should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4531,"byte_end":4583,"line_start":159,"line_end":159,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5879},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6686,"byte_end":6693,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882}],"decl_id":null,"docs":" Configure and generate Rust bindings for a C/C++ header.","sig":null,"attributes":[{"value":"/ Configure and generate Rust bindings for a C/C++ header.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4780,"byte_end":4840,"line_start":171,"line_end":171,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4841,"byte_end":4844,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This is the main entry point to the library.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4845,"byte_end":4893,"line_start":173,"line_end":173,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4894,"byte_end":4897,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4898,"byte_end":4911,"line_start":175,"line_end":175,"column_start":1,"column_end":14}},{"value":"/ use bindgen::builder;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4912,"byte_end":4937,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4938,"byte_end":4941,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ // Configure and generate bindings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4942,"byte_end":4981,"line_start":178,"line_end":178,"column_start":1,"column_end":40}},{"value":"/ let bindings = builder().header(\"path/to/input/header\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4982,"byte_end":5041,"line_start":179,"line_end":179,"column_start":1,"column_end":60}},{"value":"/     .whitelist_type(\"SomeCoolClass\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5042,"byte_end":5082,"line_start":180,"line_end":180,"column_start":1,"column_end":41}},{"value":"/     .whitelist_function(\"do_some_cool_thing\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5083,"byte_end":5132,"line_start":181,"line_end":181,"column_start":1,"column_end":50}},{"value":"/     .generate()?;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5133,"byte_end":5154,"line_start":182,"line_end":182,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5155,"byte_end":5158,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ // Write the generated bindings to an output file.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5159,"byte_end":5213,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/ bindings.write_to_file(\"path/to/output.rs\")?;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5214,"byte_end":5263,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5264,"byte_end":5271,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5272,"byte_end":5275,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Enums","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5276,"byte_end":5287,"line_start":188,"line_end":188,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5288,"byte_end":5291,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Bindgen can map C/C++ enums into Rust in different ways. The way bindgen maps enums depends on","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5292,"byte_end":5390,"line_start":190,"line_end":190,"column_start":1,"column_end":99}},{"value":"/ the pattern passed to several methods:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5391,"byte_end":5433,"line_start":191,"line_end":191,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ 1. [`constified_enum_module()`](#method.constified_enum_module)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5438,"byte_end":5505,"line_start":193,"line_end":193,"column_start":1,"column_end":68}},{"value":"/ 2. [`bitfield_enum()`](#method.bitfield_enum)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5506,"byte_end":5555,"line_start":194,"line_end":194,"column_start":1,"column_end":50}},{"value":"/ 3. [`newtype_enum()`](#method.newtype_enum)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5556,"byte_end":5603,"line_start":195,"line_end":195,"column_start":1,"column_end":48}},{"value":"/ 4. [`rustified_enum()`](#method.rustified_enum)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5604,"byte_end":5655,"line_start":196,"line_end":196,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5656,"byte_end":5659,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ For each C enum, bindgen tries to match the pattern in the following order:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5660,"byte_end":5739,"line_start":198,"line_end":198,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5740,"byte_end":5743,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ 1. Constified enum module","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5744,"byte_end":5773,"line_start":200,"line_end":200,"column_start":1,"column_end":30}},{"value":"/ 2. Bitfield enum","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5774,"byte_end":5794,"line_start":201,"line_end":201,"column_start":1,"column_end":21}},{"value":"/ 3. Newtype enum","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5795,"byte_end":5814,"line_start":202,"line_end":202,"column_start":1,"column_end":20}},{"value":"/ 4. Rustified enum","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5815,"byte_end":5836,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5837,"byte_end":5840,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ If none of the above patterns match, then bindgen will generate a set of Rust constants.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5841,"byte_end":5933,"line_start":205,"line_end":205,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5934,"byte_end":5937,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Clang arguments","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5938,"byte_end":5959,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5960,"byte_end":5963,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Extra arguments can be passed to with clang:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":5964,"byte_end":6012,"line_start":209,"line_end":209,"column_start":1,"column_end":49}},{"value":"/ 1. [`clang_arg()`](#method.clang_arg): takes a single argument","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6013,"byte_end":6079,"line_start":210,"line_end":210,"column_start":1,"column_end":67}},{"value":"/ 2. [`clang_args()`](#method.clang_args): takes an iterator of arguments","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6080,"byte_end":6155,"line_start":211,"line_end":211,"column_start":1,"column_end":76}},{"value":"/ 3. `BINDGEN_EXTRA_CLANG_ARGS` environment variable: whitespace separate","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6156,"byte_end":6231,"line_start":212,"line_end":212,"column_start":1,"column_end":76}},{"value":"/    environment variable of arguments","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6232,"byte_end":6272,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6273,"byte_end":6276,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Clang arguments specific to your crate should be added via the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6277,"byte_end":6343,"line_start":215,"line_end":215,"column_start":1,"column_end":67}},{"value":"/ `clang_arg()`/`clang_args()` methods.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6344,"byte_end":6385,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6386,"byte_end":6389,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ End-users of the crate may need to set the `BINDGEN_EXTRA_CLANG_ARGS` environment variable to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6390,"byte_end":6487,"line_start":218,"line_end":218,"column_start":1,"column_end":98}},{"value":"/ add additional arguments. For example, to build against a different sysroot a user could set","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6488,"byte_end":6584,"line_start":219,"line_end":219,"column_start":1,"column_end":97}},{"value":"/ `BINDGEN_EXTRA_CLANG_ARGS` to `--sysroot=/path/to/sysroot`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6585,"byte_end":6648,"line_start":220,"line_end":220,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":3993},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6942,"byte_end":6949,"line_start":230,"line_end":230,"column_start":8,"column_end":15},"name":"builder","qualname":"::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`Builder`](./struct.Builder.html).\n","sig":null,"attributes":[{"value":"/ Construct a new [`Builder`](./struct.Builder.html).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6879,"byte_end":6934,"line_start":229,"line_end":229,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":7086,"byte_end":7104,"line_start":236,"line_end":236,"column_start":12,"column_end":30},"name":"command_line_flags","qualname":"<Builder>::command_line_flags","value":"pub fn command_line_flags(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Generates the command line flags use for creating `Builder`.\n","sig":null,"attributes":[{"value":"/ Generates the command line flags use for creating `Builder`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":7010,"byte_end":7074,"line_start":235,"line_end":235,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19595,"byte_end":19601,"line_start":594,"line_end":594,"column_start":12,"column_end":18},"name":"header","qualname":"<Builder>::header","value":"pub fn header<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an input C/C++ header to generate bindings for.","sig":null,"attributes":[{"value":"/ Add an input C/C++ header to generate bindings for.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":18955,"byte_end":19010,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19015,"byte_end":19018,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate bindings to a single header:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19023,"byte_end":19084,"line_start":574,"line_end":574,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19089,"byte_end":19092,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19097,"byte_end":19110,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ let bindings = bindgen::Builder::default()","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19115,"byte_end":19161,"line_start":577,"line_end":577,"column_start":5,"column_end":51}},{"value":"/     .header(\"input.h\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19166,"byte_end":19192,"line_start":578,"line_end":578,"column_start":5,"column_end":31}},{"value":"/     .generate()","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19197,"byte_end":19216,"line_start":579,"line_end":579,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19221,"byte_end":19239,"line_start":580,"line_end":580,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19244,"byte_end":19251,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19256,"byte_end":19259,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Or you can invoke it multiple times to generate bindings to multiple","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19264,"byte_end":19336,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ headers:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19341,"byte_end":19353,"line_start":584,"line_end":584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19358,"byte_end":19361,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19366,"byte_end":19379,"line_start":586,"line_end":586,"column_start":5,"column_end":18}},{"value":"/ let bindings = bindgen::Builder::default()","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19384,"byte_end":19430,"line_start":587,"line_end":587,"column_start":5,"column_end":51}},{"value":"/     .header(\"first.h\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19435,"byte_end":19461,"line_start":588,"line_end":588,"column_start":5,"column_end":31}},{"value":"/     .header(\"second.h\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19466,"byte_end":19493,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/     .header(\"third.h\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19498,"byte_end":19524,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/     .generate()","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19529,"byte_end":19548,"line_start":591,"line_end":591,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19553,"byte_end":19571,"line_start":592,"line_end":592,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19576,"byte_end":19583,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19864,"byte_end":19879,"line_start":602,"line_end":602,"column_start":12,"column_end":27},"name":"header_contents","qualname":"<Builder>::header_contents","value":"pub fn header_contents(Self, &str, &str) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add `contents` as an input C/C++ header named `name`.","sig":null,"attributes":[{"value":"/ Add `contents` as an input C/C++ header named `name`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19725,"byte_end":19782,"line_start":599,"line_end":599,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19787,"byte_end":19790,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The file `name` will be added to the clang arguments.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":19795,"byte_end":19852,"line_start":601,"line_end":601,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20519,"byte_end":20530,"line_start":619,"line_end":619,"column_start":12,"column_end":23},"name":"rust_target","qualname":"<Builder>::rust_target","value":"pub fn rust_target(Self, RustTarget) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rust target","sig":null,"attributes":[{"value":"/ Specify the rust target","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20418,"byte_end":20445,"line_start":616,"line_end":616,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20450,"byte_end":20453,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The default is the latest stable Rust version","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20458,"byte_end":20507,"line_start":618,"line_end":618,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20720,"byte_end":20742,"line_start":625,"line_end":625,"column_start":12,"column_end":34},"name":"disable_untagged_union","qualname":"<Builder>::disable_untagged_union","value":"pub fn disable_untagged_union(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable support for native Rust unions, if supported.\n","sig":null,"attributes":[{"value":"/ Disable support for native Rust unions, if supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20651,"byte_end":20708,"line_start":624,"line_end":624,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20944,"byte_end":20966,"line_start":632,"line_end":632,"column_start":12,"column_end":34},"name":"disable_header_comment","qualname":"<Builder>::disable_header_comment","value":"pub fn disable_header_comment(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable insertion of bindgen's version identifier into generated\n bindings.\n","sig":null,"attributes":[{"value":"/ Disable insertion of bindgen's version identifier into generated","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20846,"byte_end":20914,"line_start":630,"line_end":630,"column_start":5,"column_end":73}},{"value":"/ bindings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":20919,"byte_end":20932,"line_start":631,"line_end":631,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21108,"byte_end":21124,"line_start":638,"line_end":638,"column_start":12,"column_end":28},"name":"emit_ir_graphviz","qualname":"<Builder>::emit_ir_graphviz","value":"pub fn emit_ir_graphviz<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the output graphviz file.\n","sig":null,"attributes":[{"value":"/ Set the output graphviz file.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21063,"byte_end":21096,"line_start":637,"line_end":637,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22134,"byte_end":22151,"line_start":659,"line_end":659,"column_start":12,"column_end":29},"name":"generate_comments","qualname":"<Builder>::generate_comments","value":"pub fn generate_comments(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether the generated bindings should contain documentation comments\n (docstrings) or not.","sig":null,"attributes":[{"value":"/ Whether the generated bindings should contain documentation comments","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21282,"byte_end":21354,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ (docstrings) or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21359,"byte_end":21383,"line_start":645,"line_end":645,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21388,"byte_end":21391,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This ideally will always be true, but it may need to be false until we","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21396,"byte_end":21470,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ implement some processing on comments to work around issues as described","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21475,"byte_end":21551,"line_start":648,"line_end":648,"column_start":5,"column_end":81}},{"value":"/ in [rust-bindgen issue","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21556,"byte_end":21582,"line_start":649,"line_end":649,"column_start":5,"column_end":31}},{"value":"/ #426](https://github.com/rust-lang/rust-bindgen/issues/426).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21587,"byte_end":21651,"line_start":650,"line_end":650,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21656,"byte_end":21659,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Note that clang by default excludes comments from system headers, pass","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21664,"byte_end":21738,"line_start":652,"line_end":652,"column_start":5,"column_end":79}},{"value":"/ `-fretain-comments-from-system-headers` as","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21743,"byte_end":21789,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ [`clang_arg`][Builder::clang_arg] to include them. It can also be told","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21794,"byte_end":21868,"line_start":654,"line_end":654,"column_start":5,"column_end":79}},{"value":"/ to process all comments (not just documentation ones) using the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21873,"byte_end":21940,"line_start":655,"line_end":655,"column_start":5,"column_end":72}},{"value":"/ `-fparse-all-comments` flag. See [slides on clang comment parsing](","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":21945,"byte_end":22016,"line_start":656,"line_end":656,"column_start":5,"column_end":76}},{"value":"/ https://llvm.org/devmtg/2012-11/Gribenko_CommentParsing.pdf) for","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22021,"byte_end":22089,"line_start":657,"line_end":657,"column_start":5,"column_end":73}},{"value":"/ background and examples.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22094,"byte_end":22122,"line_start":658,"line_end":658,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23635,"byte_end":23656,"line_start":691,"line_end":691,"column_start":12,"column_end":33},"name":"whitelist_recursively","qualname":"<Builder>::whitelist_recursively","value":"pub fn whitelist_recursively(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to whitelist recursively or not. Defaults to true.","sig":null,"attributes":[{"value":"/ Whether to whitelist recursively or not. Defaults to true.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22255,"byte_end":22317,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22322,"byte_end":22325,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Given that we have explicitly whitelisted the \"initiate_dance_party\"","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22330,"byte_end":22402,"line_start":666,"line_end":666,"column_start":5,"column_end":77}},{"value":"/ function in this C header:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22407,"byte_end":22437,"line_start":667,"line_end":667,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22442,"byte_end":22445,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```c","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22450,"byte_end":22458,"line_start":669,"line_end":669,"column_start":5,"column_end":13}},{"value":"/ typedef struct MoonBoots {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22463,"byte_end":22493,"line_start":670,"line_end":670,"column_start":5,"column_end":35}},{"value":"/     int bouncy_level;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22498,"byte_end":22523,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/ } MoonBoots;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22528,"byte_end":22544,"line_start":672,"line_end":672,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22549,"byte_end":22552,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ void initiate_dance_party(MoonBoots* boots);","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22557,"byte_end":22605,"line_start":674,"line_end":674,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22610,"byte_end":22617,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22622,"byte_end":22625,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ We would normally generate bindings to both the `initiate_dance_party`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22630,"byte_end":22704,"line_start":677,"line_end":677,"column_start":5,"column_end":79}},{"value":"/ function and the `MoonBoots` struct that it transitively references. By","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22709,"byte_end":22784,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ configuring with `whitelist_recursively(false)`, `bindgen` will not emit","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22789,"byte_end":22865,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ bindings for anything except the explicitly whitelisted items, and there","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22870,"byte_end":22946,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/ would be no emitted struct definition for `MoonBoots`. However, the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":22951,"byte_end":23022,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/ `initiate_dance_party` function would still reference `MoonBoots`!","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23027,"byte_end":23097,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23102,"byte_end":23105,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ **Disabling this feature will almost certainly cause `bindgen` to emit","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23110,"byte_end":23184,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ bindings that will not compile!** If you disable this feature, then it","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23189,"byte_end":23263,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ is *your* responsibility to provide definitions for every type that is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23268,"byte_end":23342,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ referenced from an explicitly whitelisted item. One way to provide the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23347,"byte_end":23421,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ definitions is by using the [`Builder::raw_line`](#method.raw_line)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23426,"byte_end":23497,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/ method, another would be to define them in Rust and then `include!(...)`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23502,"byte_end":23578,"line_start":689,"line_end":689,"column_start":5,"column_end":81}},{"value":"/ the bindings immediately afterwards.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23583,"byte_end":23623,"line_start":690,"line_end":690,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23915,"byte_end":23932,"line_start":698,"line_end":698,"column_start":12,"column_end":29},"name":"objc_extern_crate","qualname":"<Builder>::objc_extern_crate","value":"pub fn objc_extern_crate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate objc;` instead of `use objc;`\n in the prologue of the files generated from objective-c files\n","sig":null,"attributes":[{"value":"/ Generate `#[macro_use] extern crate objc;` instead of `use objc;`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23764,"byte_end":23833,"line_start":696,"line_end":696,"column_start":5,"column_end":74}},{"value":"/ in the prologue of the files generated from objective-c files","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":23838,"byte_end":23903,"line_start":697,"line_end":697,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24110,"byte_end":24124,"line_start":704,"line_end":704,"column_start":12,"column_end":26},"name":"generate_block","qualname":"<Builder>::generate_block","value":"pub fn generate_block(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate proper block signatures instead of void pointers.\n","sig":null,"attributes":[{"value":"/ Generate proper block signatures instead of void pointers.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24036,"byte_end":24098,"line_start":703,"line_end":703,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24378,"byte_end":24396,"line_start":711,"line_end":711,"column_start":12,"column_end":30},"name":"block_extern_crate","qualname":"<Builder>::block_extern_crate","value":"pub fn block_extern_crate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate block;` instead of `use block;`\n in the prologue of the files generated from apple block files\n","sig":null,"attributes":[{"value":"/ Generate `#[macro_use] extern crate block;` instead of `use block;`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24225,"byte_end":24296,"line_start":709,"line_end":709,"column_start":5,"column_end":76}},{"value":"/ in the prologue of the files generated from apple block files","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24301,"byte_end":24366,"line_start":710,"line_end":710,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24878,"byte_end":24898,"line_start":723,"line_end":723,"column_start":12,"column_end":32},"name":"trust_clang_mangling","qualname":"<Builder>::trust_clang_mangling","value":"pub fn trust_clang_mangling(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to use the clang-provided name mangling. This is true by default\n and probably needed for C++ features.","sig":null,"attributes":[{"value":"/ Whether to use the clang-provided name mangling. This is true by default","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24501,"byte_end":24577,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"/ and probably needed for C++ features.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24582,"byte_end":24623,"line_start":717,"line_end":717,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24628,"byte_end":24631,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ However, some old libclang versions seem to return incorrect results in","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24636,"byte_end":24711,"line_start":719,"line_end":719,"column_start":5,"column_end":80}},{"value":"/ some cases for non-mangled functions, see [1], so we allow disabling it.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24716,"byte_end":24792,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24797,"byte_end":24800,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/rust-lang/rust-bindgen/issues/528","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":24805,"byte_end":24866,"line_start":722,"line_end":722,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25162,"byte_end":25171,"line_start":731,"line_end":731,"column_start":12,"column_end":21},"name":"hide_type","qualname":"<Builder>::hide_type","value":"pub fn hide_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"/ Hide the given type from the generated bindings. Regular expressions are","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25000,"byte_end":25076,"line_start":728,"line_end":728,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25081,"byte_end":25095,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"Use blacklist_type instead\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25100,"byte_end":25150,"line_start":730,"line_end":730,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25540,"byte_end":25554,"line_start":741,"line_end":741,"column_start":12,"column_end":26},"name":"blacklist_type","qualname":"<Builder>::blacklist_type","value":"pub fn blacklist_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.","sig":null,"attributes":[{"value":"/ Hide the given type from the generated bindings. Regular expressions are","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25258,"byte_end":25334,"line_start":735,"line_end":735,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25339,"byte_end":25353,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25358,"byte_end":25361,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ To blacklist types prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25366,"byte_end":25428,"line_start":738,"line_end":738,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25433,"byte_end":25475,"line_start":739,"line_end":739,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25480,"byte_end":25528,"line_start":740,"line_end":740,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25967,"byte_end":25985,"line_start":752,"line_end":752,"column_start":12,"column_end":30},"name":"blacklist_function","qualname":"<Builder>::blacklist_function","value":"pub fn blacklist_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given function from the generated bindings. Regular expressions\n are supported.","sig":null,"attributes":[{"value":"/ Hide the given function from the generated bindings. Regular expressions","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25677,"byte_end":25753,"line_start":746,"line_end":746,"column_start":5,"column_end":81}},{"value":"/ are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25758,"byte_end":25776,"line_start":747,"line_end":747,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25781,"byte_end":25784,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ To blacklist functions prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25789,"byte_end":25855,"line_start":749,"line_end":749,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25860,"byte_end":25902,"line_start":750,"line_end":750,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":25907,"byte_end":25955,"line_start":751,"line_end":751,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26460,"byte_end":26474,"line_start":764,"line_end":764,"column_start":12,"column_end":26},"name":"blacklist_item","qualname":"<Builder>::blacklist_item","value":"pub fn blacklist_item<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given item from the generated bindings, regardless of\n whether it's a type, function, module, etc. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Hide the given item from the generated bindings, regardless of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26112,"byte_end":26178,"line_start":757,"line_end":757,"column_start":5,"column_end":71}},{"value":"/ whether it's a type, function, module, etc. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26183,"byte_end":26238,"line_start":758,"line_end":758,"column_start":5,"column_end":60}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26243,"byte_end":26273,"line_start":759,"line_end":759,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26278,"byte_end":26281,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ To blacklist items prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26286,"byte_end":26348,"line_start":761,"line_end":761,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26353,"byte_end":26395,"line_start":762,"line_end":762,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26400,"byte_end":26448,"line_start":763,"line_end":763,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26898,"byte_end":26909,"line_start":775,"line_end":775,"column_start":12,"column_end":23},"name":"opaque_type","qualname":"<Builder>::opaque_type","value":"pub fn opaque_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat the given type as opaque in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Treat the given type as opaque in the generated bindings. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26597,"byte_end":26666,"line_start":769,"line_end":769,"column_start":5,"column_end":74}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26671,"byte_end":26701,"line_start":770,"line_end":770,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26706,"byte_end":26709,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ To change types prefixed with \"mylib\" into opaque, use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26714,"byte_end":26786,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26791,"byte_end":26833,"line_start":773,"line_end":773,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":26838,"byte_end":26886,"line_start":774,"line_end":774,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27266,"byte_end":27282,"line_start":784,"line_end":784,"column_start":12,"column_end":28},"name":"whitelisted_type","qualname":"<Builder>::whitelisted_type","value":"pub fn whitelisted_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"/ Whitelist the given type so that it (and all types that it transitively","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27027,"byte_end":27102,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ refers to) appears in the generated bindings. Regular expressions are","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27107,"byte_end":27180,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27185,"byte_end":27199,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"use whitelist_type instead\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27204,"byte_end":27254,"line_start":783,"line_end":783,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27728,"byte_end":27742,"line_start":795,"line_end":795,"column_start":12,"column_end":26},"name":"whitelist_type","qualname":"<Builder>::whitelist_type","value":"pub fn whitelist_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.","sig":null,"attributes":[{"value":"/ Whitelist the given type so that it (and all types that it transitively","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27369,"byte_end":27444,"line_start":788,"line_end":788,"column_start":5,"column_end":80}},{"value":"/ refers to) appears in the generated bindings. Regular expressions are","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27449,"byte_end":27522,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27527,"byte_end":27541,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27546,"byte_end":27549,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ To whitelist types prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27554,"byte_end":27616,"line_start":792,"line_end":792,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27621,"byte_end":27663,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27668,"byte_end":27716,"line_start":794,"line_end":794,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28232,"byte_end":28250,"line_start":807,"line_end":807,"column_start":12,"column_end":30},"name":"whitelist_function","qualname":"<Builder>::whitelist_function","value":"pub fn whitelist_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Whitelist the given function so that it (and all types that it","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27865,"byte_end":27931,"line_start":800,"line_end":800,"column_start":5,"column_end":71}},{"value":"/ transitively refers to) appears in the generated bindings. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":27936,"byte_end":28006,"line_start":801,"line_end":801,"column_start":5,"column_end":75}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28011,"byte_end":28041,"line_start":802,"line_end":802,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28046,"byte_end":28049,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ To whitelist functions prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28054,"byte_end":28120,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28125,"byte_end":28167,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28172,"byte_end":28220,"line_start":806,"line_end":806,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28541,"byte_end":28561,"line_start":816,"line_end":816,"column_start":12,"column_end":32},"name":"whitelisted_function","qualname":"<Builder>::whitelisted_function","value":"pub fn whitelisted_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function.","sig":null,"attributes":[{"value":"/ Whitelist the given function.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28377,"byte_end":28410,"line_start":812,"line_end":812,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28415,"byte_end":28418,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Deprecated: use whitelist_function instead.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28423,"byte_end":28470,"line_start":814,"line_end":814,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use whitelist_function instead\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28475,"byte_end":28529,"line_start":815,"line_end":815,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4029},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29019,"byte_end":29032,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"whitelist_var","qualname":"<Builder>::whitelist_var","value":"pub fn whitelist_var<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Whitelist the given variable so that it (and all types that it","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28652,"byte_end":28718,"line_start":820,"line_end":820,"column_start":5,"column_end":71}},{"value":"/ transitively refers to) appears in the generated bindings. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28723,"byte_end":28793,"line_start":821,"line_end":821,"column_start":5,"column_end":75}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28798,"byte_end":28828,"line_start":822,"line_end":822,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28833,"byte_end":28836,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ To whitelist variables prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28841,"byte_end":28907,"line_start":824,"line_end":824,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28912,"byte_end":28954,"line_start":825,"line_end":825,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":28959,"byte_end":29007,"line_start":826,"line_end":826,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4031},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29308,"byte_end":29323,"line_start":836,"line_end":836,"column_start":12,"column_end":27},"name":"whitelisted_var","qualname":"<Builder>::whitelisted_var","value":"pub fn whitelisted_var<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable.","sig":null,"attributes":[{"value":"/ Whitelist the given variable.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29154,"byte_end":29187,"line_start":832,"line_end":832,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29192,"byte_end":29195,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ Deprecated: use whitelist_var instead.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29200,"byte_end":29242,"line_start":834,"line_end":834,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"use whitelist_var instead\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29247,"byte_end":29296,"line_start":835,"line_end":835,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29476,"byte_end":29494,"line_start":841,"line_end":841,"column_start":12,"column_end":30},"name":"default_enum_style","qualname":"<Builder>::default_enum_style","value":"pub fn default_enum_style(Self, codegen::EnumVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for enums\n","sig":null,"attributes":[{"value":"/ Set the default style of code to generate for enums","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29409,"byte_end":29464,"line_start":840,"line_end":840,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4034},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30012,"byte_end":30025,"line_start":857,"line_end":857,"column_start":12,"column_end":25},"name":"bitfield_enum","qualname":"<Builder>::bitfield_enum","value":"pub fn bitfield_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as being\n bitfield-like. Regular expressions are supported.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as being","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29641,"byte_end":29711,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/ bitfield-like. Regular expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29716,"byte_end":29769,"line_start":850,"line_end":850,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29774,"byte_end":29777,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate a type that isn't a rust `enum`. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29782,"byte_end":29854,"line_start":852,"line_end":852,"column_start":5,"column_end":77}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29859,"byte_end":29889,"line_start":853,"line_end":853,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29894,"byte_end":29897,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This is similar to the newtype enum style, but with the bitwise","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29902,"byte_end":29969,"line_start":855,"line_end":855,"column_start":5,"column_end":72}},{"value":"/ operators implemented.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":29974,"byte_end":30000,"line_start":856,"line_end":856,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30395,"byte_end":30407,"line_start":867,"line_end":867,"column_start":12,"column_end":24},"name":"newtype_enum","qualname":"<Builder>::newtype_enum","value":"pub fn newtype_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a newtype.\n Regular expressions are supported.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a newtype.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30145,"byte_end":30220,"line_start":862,"line_end":862,"column_start":5,"column_end":80}},{"value":"/ Regular expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30225,"byte_end":30263,"line_start":863,"line_end":863,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30268,"byte_end":30271,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate a type that isn't a Rust `enum`. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30276,"byte_end":30348,"line_start":865,"line_end":865,"column_start":5,"column_end":77}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30353,"byte_end":30383,"line_start":866,"line_end":866,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4038},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30949,"byte_end":30963,"line_start":881,"line_end":881,"column_start":12,"column_end":26},"name":"rustified_enum","qualname":"<Builder>::rustified_enum","value":"pub fn rustified_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a Rust","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30526,"byte_end":30597,"line_start":872,"line_end":872,"column_start":5,"column_end":76}},{"value":"/ enum.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30602,"byte_end":30611,"line_start":873,"line_end":873,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30616,"byte_end":30619,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate enums instead of constants. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30624,"byte_end":30691,"line_start":875,"line_end":875,"column_start":5,"column_end":72}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30696,"byte_end":30726,"line_start":876,"line_end":876,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30731,"byte_end":30734,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ **Use this with caution**, creating this in unsafe code","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30739,"byte_end":30798,"line_start":878,"line_end":878,"column_start":5,"column_end":64}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30803,"byte_end":30877,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ You may want to use the newtype enum style instead.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":30882,"byte_end":30937,"line_start":880,"line_end":880,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31546,"byte_end":31575,"line_start":895,"line_end":895,"column_start":12,"column_end":41},"name":"rustified_non_exhaustive_enum","qualname":"<Builder>::rustified_non_exhaustive_enum","value":"pub fn rustified_non_exhaustive_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum with the `#[non_exhaustive]` attribute.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a Rust","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31084,"byte_end":31155,"line_start":886,"line_end":886,"column_start":5,"column_end":76}},{"value":"/ enum with the `#[non_exhaustive]` attribute.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31160,"byte_end":31208,"line_start":887,"line_end":887,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31213,"byte_end":31216,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate enums instead of constants. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31221,"byte_end":31288,"line_start":889,"line_end":889,"column_start":5,"column_end":72}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31293,"byte_end":31323,"line_start":890,"line_end":890,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31328,"byte_end":31331,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ **Use this with caution**, creating this in unsafe code","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31336,"byte_end":31395,"line_start":892,"line_end":892,"column_start":5,"column_end":64}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31400,"byte_end":31474,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/ You may want to use the newtype enum style instead.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31479,"byte_end":31534,"line_start":894,"line_end":894,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31875,"byte_end":31890,"line_start":905,"line_end":905,"column_start":12,"column_end":27},"name":"constified_enum","qualname":"<Builder>::constified_enum","value":"pub fn constified_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that are not to be put into a module.\n","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a set of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31734,"byte_end":31807,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ constants that are not to be put into a module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":31812,"byte_end":31863,"line_start":904,"line_end":904,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32292,"byte_end":32314,"line_start":915,"line_end":915,"column_start":12,"column_end":34},"name":"constified_enum_module","qualname":"<Builder>::constified_enum_module","value":"pub fn constified_enum_module<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that should be put into a module.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a set of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32012,"byte_end":32085,"line_start":910,"line_end":910,"column_start":5,"column_end":78}},{"value":"/ constants that should be put into a module.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32090,"byte_end":32137,"line_start":911,"line_end":911,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32142,"byte_end":32145,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate modules containing constants instead of","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32150,"byte_end":32221,"line_start":913,"line_end":913,"column_start":5,"column_end":76}},{"value":"/ just constants. Regular expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32226,"byte_end":32280,"line_start":914,"line_end":914,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32499,"byte_end":32526,"line_start":921,"line_end":921,"column_start":12,"column_end":39},"name":"default_macro_constant_type","qualname":"<Builder>::default_macro_constant_type","value":"pub fn default_macro_constant_type(Self, codegen::MacroTypeVariation)\n-> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default type for macro constants\n","sig":null,"attributes":[{"value":"/ Set the default type for macro constants","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32443,"byte_end":32487,"line_start":920,"line_end":920,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32757,"byte_end":32776,"line_start":930,"line_end":930,"column_start":12,"column_end":31},"name":"default_alias_style","qualname":"<Builder>::default_alias_style","value":"pub fn default_alias_style(Self, codegen::AliasVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for typedefs\n","sig":null,"attributes":[{"value":"/ Set the default style of code to generate for typedefs","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32687,"byte_end":32745,"line_start":929,"line_end":929,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33243,"byte_end":33253,"line_start":944,"line_end":944,"column_start":12,"column_end":22},"name":"type_alias","qualname":"<Builder>::type_alias","value":"pub fn type_alias<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n use regular Rust type aliasing.","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":32925,"byte_end":33000,"line_start":938,"line_end":938,"column_start":5,"column_end":80}},{"value":"/ use regular Rust type aliasing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33005,"byte_end":33040,"line_start":939,"line_end":939,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33045,"byte_end":33048,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ This is the default behavior and should be used if `default_alias_style`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33053,"byte_end":33129,"line_start":941,"line_end":941,"column_start":5,"column_end":81}},{"value":"/ was set to NewType or NewTypeDeref and you want to override it for a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33134,"byte_end":33206,"line_start":942,"line_end":942,"column_start":5,"column_end":77}},{"value":"/ set of typedefs.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33211,"byte_end":33231,"line_start":943,"line_end":943,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33627,"byte_end":33641,"line_start":954,"line_end":954,"column_start":12,"column_end":26},"name":"new_type_alias","qualname":"<Builder>::new_type_alias","value":"pub fn new_type_alias<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n be generated as a new type by having the aliased type be wrapped in a\n #[repr(transparent)] struct.","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33369,"byte_end":33444,"line_start":949,"line_end":949,"column_start":5,"column_end":80}},{"value":"/ be generated as a new type by having the aliased type be wrapped in a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33449,"byte_end":33522,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ #[repr(transparent)] struct.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33527,"byte_end":33559,"line_start":951,"line_end":951,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33564,"byte_end":33567,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Used to enforce stricter type checking.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33572,"byte_end":33615,"line_start":953,"line_end":953,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34067,"byte_end":34087,"line_start":963,"line_end":963,"column_start":12,"column_end":32},"name":"new_type_alias_deref","qualname":"<Builder>::new_type_alias_deref","value":"pub fn new_type_alias_deref<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n be generated as a new type by having the aliased type be wrapped in a\n #[repr(transparent)] struct and also have an automatically generated\n impl's of `Deref` and `DerefMut` to their aliased type.\n","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33761,"byte_end":33836,"line_start":959,"line_end":959,"column_start":5,"column_end":80}},{"value":"/ be generated as a new type by having the aliased type be wrapped in a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33841,"byte_end":33914,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ #[repr(transparent)] struct and also have an automatically generated","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33919,"byte_end":33991,"line_start":961,"line_end":961,"column_start":5,"column_end":77}},{"value":"/ impl's of `Deref` and `DerefMut` to their aliased type.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":33996,"byte_end":34055,"line_start":962,"line_end":962,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34342,"byte_end":34350,"line_start":970,"line_end":970,"column_start":12,"column_end":20},"name":"raw_line","qualname":"<Builder>::raw_line","value":"pub fn raw_line<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a string to prepend to the generated bindings. The string is passed\n through without any modification.\n","sig":null,"attributes":[{"value":"/ Add a string to prepend to the generated bindings. The string is passed","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34213,"byte_end":34288,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ through without any modification.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34293,"byte_end":34330,"line_start":969,"line_end":969,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34535,"byte_end":34550,"line_start":976,"line_end":976,"column_start":12,"column_end":27},"name":"module_raw_line","qualname":"<Builder>::module_raw_line","value":"pub fn module_raw_line<T, U>(Self, T, U) -> Self where T: Into<String>,\nU: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a given line to the beginning of module `mod`.\n","sig":null,"attributes":[{"value":"/ Add a given line to the beginning of module `mod`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34469,"byte_end":34523,"line_start":975,"line_end":975,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34906,"byte_end":34922,"line_start":990,"line_end":990,"column_start":12,"column_end":28},"name":"module_raw_lines","qualname":"<Builder>::module_raw_lines","value":"pub fn module_raw_lines<T, I>(Self, T, I) -> Self where T: Into<String>,\nI: IntoIterator, I::Item: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a given set of lines to the beginning of module `mod`.\n","sig":null,"attributes":[{"value":"/ Add a given set of lines to the beginning of module `mod`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":34832,"byte_end":34894,"line_start":989,"line_end":989,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4062},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35331,"byte_end":35340,"line_start":1005,"line_end":1005,"column_start":12,"column_end":21},"name":"clang_arg","qualname":"<Builder>::clang_arg","value":"pub fn clang_arg<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to be passed straight through to clang.\n","sig":null,"attributes":[{"value":"/ Add an argument to be passed straight through to clang.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35260,"byte_end":35319,"line_start":1004,"line_end":1004,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35532,"byte_end":35542,"line_start":1011,"line_end":1011,"column_start":12,"column_end":22},"name":"clang_args","qualname":"<Builder>::clang_args","value":"pub fn clang_args<I>(Self, I) -> Builder where I: IntoIterator,\nI::Item: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add arguments to be passed straight through to clang.\n","sig":null,"attributes":[{"value":"/ Add arguments to be passed straight through to clang.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35463,"byte_end":35520,"line_start":1010,"line_end":1010,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35872,"byte_end":35885,"line_start":1024,"line_end":1024,"column_start":12,"column_end":25},"name":"emit_builtins","qualname":"<Builder>::emit_builtins","value":"pub fn emit_builtins(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit bindings for builtin definitions (for example `__builtin_va_list`)\n in the generated Rust.\n","sig":null,"attributes":[{"value":"/ Emit bindings for builtin definitions (for example `__builtin_va_list`)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35754,"byte_end":35829,"line_start":1022,"line_end":1022,"column_start":5,"column_end":80}},{"value":"/ in the generated Rust.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35834,"byte_end":35860,"line_start":1023,"line_end":1023,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4067},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36037,"byte_end":36054,"line_start":1030,"line_end":1030,"column_start":12,"column_end":29},"name":"no_convert_floats","qualname":"<Builder>::no_convert_floats","value":"pub fn no_convert_floats(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid converting floats to `f32`/`f64` by default.\n","sig":null,"attributes":[{"value":"/ Avoid converting floats to `f32`/`f64` by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":35971,"byte_end":36025,"line_start":1029,"line_end":1029,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36205,"byte_end":36217,"line_start":1036,"line_end":1036,"column_start":12,"column_end":24},"name":"layout_tests","qualname":"<Builder>::layout_tests","value":"pub fn layout_tests(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether layout tests should be generated.\n","sig":null,"attributes":[{"value":"/ Set whether layout tests should be generated.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36144,"byte_end":36193,"line_start":1035,"line_end":1035,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36414,"byte_end":36424,"line_start":1042,"line_end":1042,"column_start":12,"column_end":22},"name":"impl_debug","qualname":"<Builder>::impl_debug","value":"pub fn impl_debug(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `Debug` should be implemented, if it can not be derived automatically.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36316,"byte_end":36402,"line_start":1041,"line_end":1041,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36623,"byte_end":36637,"line_start":1048,"line_end":1048,"column_start":12,"column_end":26},"name":"impl_partialeq","qualname":"<Builder>::impl_partialeq","value":"pub fn impl_partialeq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `PartialEq` should be implemented, if it can not be derived automatically.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36521,"byte_end":36611,"line_start":1047,"line_end":1047,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36802,"byte_end":36813,"line_start":1054,"line_end":1054,"column_start":12,"column_end":23},"name":"derive_copy","qualname":"<Builder>::derive_copy","value":"pub fn derive_copy(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Copy` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Copy` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36738,"byte_end":36790,"line_start":1053,"line_end":1053,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36976,"byte_end":36988,"line_start":1060,"line_end":1060,"column_start":12,"column_end":24},"name":"derive_debug","qualname":"<Builder>::derive_debug","value":"pub fn derive_debug(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Debug` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":36911,"byte_end":36964,"line_start":1059,"line_end":1059,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37154,"byte_end":37168,"line_start":1066,"line_end":1066,"column_start":12,"column_end":26},"name":"derive_default","qualname":"<Builder>::derive_default","value":"pub fn derive_default(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Default` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Default` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37087,"byte_end":37142,"line_start":1065,"line_end":1065,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37333,"byte_end":37344,"line_start":1072,"line_end":1072,"column_start":12,"column_end":23},"name":"derive_hash","qualname":"<Builder>::derive_hash","value":"pub fn derive_hash(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Hash` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Hash` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37269,"byte_end":37321,"line_start":1071,"line_end":1071,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37640,"byte_end":37657,"line_start":1080,"line_end":1080,"column_start":12,"column_end":29},"name":"derive_partialord","qualname":"<Builder>::derive_partialord","value":"pub fn derive_partialord(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialOrd` should be derived by default.\n If we don't compute partialord, we also cannot compute\n ord. Set the derive_ord to `false` when doit is `false`.\n","sig":null,"attributes":[{"value":"/ Set whether `PartialOrd` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37442,"byte_end":37500,"line_start":1077,"line_end":1077,"column_start":5,"column_end":63}},{"value":"/ If we don't compute partialord, we also cannot compute","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37505,"byte_end":37563,"line_start":1078,"line_end":1078,"column_start":5,"column_end":63}},{"value":"/ ord. Set the derive_ord to `false` when doit is `false`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37568,"byte_end":37628,"line_start":1079,"line_end":1079,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38017,"byte_end":38027,"line_start":1091,"line_end":1091,"column_start":12,"column_end":22},"name":"derive_ord","qualname":"<Builder>::derive_ord","value":"pub fn derive_ord(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Ord` should be derived by default.\n We can't compute `Ord` without computing `PartialOrd`,\n so we set the same option to derive_partialord.\n","sig":null,"attributes":[{"value":"/ Set whether `Ord` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37835,"byte_end":37886,"line_start":1088,"line_end":1088,"column_start":5,"column_end":56}},{"value":"/ We can't compute `Ord` without computing `PartialOrd`,","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37891,"byte_end":37949,"line_start":1089,"line_end":1089,"column_start":5,"column_end":63}},{"value":"/ so we set the same option to derive_partialord.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":37954,"byte_end":38005,"line_start":1090,"line_end":1090,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38382,"byte_end":38398,"line_start":1101,"line_end":1101,"column_start":12,"column_end":28},"name":"derive_partialeq","qualname":"<Builder>::derive_partialeq","value":"pub fn derive_partialeq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be derived by default.","sig":null,"attributes":[{"value":"/ Set whether `PartialEq` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38171,"byte_end":38228,"line_start":1097,"line_end":1097,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38233,"byte_end":38236,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ If we don't derive `PartialEq`, we also cannot derive `Eq`, so deriving","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38241,"byte_end":38316,"line_start":1099,"line_end":1099,"column_start":5,"column_end":80}},{"value":"/ `Eq` is also disabled when `doit` is `false`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38321,"byte_end":38370,"line_start":1100,"line_end":1100,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38778,"byte_end":38787,"line_start":1113,"line_end":1113,"column_start":12,"column_end":21},"name":"derive_eq","qualname":"<Builder>::derive_eq","value":"pub fn derive_eq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Eq` should be derived by default.","sig":null,"attributes":[{"value":"/ Set whether `Eq` should be derived by default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38574,"byte_end":38624,"line_start":1109,"line_end":1109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38629,"byte_end":38632,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ We can't derive `Eq` without also deriving `PartialEq`, so we also","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38637,"byte_end":38707,"line_start":1111,"line_end":1111,"column_start":5,"column_end":75}},{"value":"/ enable deriving `PartialEq` when `doit` is `true`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38712,"byte_end":38766,"line_start":1112,"line_end":1112,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39060,"byte_end":39071,"line_start":1123,"line_end":1123,"column_start":12,"column_end":23},"name":"time_phases","qualname":"<Builder>::time_phases","value":"pub fn time_phases(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not to time bindgen phases, and print information to\n stderr.\n","sig":null,"attributes":[{"value":"/ Set whether or not to time bindgen phases, and print information to","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":38961,"byte_end":39032,"line_start":1121,"line_end":1121,"column_start":5,"column_end":76}},{"value":"/ stderr.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39037,"byte_end":39048,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39200,"byte_end":39214,"line_start":1129,"line_end":1129,"column_start":12,"column_end":26},"name":"emit_clang_ast","qualname":"<Builder>::emit_clang_ast","value":"pub fn emit_clang_ast(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit Clang AST.\n","sig":null,"attributes":[{"value":"/ Emit Clang AST.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39169,"byte_end":39188,"line_start":1128,"line_end":1128,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39324,"byte_end":39331,"line_start":1135,"line_end":1135,"column_start":12,"column_end":19},"name":"emit_ir","qualname":"<Builder>::emit_ir","value":"pub fn emit_ir(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit IR.\n","sig":null,"attributes":[{"value":"/ Emit IR.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39300,"byte_end":39312,"line_start":1134,"line_end":1134,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39454,"byte_end":39475,"line_start":1141,"line_end":1141,"column_start":12,"column_end":33},"name":"enable_cxx_namespaces","qualname":"<Builder>::enable_cxx_namespaces","value":"pub fn enable_cxx_namespaces(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Enable C++ namespaces.\n","sig":null,"attributes":[{"value":"/ Enable C++ namespaces.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39416,"byte_end":39442,"line_start":1140,"line_end":1140,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39892,"byte_end":39927,"line_start":1153,"line_end":1153,"column_start":12,"column_end":47},"name":"enable_function_attribute_detection","qualname":"<Builder>::enable_function_attribute_detection","value":"pub fn enable_function_attribute_detection(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable detecting must_use attributes on C functions.","sig":null,"attributes":[{"value":"/ Enable detecting must_use attributes on C functions.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39574,"byte_end":39630,"line_start":1146,"line_end":1146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39635,"byte_end":39638,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ This is quite slow in some cases (see #1465), so it's disabled by","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39643,"byte_end":39712,"line_start":1148,"line_end":1148,"column_start":5,"column_end":74}},{"value":"/ default.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39717,"byte_end":39729,"line_start":1149,"line_end":1149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39734,"byte_end":39737,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ Note that for this to do something meaningful for now at least, the rust","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39742,"byte_end":39818,"line_start":1151,"line_end":1151,"column_start":5,"column_end":81}},{"value":"/ target version has to have support for `#[must_use]`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":39823,"byte_end":39880,"line_start":1152,"line_end":1152,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40542,"byte_end":40566,"line_start":1171,"line_end":1171,"column_start":12,"column_end":36},"name":"disable_name_namespacing","qualname":"<Builder>::disable_name_namespacing","value":"pub fn disable_name_namespacing(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable name auto-namespacing.","sig":null,"attributes":[{"value":"/ Disable name auto-namespacing.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40037,"byte_end":40071,"line_start":1158,"line_end":1158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40076,"byte_end":40079,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ By default, bindgen mangles names like `foo::bar::Baz` to look like","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40084,"byte_end":40155,"line_start":1160,"line_end":1160,"column_start":5,"column_end":76}},{"value":"/ `foo_bar_Baz` instead of just `Baz`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40160,"byte_end":40200,"line_start":1161,"line_end":1161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40205,"byte_end":40208,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ This method disables that behavior.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40213,"byte_end":40252,"line_start":1163,"line_end":1163,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40257,"byte_end":40260,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ Note that this intentionally does not change the names used for","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40265,"byte_end":40332,"line_start":1165,"line_end":1165,"column_start":5,"column_end":72}},{"value":"/ whitelisting and blacklisting, which should still be mangled with the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40337,"byte_end":40410,"line_start":1166,"line_end":1166,"column_start":5,"column_end":78}},{"value":"/ namespaces.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40415,"byte_end":40430,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40435,"byte_end":40438,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ Note, also, that this option may cause bindgen to generate duplicate","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40443,"byte_end":40515,"line_start":1169,"line_end":1169,"column_start":5,"column_end":77}},{"value":"/ names.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40520,"byte_end":40530,"line_start":1170,"line_end":1170,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4085},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41309,"byte_end":41337,"line_start":1194,"line_end":1194,"column_start":12,"column_end":40},"name":"disable_nested_struct_naming","qualname":"<Builder>::disable_nested_struct_naming","value":"pub fn disable_nested_struct_naming(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable nested struct naming.","sig":null,"attributes":[{"value":"/ Disable nested struct naming.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40668,"byte_end":40701,"line_start":1176,"line_end":1176,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40706,"byte_end":40709,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ The following structs have different names for C and C++. In case of C","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40714,"byte_end":40788,"line_start":1178,"line_end":1178,"column_start":5,"column_end":79}},{"value":"/ they are visible as `foo` and `bar`. In case of C++ they are visible as","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40793,"byte_end":40868,"line_start":1179,"line_end":1179,"column_start":5,"column_end":80}},{"value":"/ `foo` and `foo::bar`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40873,"byte_end":40898,"line_start":1180,"line_end":1180,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40903,"byte_end":40906,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ ```c","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40911,"byte_end":40919,"line_start":1182,"line_end":1182,"column_start":5,"column_end":13}},{"value":"/ struct foo {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40924,"byte_end":40940,"line_start":1183,"line_end":1183,"column_start":5,"column_end":21}},{"value":"/     struct bar {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40945,"byte_end":40965,"line_start":1184,"line_end":1184,"column_start":5,"column_end":25}},{"value":"/     } b;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40970,"byte_end":40982,"line_start":1185,"line_end":1185,"column_start":5,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40987,"byte_end":40993,"line_start":1186,"line_end":1186,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":40998,"byte_end":41005,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41010,"byte_end":41013,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Bindgen wants to avoid duplicate names by default so it follows C++ naming","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41018,"byte_end":41096,"line_start":1189,"line_end":1189,"column_start":5,"column_end":83}},{"value":"/ and it generates `foo`/`foo_bar` instead of just `foo`/`bar`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41101,"byte_end":41166,"line_start":1190,"line_end":1190,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41171,"byte_end":41174,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ This method disables this behavior and it is indented to be used only","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41179,"byte_end":41252,"line_start":1192,"line_end":1192,"column_start":5,"column_end":78}},{"value":"/ for headers that were written for C.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41257,"byte_end":41297,"line_start":1193,"line_end":1193,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42614,"byte_end":42644,"line_start":1227,"line_end":1227,"column_start":12,"column_end":42},"name":"conservative_inline_namespaces","qualname":"<Builder>::conservative_inline_namespaces","value":"pub fn conservative_inline_namespaces(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat inline namespaces conservatively.","sig":null,"attributes":[{"value":"/ Treat inline namespaces conservatively.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41443,"byte_end":41486,"line_start":1199,"line_end":1199,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41491,"byte_end":41494,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ This is tricky, because in C++ is technically legal to override an item","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41499,"byte_end":41574,"line_start":1201,"line_end":1201,"column_start":5,"column_end":80}},{"value":"/ defined in an inline namespace:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41579,"byte_end":41614,"line_start":1202,"line_end":1202,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41619,"byte_end":41622,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41627,"byte_end":41637,"line_start":1204,"line_end":1204,"column_start":5,"column_end":15}},{"value":"/ inline namespace foo {","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41642,"byte_end":41668,"line_start":1205,"line_end":1205,"column_start":5,"column_end":31}},{"value":"/     using Bar = int;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41673,"byte_end":41697,"line_start":1206,"line_end":1206,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41702,"byte_end":41707,"line_start":1207,"line_end":1207,"column_start":5,"column_end":10}},{"value":"/ using Bar = long;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41712,"byte_end":41733,"line_start":1208,"line_end":1208,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41738,"byte_end":41745,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41750,"byte_end":41753,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ Even though referencing `Bar` is a compiler error.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41758,"byte_end":41812,"line_start":1211,"line_end":1211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41817,"byte_end":41820,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ We want to support this (arguably esoteric) use case, but we don't want","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41825,"byte_end":41900,"line_start":1213,"line_end":1213,"column_start":5,"column_end":80}},{"value":"/ to make the rest of bindgen users pay an usability penalty for that.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41905,"byte_end":41977,"line_start":1214,"line_end":1214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41982,"byte_end":41985,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ To support this, we need to keep all the inline namespaces around, but","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":41990,"byte_end":42064,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ then bindgen usage is a bit more difficult, because you cannot","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42069,"byte_end":42135,"line_start":1217,"line_end":1217,"column_start":5,"column_end":71}},{"value":"/ reference, e.g., `std::string` (you'd need to use the proper inline","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42140,"byte_end":42211,"line_start":1218,"line_end":1218,"column_start":5,"column_end":76}},{"value":"/ namespace).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42216,"byte_end":42231,"line_start":1219,"line_end":1219,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42236,"byte_end":42239,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ We could complicate a lot of the logic to detect name collisions, and if","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42244,"byte_end":42320,"line_start":1221,"line_end":1221,"column_start":5,"column_end":81}},{"value":"/ not detected generate a `pub use inline_ns::*` or something like that.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42325,"byte_end":42399,"line_start":1222,"line_end":1222,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42404,"byte_end":42407,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ That's probably something we can do if we see this option is needed in a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42412,"byte_end":42488,"line_start":1224,"line_end":1224,"column_start":5,"column_end":81}},{"value":"/ lot of cases, to improve it's usability, but my guess is that this is","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42493,"byte_end":42566,"line_start":1225,"line_end":1225,"column_start":5,"column_end":78}},{"value":"/ not going to be too useful.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42571,"byte_end":42602,"line_start":1226,"line_end":1226,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4087},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43034,"byte_end":43059,"line_start":1237,"line_end":1237,"column_start":12,"column_end":37},"name":"generate_inline_functions","qualname":"<Builder>::generate_inline_functions","value":"pub fn generate_inline_functions(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether inline functions should be generated or not.","sig":null,"attributes":[{"value":"/ Whether inline functions should be generated or not.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42752,"byte_end":42808,"line_start":1232,"line_end":1232,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42813,"byte_end":42816,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ Note that they will usually not work. However you can use","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42821,"byte_end":42882,"line_start":1234,"line_end":1234,"column_start":5,"column_end":66}},{"value":"/ `-fkeep-inline-functions` or `-fno-inline-functions` if you are","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42887,"byte_end":42954,"line_start":1235,"line_end":1235,"column_start":5,"column_end":72}},{"value":"/ responsible of compiling the library to make them callable.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":42959,"byte_end":43022,"line_start":1236,"line_end":1236,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43204,"byte_end":43220,"line_start":1243,"line_end":1243,"column_start":12,"column_end":28},"name":"ignore_functions","qualname":"<Builder>::ignore_functions","value":"pub fn ignore_functions(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore functions.\n","sig":null,"attributes":[{"value":"/ Ignore functions.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43171,"byte_end":43192,"line_start":1242,"line_end":1242,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4089},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43369,"byte_end":43383,"line_start":1249,"line_end":1249,"column_start":12,"column_end":26},"name":"ignore_methods","qualname":"<Builder>::ignore_methods","value":"pub fn ignore_methods(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore methods.\n","sig":null,"attributes":[{"value":"/ Ignore methods.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43338,"byte_end":43357,"line_start":1248,"line_end":1248,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43659,"byte_end":43672,"line_start":1256,"line_end":1256,"column_start":12,"column_end":25},"name":"unstable_rust","qualname":"<Builder>::unstable_rust","value":"pub fn unstable_rust(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.\n","sig":null,"attributes":[{"value":"/ Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43499,"byte_end":43586,"line_start":1254,"line_end":1254,"column_start":5,"column_end":92}},{"value":"deprecated(note = \"please use `rust_target` instead\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43591,"byte_end":43647,"line_start":1255,"line_end":1255,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4091},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43946,"byte_end":43954,"line_start":1266,"line_end":1266,"column_start":12,"column_end":20},"name":"use_core","qualname":"<Builder>::use_core","value":"pub fn use_core(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use core instead of libstd in the generated bindings.\n","sig":null,"attributes":[{"value":"/ Use core instead of libstd in the generated bindings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":43877,"byte_end":43934,"line_start":1265,"line_end":1265,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4092},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44123,"byte_end":44136,"line_start":1272,"line_end":1272,"column_start":12,"column_end":25},"name":"ctypes_prefix","qualname":"<Builder>::ctypes_prefix","value":"pub fn ctypes_prefix<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use the given prefix for the raw types instead of `::std::os::raw`.\n","sig":null,"attributes":[{"value":"/ Use the given prefix for the raw types instead of `::std::os::raw`.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44040,"byte_end":44111,"line_start":1271,"line_end":1271,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44327,"byte_end":44345,"line_start":1278,"line_end":1278,"column_start":12,"column_end":30},"name":"anon_fields_prefix","qualname":"<Builder>::anon_fields_prefix","value":"pub fn anon_fields_prefix<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use the given prefix for the anon fields.\n","sig":null,"attributes":[{"value":"/ Use the given prefix for the anon fields.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44270,"byte_end":44315,"line_start":1277,"line_end":1277,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44632,"byte_end":44647,"line_start":1285,"line_end":1285,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<Builder>::parse_callbacks","value":"pub fn parse_callbacks(Self, Box<dyn callbacks::ParseCallbacks>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows configuring types in different situations, see the\n [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.\n","sig":null,"attributes":[{"value":"/ Allows configuring types in different situations, see the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44478,"byte_end":44539,"line_start":1283,"line_end":1283,"column_start":5,"column_end":66}},{"value":"/ [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44544,"byte_end":44620,"line_start":1284,"line_end":1284,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44907,"byte_end":44926,"line_start":1295,"line_end":1295,"column_start":12,"column_end":31},"name":"with_codegen_config","qualname":"<Builder>::with_codegen_config","value":"pub fn with_codegen_config(Self, CodegenConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Choose what to generate using a\n [`CodegenConfig`](./struct.CodegenConfig.html).\n","sig":null,"attributes":[{"value":"/ Choose what to generate using a","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44804,"byte_end":44839,"line_start":1293,"line_end":1293,"column_start":5,"column_end":40}},{"value":"/ [`CodegenConfig`](./struct.CodegenConfig.html).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":44844,"byte_end":44895,"line_start":1294,"line_end":1294,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45104,"byte_end":45124,"line_start":1301,"line_end":1301,"column_start":12,"column_end":32},"name":"detect_include_paths","qualname":"<Builder>::detect_include_paths","value":"pub fn detect_include_paths(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to detect include paths using clang_sys.\n","sig":null,"attributes":[{"value":"/ Whether to detect include paths using clang_sys.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45040,"byte_end":45092,"line_start":1300,"line_end":1300,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4099},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45314,"byte_end":45333,"line_start":1307,"line_end":1307,"column_start":12,"column_end":31},"name":"fit_macro_constants","qualname":"<Builder>::fit_macro_constants","value":"pub fn fit_macro_constants(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to try to fit macro constants to types smaller than u32/i32\n","sig":null,"attributes":[{"value":"/ Whether to try to fit macro constants to types smaller than u32/i32","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45231,"byte_end":45302,"line_start":1306,"line_end":1306,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45509,"byte_end":45526,"line_start":1313,"line_end":1313,"column_start":12,"column_end":29},"name":"prepend_enum_name","qualname":"<Builder>::prepend_enum_name","value":"pub fn prepend_enum_name(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prepend the enum name to constant or newtype variants.\n","sig":null,"attributes":[{"value":"/ Prepend the enum name to constant or newtype variants.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45439,"byte_end":45497,"line_start":1312,"line_end":1312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4101},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45713,"byte_end":45728,"line_start":1319,"line_end":1319,"column_start":12,"column_end":27},"name":"size_t_is_usize","qualname":"<Builder>::size_t_is_usize","value":"pub fn size_t_is_usize(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `size_t` should be translated to `usize` automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `size_t` should be translated to `usize` automatically.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45630,"byte_end":45701,"line_start":1318,"line_end":1318,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45899,"byte_end":45915,"line_start":1325,"line_end":1325,"column_start":12,"column_end":28},"name":"rustfmt_bindings","qualname":"<Builder>::rustfmt_bindings","value":"pub fn rustfmt_bindings(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether rustfmt should format the generated bindings.\n","sig":null,"attributes":[{"value":"/ Set whether rustfmt should format the generated bindings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":45826,"byte_end":45887,"line_start":1324,"line_end":1324,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46095,"byte_end":46109,"line_start":1331,"line_end":1331,"column_start":12,"column_end":26},"name":"record_matches","qualname":"<Builder>::record_matches","value":"pub fn record_matches(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether we should record matched items in our regex sets.\n","sig":null,"attributes":[{"value":"/ Set whether we should record matched items in our regex sets.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46018,"byte_end":46083,"line_start":1330,"line_end":1330,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46338,"byte_end":46364,"line_start":1338,"line_end":1338,"column_start":12,"column_end":38},"name":"rustfmt_configuration_file","qualname":"<Builder>::rustfmt_configuration_file","value":"pub fn rustfmt_configuration_file(Self, Option<PathBuf>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt\n options are used.\n","sig":null,"attributes":[{"value":"/ Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46210,"byte_end":46300,"line_start":1336,"line_end":1336,"column_start":5,"column_end":95}},{"value":"/ options are used.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46305,"byte_end":46326,"line_start":1337,"line_end":1337,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4105},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46617,"byte_end":46629,"line_start":1345,"line_end":1345,"column_start":12,"column_end":24},"name":"with_rustfmt","qualname":"<Builder>::with_rustfmt","value":"pub fn with_rustfmt<P: Into<PathBuf>>(Self, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an explicit path to rustfmt, to be used when rustfmt is enabled.\n","sig":null,"attributes":[{"value":"/ Sets an explicit path to rustfmt, to be used when rustfmt is enabled.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46532,"byte_end":46605,"line_start":1344,"line_end":1344,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4107},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46835,"byte_end":46843,"line_start":1351,"line_end":1351,"column_start":12,"column_end":20},"name":"generate","qualname":"<Builder>::generate","value":"pub fn generate(Self) -> Result<Bindings, ()>","parent":null,"children":[],"decl_id":null,"docs":" Generate the Rust bindings using the options built up thus far.\n","sig":null,"attributes":[{"value":"/ Generate the Rust bindings using the options built up thus far.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":46756,"byte_end":46823,"line_start":1350,"line_end":1350,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":48301,"byte_end":48324,"line_start":1388,"line_end":1388,"column_start":12,"column_end":35},"name":"dump_preprocessed_input","qualname":"<Builder>::dump_preprocessed_input","value":"pub fn dump_preprocessed_input(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Preprocess and dump the input header files to disk.","sig":null,"attributes":[{"value":"/ Preprocess and dump the input header files to disk.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":48044,"byte_end":48099,"line_start":1383,"line_end":1383,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":48104,"byte_end":48107,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ This is useful when debugging bindgen, using C-Reduce, or when filing","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":48112,"byte_end":48185,"line_start":1385,"line_end":1385,"column_start":5,"column_end":78}},{"value":"/ issues. The resulting file will be named something like `__bindgen.i` or","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":48190,"byte_end":48266,"line_start":1386,"line_end":1386,"column_start":5,"column_end":81}},{"value":"/ `__bindgen.ii`","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":48271,"byte_end":48289,"line_start":1387,"line_end":1387,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":50817,"byte_end":50829,"line_start":1469,"line_end":1469,"column_start":12,"column_end":24},"name":"no_partialeq","qualname":"<Builder>::no_partialeq","value":"pub fn no_partialeq<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `PartialEq` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `PartialEq` for a given type. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":50716,"byte_end":50770,"line_start":1467,"line_end":1467,"column_start":5,"column_end":59}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":50775,"byte_end":50805,"line_start":1468,"line_end":1468,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51058,"byte_end":51065,"line_start":1476,"line_end":1476,"column_start":12,"column_end":19},"name":"no_copy","qualname":"<Builder>::no_copy","value":"pub fn no_copy<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Copy` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Copy` for a given type. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":50962,"byte_end":51011,"line_start":1474,"line_end":1474,"column_start":5,"column_end":54}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51016,"byte_end":51046,"line_start":1475,"line_end":1475,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4116},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51287,"byte_end":51295,"line_start":1483,"line_end":1483,"column_start":12,"column_end":20},"name":"no_debug","qualname":"<Builder>::no_debug","value":"pub fn no_debug<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Debug` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Debug` for a given type. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51190,"byte_end":51240,"line_start":1481,"line_end":1481,"column_start":5,"column_end":55}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51245,"byte_end":51275,"line_start":1482,"line_end":1482,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51525,"byte_end":51535,"line_start":1490,"line_end":1490,"column_start":12,"column_end":22},"name":"no_default","qualname":"<Builder>::no_default","value":"pub fn no_default<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive/impl `Default` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive/impl `Default` for a given type. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51421,"byte_end":51478,"line_start":1488,"line_end":1488,"column_start":5,"column_end":62}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51483,"byte_end":51513,"line_start":1489,"line_end":1489,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4120},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51759,"byte_end":51766,"line_start":1497,"line_end":1497,"column_start":12,"column_end":19},"name":"no_hash","qualname":"<Builder>::no_hash","value":"pub fn no_hash<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Hash` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Hash` for a given type. Regular","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51663,"byte_end":51712,"line_start":1495,"line_end":1495,"column_start":5,"column_end":54}},{"value":"/ expressions are supported.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51717,"byte_end":51747,"line_start":1496,"line_end":1496,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51998,"byte_end":52025,"line_start":1503,"line_end":1503,"column_start":12,"column_end":39},"name":"array_pointers_in_arguments","qualname":"<Builder>::array_pointers_in_arguments","value":"pub fn array_pointers_in_arguments(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)\n","sig":null,"attributes":[{"value":"/ Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":51894,"byte_end":51986,"line_start":1502,"line_end":1502,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52186,"byte_end":52209,"line_start":1509,"line_end":1509,"column_start":12,"column_end":35},"name":"wasm_import_module_name","qualname":"<Builder>::wasm_import_module_name","value":"pub fn wasm_import_module_name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the wasm import module name\n","sig":null,"attributes":[{"value":"/ Set the wasm import module name","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52139,"byte_end":52174,"line_start":1508,"line_end":1508,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52483,"byte_end":52503,"line_start":1518,"line_end":1518,"column_start":12,"column_end":32},"name":"dynamic_library_name","qualname":"<Builder>::dynamic_library_name","value":"pub fn dynamic_library_name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the dynamic library name if we are generating bindings for a shared library.\n","sig":null,"attributes":[{"value":"/ Specify the dynamic library name if we are generating bindings for a shared library.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52383,"byte_end":52471,"line_start":1517,"line_end":1517,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52790,"byte_end":52814,"line_start":1527,"line_end":1527,"column_start":12,"column_end":36},"name":"respect_cxx_access_specs","qualname":"<Builder>::respect_cxx_access_specs","value":"pub fn respect_cxx_access_specs(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate bindings as `pub` only if the bound item is publically accessible by C++.\n","sig":null,"attributes":[{"value":"/ Generate bindings as `pub` only if the bound item is publically accessible by C++.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":52692,"byte_end":52778,"line_start":1526,"line_end":1526,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5981},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":69035,"byte_end":69043,"line_start":1991,"line_end":1991,"column_start":12,"column_end":20},"name":"Bindings","qualname":"::Bindings","value":"Bindings {  }","parent":null,"children":[{"krate":0,"index":5982},{"krate":0,"index":5983}],"decl_id":null,"docs":" Generated Rust bindings.\n","sig":null,"attributes":[{"value":"/ Generated Rust bindings.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":68978,"byte_end":69006,"line_start":1989,"line_end":1989,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":76474,"byte_end":76483,"line_start":2218,"line_end":2218,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Bindings>::to_string","value":"pub fn to_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert these bindings into source text (with raw lines prepended).\n","sig":null,"attributes":[{"value":"/ Convert these bindings into source text (with raw lines prepended).","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":76391,"byte_end":76462,"line_start":2217,"line_end":2217,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":76827,"byte_end":76840,"line_start":2227,"line_end":2227,"column_start":12,"column_end":25},"name":"write_to_file","qualname":"<Bindings>::write_to_file","value":"pub fn write_to_file<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to a file.\n","sig":null,"attributes":[{"value":"/ Write these bindings as source text to a file.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":76765,"byte_end":76815,"line_start":2226,"line_end":2226,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":77185,"byte_end":77190,"line_start":2238,"line_end":2238,"column_start":12,"column_end":17},"name":"write","qualname":"<Bindings>::write","value":"pub fn write<'a>(&Self, Box<dyn Write + 'a>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to the given `Write`able.\n","sig":null,"attributes":[{"value":"/ Write these bindings as source text to the given `Write`able.","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":77108,"byte_end":77173,"line_start":2237,"line_end":2237,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":5987},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83551,"byte_end":83563,"line_start":2436,"line_end":2436,"column_start":12,"column_end":24},"name":"ClangVersion","qualname":"::ClangVersion","value":"ClangVersion { parsed, full }","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989}],"decl_id":null,"docs":" Extracted Clang version data\n","sig":null,"attributes":[{"value":"/ Extracted Clang version data","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83490,"byte_end":83522,"line_start":2434,"line_end":2434,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5988},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83632,"byte_end":83638,"line_start":2438,"line_end":2438,"column_start":9,"column_end":15},"name":"parsed","qualname":"::ClangVersion::parsed","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":5987},"children":[],"decl_id":null,"docs":" Major and minor semver, if parsing was successful\n","sig":null,"attributes":[{"value":"/ Major and minor semver, if parsing was successful","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83570,"byte_end":83623,"line_start":2437,"line_end":2437,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5989},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83696,"byte_end":83700,"line_start":2440,"line_end":2440,"column_start":9,"column_end":13},"name":"full","qualname":"::ClangVersion::full","value":"std::string::String","parent":{"krate":0,"index":5987},"children":[],"decl_id":null,"docs":" full version string\n","sig":null,"attributes":[{"value":"/ full version string","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83664,"byte_end":83687,"line_start":2439,"line_end":2439,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":4171},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83786,"byte_end":83799,"line_start":2444,"line_end":2444,"column_start":8,"column_end":21},"name":"clang_version","qualname":"::clang_version","value":"pub fn clang_version() -> ClangVersion","parent":null,"children":[],"decl_id":null,"docs":" Get the major and the minor semver numbers of Clang's version\n","sig":null,"attributes":[{"value":"/ Get the major and the minor semver numbers of Clang's version","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":83713,"byte_end":83778,"line_start":2443,"line_end":2443,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5992},"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85199,"byte_end":85213,"line_start":2489,"line_end":2489,"column_start":12,"column_end":26},"name":"CargoCallbacks","qualname":"::CargoCallbacks","value":"","parent":null,"children":[],"decl_id":null,"docs":" A ParseCallbacks implementation that will act on file includes by echoing a rerun-if-changed\n line","sig":null,"attributes":[{"value":"/ A ParseCallbacks implementation that will act on file includes by echoing a rerun-if-changed","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84695,"byte_end":84791,"line_start":2476,"line_end":2476,"column_start":1,"column_end":97}},{"value":"/ line","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84792,"byte_end":84800,"line_start":2477,"line_end":2477,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84801,"byte_end":84804,"line_start":2478,"line_end":2478,"column_start":1,"column_end":4}},{"value":"/ When running in side a `build.rs` script, this can be used to make cargo invalidate the","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84805,"byte_end":84896,"line_start":2479,"line_end":2479,"column_start":1,"column_end":92}},{"value":"/ generated bindings whenever any of the files included from the header change:","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84897,"byte_end":84978,"line_start":2480,"line_end":2480,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84979,"byte_end":84986,"line_start":2481,"line_end":2481,"column_start":1,"column_end":8}},{"value":"/ use bindgen::builder;","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":84987,"byte_end":85012,"line_start":2482,"line_end":2482,"column_start":1,"column_end":26}},{"value":"/ let bindings = builder()","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85013,"byte_end":85041,"line_start":2483,"line_end":2483,"column_start":1,"column_end":29}},{"value":"/     .header(\"path/to/input/header\")","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85042,"byte_end":85081,"line_start":2484,"line_end":2484,"column_start":1,"column_end":40}},{"value":"/     .parse_callbacks(Box::new(bindgen::CargoCallbacks))","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85082,"byte_end":85141,"line_start":2485,"line_end":2485,"column_start":1,"column_end":60}},{"value":"/     .generate();","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85142,"byte_end":85162,"line_start":2486,"line_end":2486,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85163,"byte_end":85170,"line_start":2487,"line_end":2487,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89452,"byte_end":89458,"line_start":25,"line_end":25,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89753,"byte_end":89759,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":112030,"byte_end":112039,"line_start":739,"line_end":739,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":112878,"byte_end":112887,"line_start":770,"line_end":770,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113674,"byte_end":113684,"line_start":798,"line_end":798,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":114799,"byte_end":114809,"line_start":832,"line_end":832,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":115061,"byte_end":115079,"line_start":844,"line_end":844,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116254,"byte_end":116260,"line_start":888,"line_end":888,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116387,"byte_end":116393,"line_start":894,"line_end":894,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116412,"byte_end":116418,"line_start":896,"line_end":896,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116650,"byte_end":116654,"line_start":908,"line_end":908,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116777,"byte_end":116781,"line_start":914,"line_end":914,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116806,"byte_end":116810,"line_start":916,"line_end":916,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117787,"byte_end":117798,"line_start":948,"line_end":948,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118232,"byte_end":118236,"line_start":963,"line_end":963,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129462,"byte_end":129486,"line_start":1313,"line_end":1313,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129837,"byte_end":129860,"line_start":1332,"line_end":1332,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130237,"byte_end":130260,"line_start":1347,"line_end":1347,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130549,"byte_end":130563,"line_start":1360,"line_end":1360,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131098,"byte_end":131112,"line_start":1377,"line_end":1377,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131550,"byte_end":131557,"line_start":1395,"line_end":1395,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132664,"byte_end":132687,"line_start":1433,"line_end":1433,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133382,"byte_end":133407,"line_start":1463,"line_end":1463,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134130,"byte_end":134134,"line_start":1492,"line_end":1492,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134921,"byte_end":134926,"line_start":1522,"line_end":1522,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135416,"byte_end":135421,"line_start":1538,"line_end":1538,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135543,"byte_end":135548,"line_start":1544,"line_end":1544,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135778,"byte_end":135793,"line_start":1557,"line_end":1557,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135916,"byte_end":135931,"line_start":1563,"line_end":1563,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137839,"byte_end":137854,"line_start":1629,"line_end":1629,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138090,"byte_end":138100,"line_start":1642,"line_end":1642,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138591,"byte_end":138601,"line_start":1658,"line_end":1658,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":139008,"byte_end":139019,"line_start":1676,"line_end":1676,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":139575,"byte_end":139586,"line_start":1694,"line_end":1694,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":147092,"byte_end":147102,"line_start":1951,"line_end":1951,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":149854,"byte_end":149864,"line_start":2039,"line_end":2039,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":150175,"byte_end":150185,"line_start":2054,"line_end":2054,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/dyngen.rs","byte_start":310374,"byte_end":310386,"line_start":70,"line_end":70,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/error.rs","byte_start":313360,"byte_end":313365,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/error.rs","byte_start":313807,"byte_end":313812,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":325147,"byte_end":325156,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":325512,"byte_end":325524,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":326386,"byte_end":326390,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/struct_layout.rs","byte_start":337482,"byte_end":337501,"line_start":83,"line_end":83,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":155575,"byte_end":155578,"line_start":166,"line_end":166,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":157771,"byte_end":157784,"line_start":236,"line_end":236,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":160344,"byte_end":160357,"line_start":330,"line_end":330,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":160509,"byte_end":160522,"line_start":338,"line_end":338,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":160814,"byte_end":160825,"line_start":350,"line_end":350,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":161381,"byte_end":161392,"line_start":370,"line_end":370,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":163195,"byte_end":163199,"line_start":433,"line_end":433,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":164634,"byte_end":164640,"line_start":482,"line_end":482,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":167576,"byte_end":167579,"line_start":573,"line_end":573,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":172039,"byte_end":172043,"line_start":699,"line_end":699,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":183652,"byte_end":183658,"line_start":991,"line_end":991,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":183914,"byte_end":183920,"line_start":1005,"line_end":1005,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":184556,"byte_end":184562,"line_start":1028,"line_end":1028,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":184738,"byte_end":184744,"line_start":1034,"line_end":1034,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":185050,"byte_end":185071,"line_start":1049,"line_end":1049,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":188169,"byte_end":188174,"line_start":1140,"line_end":1140,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":189574,"byte_end":189583,"line_start":1192,"line_end":1192,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":194477,"byte_end":194489,"line_start":1345,"line_end":1345,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":194798,"byte_end":194806,"line_start":1358,"line_end":1358,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":196396,"byte_end":196408,"line_start":1410,"line_end":1410,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":201256,"byte_end":201264,"line_start":1563,"line_end":1563,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":204906,"byte_end":204914,"line_start":1667,"line_end":1667,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":225457,"byte_end":225463,"line_start":2231,"line_end":2231,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231479,"byte_end":231492,"line_start":2420,"line_end":2420,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231919,"byte_end":231932,"line_start":2438,"line_end":2438,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":232037,"byte_end":232050,"line_start":2444,"line_end":2444,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":233781,"byte_end":233792,"line_start":2499,"line_end":2499,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":243661,"byte_end":243665,"line_start":2802,"line_end":2802,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254476,"byte_end":254494,"line_start":3101,"line_end":3101,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254763,"byte_end":254781,"line_start":3111,"line_end":3111,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254898,"byte_end":254916,"line_start":3117,"line_end":3117,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255884,"byte_end":255898,"line_start":3147,"line_end":3147,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":256224,"byte_end":256238,"line_start":3158,"line_end":3158,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":256348,"byte_end":256362,"line_start":3164,"line_end":3164,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":258821,"byte_end":258822,"line_start":3236,"line_end":3236,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":260022,"byte_end":260023,"line_start":3270,"line_end":3270,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":261767,"byte_end":261768,"line_start":3318,"line_end":3318,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262113,"byte_end":262114,"line_start":3334,"line_end":3334,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262389,"byte_end":262390,"line_start":3349,"line_end":3349,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262680,"byte_end":262684,"line_start":3364,"line_end":3364,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262916,"byte_end":262920,"line_start":3376,"line_end":3376,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":263170,"byte_end":263174,"line_start":3388,"line_end":3388,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":263418,"byte_end":263422,"line_start":3400,"line_end":3400,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":271812,"byte_end":271833,"line_start":3602,"line_end":3602,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":272120,"byte_end":272141,"line_start":3616,"line_end":3616,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":274467,"byte_end":274478,"line_start":3683,"line_end":3683,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":275292,"byte_end":275300,"line_start":3708,"line_end":3708,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":281991,"byte_end":282004,"line_start":3910,"line_end":3910,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/features.rs","byte_start":355307,"byte_end":355319,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":378096,"byte_end":378118,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":386115,"byte_end":386137,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":394457,"byte_end":394464,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":398493,"byte_end":398505,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":411150,"byte_end":411161,"line_start":444,"line_end":444,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":416515,"byte_end":416526,"line_start":610,"line_end":610,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":416933,"byte_end":416945,"line_start":623,"line_end":623,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":419860,"byte_end":419867,"line_start":710,"line_end":710,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421255,"byte_end":421270,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421342,"byte_end":421357,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421516,"byte_end":421531,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421676,"byte_end":421691,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":423039,"byte_end":423056,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":424521,"byte_end":424538,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":427137,"byte_end":427144,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429945,"byte_end":429966,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":430859,"byte_end":430880,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":434375,"byte_end":434382,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":436200,"byte_end":436223,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":437625,"byte_end":437648,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":443351,"byte_end":443358,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":445034,"byte_end":445042,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":446240,"byte_end":446248,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":452041,"byte_end":452048,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454279,"byte_end":454294,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454373,"byte_end":454388,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454547,"byte_end":454562,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454707,"byte_end":454722,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455564,"byte_end":455581,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":457184,"byte_end":457201,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":462914,"byte_end":462921,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":363317,"byte_end":363332,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":363421,"byte_end":363436,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":363737,"byte_end":363752,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466403,"byte_end":466414,"line_start":78,"line_end":78,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466820,"byte_end":466831,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475696,"byte_end":475706,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476615,"byte_end":476621,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478716,"byte_end":478728,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479447,"byte_end":479452,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479799,"byte_end":479804,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":480334,"byte_end":480339,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":481548,"byte_end":481557,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":481913,"byte_end":481921,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":482893,"byte_end":482901,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":485028,"byte_end":485036,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":485858,"byte_end":485866,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":486404,"byte_end":486412,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":494946,"byte_end":494956,"line_start":717,"line_end":717,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":495063,"byte_end":495073,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":499574,"byte_end":499584,"line_start":853,"line_end":853,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":500888,"byte_end":500897,"line_start":901,"line_end":901,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502125,"byte_end":502129,"line_start":961,"line_end":961,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":505711,"byte_end":505719,"line_start":1072,"line_end":1072,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527872,"byte_end":527880,"line_start":1663,"line_end":1663,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":529304,"byte_end":529312,"line_start":1716,"line_end":1716,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":531511,"byte_end":531519,"line_start":1769,"line_end":1769,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":531658,"byte_end":531666,"line_start":1775,"line_end":1775,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539202,"byte_end":539208,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539367,"byte_end":539373,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539547,"byte_end":539548,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539759,"byte_end":539760,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539974,"byte_end":539975,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540180,"byte_end":540181,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540392,"byte_end":540393,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540680,"byte_end":540681,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540959,"byte_end":540960,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":541269,"byte_end":541270,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":548685,"byte_end":548710,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":549016,"byte_end":549041,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":549453,"byte_end":549467,"line_start":510,"line_end":510,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2427},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628582,"byte_end":628588,"line_start":2615,"line_end":2615,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628741,"byte_end":628753,"line_start":2622,"line_end":2622,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628864,"byte_end":628876,"line_start":2631,"line_end":2631,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630766,"byte_end":630777,"line_start":2691,"line_end":2691,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":631311,"byte_end":631322,"line_start":2710,"line_end":2710,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636128,"byte_end":636137,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636209,"byte_end":636218,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636377,"byte_end":636386,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636520,"byte_end":636529,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640237,"byte_end":640241,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2636},{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647134,"byte_end":647145,"line_start":250,"line_end":250,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":649107,"byte_end":649119,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651265,"byte_end":651273,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652254,"byte_end":652262,"line_start":143,"line_end":143,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653152,"byte_end":653155,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653371,"byte_end":653374,"line_start":195,"line_end":195,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":658572,"byte_end":658583,"line_start":347,"line_end":347,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666837,"byte_end":666845,"line_start":575,"line_end":575,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":669038,"byte_end":669049,"line_start":640,"line_end":640,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670914,"byte_end":670921,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":676038,"byte_end":676054,"line_start":111,"line_end":111,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":676394,"byte_end":676411,"line_start":130,"line_end":130,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":676648,"byte_end":676665,"line_start":140,"line_end":140,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":677095,"byte_end":677096,"line_start":159,"line_end":159,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":677371,"byte_end":677375,"line_start":174,"line_end":174,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":677594,"byte_end":677602,"line_start":186,"line_end":186,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":678000,"byte_end":678001,"line_start":203,"line_end":203,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":678313,"byte_end":678314,"line_start":216,"line_end":216,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2968},{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":678930,"byte_end":678931,"line_start":240,"line_end":240,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":679123,"byte_end":679127,"line_start":249,"line_end":249,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":679271,"byte_end":679273,"line_start":255,"line_end":255,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":679524,"byte_end":679528,"line_start":269,"line_end":269,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681430,"byte_end":681434,"line_start":315,"line_end":315,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681575,"byte_end":681579,"line_start":321,"line_end":321,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681721,"byte_end":681725,"line_start":327,"line_end":327,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681861,"byte_end":681865,"line_start":333,"line_end":333,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682007,"byte_end":682011,"line_start":339,"line_end":339,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682164,"byte_end":682168,"line_start":345,"line_end":345,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682312,"byte_end":682316,"line_start":351,"line_end":351,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682447,"byte_end":682451,"line_start":357,"line_end":357,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3001}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":684828,"byte_end":684832,"line_start":422,"line_end":422,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":684900,"byte_end":684904,"line_start":428,"line_end":428,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":706512,"byte_end":706513,"line_start":1059,"line_end":1059,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":706845,"byte_end":706849,"line_start":1074,"line_end":1074,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":707266,"byte_end":707267,"line_start":1088,"line_end":1088,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":707912,"byte_end":707916,"line_start":1111,"line_end":1111,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708147,"byte_end":708148,"line_start":1121,"line_end":1121,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708427,"byte_end":708431,"line_start":1132,"line_end":1132,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708575,"byte_end":708576,"line_start":1138,"line_end":1138,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708892,"byte_end":708896,"line_start":1151,"line_end":1151,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":709174,"byte_end":709175,"line_start":1161,"line_end":1161,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":709452,"byte_end":709456,"line_start":1174,"line_end":1174,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":709766,"byte_end":709770,"line_start":1187,"line_end":1187,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":710325,"byte_end":710326,"line_start":1212,"line_end":1212,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":710582,"byte_end":710586,"line_start":1222,"line_end":1222,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":710744,"byte_end":710752,"line_start":1228,"line_end":1228,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":711982,"byte_end":711986,"line_start":1268,"line_end":1268,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":733184,"byte_end":733188,"line_start":1865,"line_end":1865,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":733819,"byte_end":733823,"line_start":1886,"line_end":1886,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735292,"byte_end":735303,"line_start":1938,"line_end":1938,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736790,"byte_end":736798,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739738,"byte_end":739746,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741234,"byte_end":741240,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742948,"byte_end":742954,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745323,"byte_end":745329,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":746077,"byte_end":746083,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":746356,"byte_end":746362,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748702,"byte_end":748715,"line_start":66,"line_end":66,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":753764,"byte_end":753774,"line_start":209,"line_end":209,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":756378,"byte_end":756391,"line_start":305,"line_end":305,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763934,"byte_end":763955,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":767070,"byte_end":767091,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":768343,"byte_end":768364,"line_start":330,"line_end":330,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":769248,"byte_end":769252,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":769445,"byte_end":769449,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":776363,"byte_end":776370,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":776881,"byte_end":776886,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":778343,"byte_end":778346,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":778523,"byte_end":778531,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3482},{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779110,"byte_end":779111,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":780717,"byte_end":780730,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":781571,"byte_end":781584,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":782153,"byte_end":782166,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3522},{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785082,"byte_end":785086,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3651},{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":795445,"byte_end":795449,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":795936,"byte_end":795940,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":796166,"byte_end":796174,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3661},{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":796555,"byte_end":796559,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":797290,"byte_end":797298,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":797720,"byte_end":797728,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":800244,"byte_end":800248,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":800406,"byte_end":800414,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804323,"byte_end":804327,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3676}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":828121,"byte_end":828125,"line_start":1223,"line_end":1223,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831440,"byte_end":831443,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832402,"byte_end":832405,"line_start":95,"line_end":95,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":835809,"byte_end":835812,"line_start":200,"line_end":200,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/regex_set.rs","byte_start":849167,"byte_end":849175,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3836},{"krate":0,"index":3838}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851429,"byte_end":851434,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":852536,"byte_end":852541,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853161,"byte_end":853181,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3796,"byte_end":3809,"line_start":133,"line_end":133,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4699,"byte_end":4712,"line_start":165,"line_end":165,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6996,"byte_end":7003,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4013},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4027},{"krate":0,"index":4029},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4036},{"krate":0,"index":4038},{"krate":0,"index":4040},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4050},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4114},{"krate":0,"index":4116},{"krate":0,"index":4118},{"krate":0,"index":4120},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":63189,"byte_end":63203,"line_start":1827,"line_end":1827,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":63213,"byte_end":63227,"line_start":1829,"line_end":1829,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":64715,"byte_end":64729,"line_start":1874,"line_end":1874,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":70437,"byte_end":70445,"line_start":2036,"line_end":2036,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4140},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4155}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85251,"byte_end":85265,"line_start":2491,"line_end":2491,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4174}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":1636,"byte_end":1645,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":3864}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89452,"byte_end":89458,"line_start":25,"line_end":25,"column_start":21,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":89753,"byte_end":89759,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":112030,"byte_end":112039,"line_start":739,"line_end":739,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":112878,"byte_end":112887,"line_start":770,"line_end":770,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":113674,"byte_end":113684,"line_start":798,"line_end":798,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":114799,"byte_end":114809,"line_start":832,"line_end":832,"column_start":15,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4180},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":115061,"byte_end":115079,"line_start":844,"line_end":844,"column_start":23,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":176},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116254,"byte_end":116260,"line_start":888,"line_end":888,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116387,"byte_end":116393,"line_start":894,"line_end":894,"column_start":13,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116412,"byte_end":116418,"line_start":896,"line_end":896,"column_start":15,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116650,"byte_end":116654,"line_start":908,"line_end":908,"column_start":20,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116777,"byte_end":116781,"line_start":914,"line_end":914,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":116806,"byte_end":116810,"line_start":916,"line_end":916,"column_start":21,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":117787,"byte_end":117798,"line_start":948,"line_end":948,"column_start":36,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4191},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":118232,"byte_end":118236,"line_start":963,"line_end":963,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129462,"byte_end":129486,"line_start":1313,"line_end":1313,"column_start":6,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":129837,"byte_end":129860,"line_start":1332,"line_end":1332,"column_start":19,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130237,"byte_end":130260,"line_start":1347,"line_end":1347,"column_start":28,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":130549,"byte_end":130563,"line_start":1360,"line_end":1360,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131098,"byte_end":131112,"line_start":1377,"line_end":1377,"column_start":23,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":131550,"byte_end":131557,"line_start":1395,"line_end":1395,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":132664,"byte_end":132687,"line_start":1433,"line_end":1433,"column_start":19,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":133382,"byte_end":133407,"line_start":1463,"line_end":1463,"column_start":19,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134130,"byte_end":134134,"line_start":1492,"line_end":1492,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":134921,"byte_end":134926,"line_start":1522,"line_end":1522,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135416,"byte_end":135421,"line_start":1538,"line_end":1538,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135543,"byte_end":135548,"line_start":1544,"line_end":1544,"column_start":15,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135778,"byte_end":135793,"line_start":1557,"line_end":1557,"column_start":21,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":135916,"byte_end":135931,"line_start":1563,"line_end":1563,"column_start":6,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":137839,"byte_end":137854,"line_start":1629,"line_end":1629,"column_start":15,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138090,"byte_end":138100,"line_start":1642,"line_end":1642,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":138591,"byte_end":138601,"line_start":1658,"line_end":1658,"column_start":15,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":139008,"byte_end":139019,"line_start":1676,"line_end":1676,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":139575,"byte_end":139586,"line_start":1694,"line_end":1694,"column_start":21,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":147092,"byte_end":147102,"line_start":1951,"line_end":1951,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":149854,"byte_end":149864,"line_start":2039,"line_end":2039,"column_start":15,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4245},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/clang.rs","byte_start":150175,"byte_end":150185,"line_start":2054,"line_end":2054,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/dyngen.rs","byte_start":310374,"byte_end":310386,"line_start":70,"line_end":70,"column_start":6,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/error.rs","byte_start":313360,"byte_end":313365,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4268},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/error.rs","byte_start":313807,"byte_end":313812,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4268},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":325147,"byte_end":325156,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4887},"to":{"krate":0,"index":502}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":325512,"byte_end":325524,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4849},"to":{"krate":0,"index":502}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/impl_debug.rs","byte_start":326386,"byte_end":326390,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":502}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/struct_layout.rs","byte_start":337482,"byte_end":337501,"line_start":83,"line_end":83,"column_start":10,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":155575,"byte_end":155578,"line_start":166,"line_end":166,"column_start":32,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":157771,"byte_end":157784,"line_start":236,"line_end":236,"column_start":10,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":160344,"byte_end":160357,"line_start":330,"line_end":330,"column_start":25,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":833},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":160509,"byte_end":160522,"line_start":338,"line_end":338,"column_start":28,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":833},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":160814,"byte_end":160825,"line_start":350,"line_end":350,"column_start":29,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":23,"index":613},"to":{"krate":0,"index":874}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":161381,"byte_end":161392,"line_start":370,"line_end":370,"column_start":52,"column_end":63},"kind":{"Impl":{"id":49}},"from":{"krate":23,"index":613},"to":{"krate":0,"index":878}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":163195,"byte_end":163199,"line_start":433,"line_end":433,"column_start":24,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":164634,"byte_end":164640,"line_start":482,"line_end":482,"column_start":24,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5481},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":167576,"byte_end":167579,"line_start":573,"line_end":573,"column_start":24,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5707},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":172039,"byte_end":172043,"line_start":699,"line_end":699,"column_start":24,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":183652,"byte_end":183658,"line_start":991,"line_end":991,"column_start":10,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":183914,"byte_end":183920,"line_start":1005,"line_end":1005,"column_start":28,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":913},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":184556,"byte_end":184562,"line_start":1028,"line_end":1028,"column_start":32,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":913},"to":{"krate":0,"index":2919}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":184738,"byte_end":184744,"line_start":1034,"line_end":1034,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":913},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":185050,"byte_end":185071,"line_start":1049,"line_end":1049,"column_start":24,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":188169,"byte_end":188174,"line_start":1140,"line_end":1140,"column_start":31,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4855},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":189574,"byte_end":189583,"line_start":1192,"line_end":1192,"column_start":31,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4887},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":194477,"byte_end":194489,"line_start":1345,"line_end":1345,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":194798,"byte_end":194806,"line_start":1358,"line_end":1358,"column_start":6,"column_end":14},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":196396,"byte_end":196408,"line_start":1410,"line_end":1410,"column_start":31,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4849},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":201256,"byte_end":201264,"line_start":1563,"line_end":1563,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4864},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":204906,"byte_end":204914,"line_start":1667,"line_end":1667,"column_start":24,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4923},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":225457,"byte_end":225463,"line_start":2231,"line_end":2231,"column_start":24,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4843},"to":{"krate":0,"index":990}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231479,"byte_end":231492,"line_start":2420,"line_end":2420,"column_start":6,"column_end":19},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":231919,"byte_end":231932,"line_start":2438,"line_end":2438,"column_start":18,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4450},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":232037,"byte_end":232050,"line_start":2444,"line_end":2444,"column_start":28,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4450},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":233781,"byte_end":233792,"line_start":2499,"line_end":2499,"column_start":10,"column_end":21},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":243661,"byte_end":243665,"line_start":2802,"line_end":2802,"column_start":24,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5208},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254476,"byte_end":254494,"line_start":3101,"line_end":3101,"column_start":6,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254763,"byte_end":254781,"line_start":3111,"line_end":3111,"column_start":18,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":254898,"byte_end":254916,"line_start":3117,"line_end":3117,"column_start":28,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":255884,"byte_end":255898,"line_start":3147,"line_end":3147,"column_start":6,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":256224,"byte_end":256238,"line_start":3158,"line_end":3158,"column_start":18,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4487},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":256348,"byte_end":256362,"line_start":3164,"line_end":3164,"column_start":28,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4487},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":258379,"byte_end":258390,"line_start":3220,"line_end":3220,"column_start":17,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1059},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":258821,"byte_end":258822,"line_start":3236,"line_end":3236,"column_start":22,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1069},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":259757,"byte_end":259768,"line_start":3260,"line_end":3260,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":1070},"to":{"krate":0,"index":1073}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":259771,"byte_end":259782,"line_start":3260,"line_end":3260,"column_start":42,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":1059},"to":{"krate":0,"index":1073}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":260022,"byte_end":260023,"line_start":3270,"line_end":3270,"column_start":36,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1078},"to":{"krate":0,"index":1073}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":261530,"byte_end":261541,"line_start":3308,"line_end":3308,"column_start":25,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1070},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":261544,"byte_end":261552,"line_start":3308,"line_end":3308,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1064},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":261767,"byte_end":261768,"line_start":3318,"line_end":3318,"column_start":33,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262113,"byte_end":262114,"line_start":3334,"line_end":3334,"column_start":25,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1092},"to":{"krate":0,"index":1059}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262389,"byte_end":262390,"line_start":3349,"line_end":3349,"column_start":25,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1096},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262680,"byte_end":262684,"line_start":3364,"line_end":3364,"column_start":22,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":1059}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":262916,"byte_end":262920,"line_start":3376,"line_end":3376,"column_start":22,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":263170,"byte_end":263174,"line_start":3388,"line_end":3388,"column_start":22,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":1059}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":263418,"byte_end":263422,"line_start":3400,"line_end":3400,"column_start":22,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":271812,"byte_end":271833,"line_start":3602,"line_end":3602,"column_start":22,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":1059}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":272120,"byte_end":272141,"line_start":3616,"line_end":3616,"column_start":22,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":274467,"byte_end":274478,"line_start":3683,"line_end":3683,"column_start":22,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5304},"to":{"krate":0,"index":1070}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":275292,"byte_end":275300,"line_start":3708,"line_end":3708,"column_start":24,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5274},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/codegen/mod.rs","byte_start":281991,"byte_end":282004,"line_start":3910,"line_end":3910,"column_start":24,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5489},"to":{"krate":0,"index":883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/features.rs","byte_start":355307,"byte_end":355319,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4573},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":378096,"byte_end":378118,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":386115,"byte_end":386137,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4602},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/template_params.rs","byte_start":394457,"byte_end":394464,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3973},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":398493,"byte_end":398505,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":411150,"byte_end":411161,"line_start":444,"line_end":444,"column_start":6,"column_end":17},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":416515,"byte_end":416526,"line_start":610,"line_end":610,"column_start":23,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4616},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":416933,"byte_end":416945,"line_start":623,"line_end":623,"column_start":34,"column_end":46},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4632},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/derive.rs","byte_start":419860,"byte_end":419867,"line_start":710,"line_end":710,"column_start":41,"column_end":48},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3973},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421255,"byte_end":421270,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4645},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421342,"byte_end":421357,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421516,"byte_end":421531,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4645},"to":{"krate":2,"index":3147}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":421676,"byte_end":421691,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4645},"to":{"krate":2,"index":3173}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":423039,"byte_end":423056,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":424521,"byte_end":424538,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4667},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_vtable.rs","byte_start":427137,"byte_end":427144,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3973},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":429945,"byte_end":429966,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":430859,"byte_end":430880,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4679},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_destructor.rs","byte_start":434375,"byte_end":434382,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3976},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":436200,"byte_end":436223,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":437625,"byte_end":437648,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4690},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":443351,"byte_end":443358,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3976},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":445034,"byte_end":445042,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":446240,"byte_end":446248,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4701},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/has_float.rs","byte_start":452041,"byte_end":452048,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3976},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454279,"byte_end":454294,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4712},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454373,"byte_end":454388,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454547,"byte_end":454562,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4712},"to":{"krate":2,"index":3147}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":454707,"byte_end":454722,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4712},"to":{"krate":2,"index":3173}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":455564,"byte_end":455581,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":457184,"byte_end":457201,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4734},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/sizedness.rs","byte_start":462914,"byte_end":462921,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3973},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361013,"byte_end":361018,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":361026,"byte_end":361031,"line_start":76,"line_end":76,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":9553},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":363317,"byte_end":363332,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4743},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":363421,"byte_end":363436,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4743},"to":{"krate":2,"index":3147}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/analysis/mod.rs","byte_start":363737,"byte_end":363752,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4743},"to":{"krate":2,"index":3173}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466403,"byte_end":466414,"line_start":78,"line_end":78,"column_start":18,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/annotations.rs","byte_start":466820,"byte_end":466831,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":475696,"byte_end":475706,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":476615,"byte_end":476621,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":478716,"byte_end":478728,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479447,"byte_end":479452,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":479799,"byte_end":479804,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4855},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":480334,"byte_end":480339,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4855},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":481548,"byte_end":481557,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4887},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":481913,"byte_end":481921,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4864},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":482893,"byte_end":482901,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":485028,"byte_end":485036,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4864},"to":{"krate":0,"index":1974}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":485858,"byte_end":485866,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":486404,"byte_end":486412,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4871},"to":{"krate":0,"index":1974}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":494946,"byte_end":494956,"line_start":717,"line_end":717,"column_start":18,"column_end":28},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4876},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":495063,"byte_end":495073,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":499574,"byte_end":499584,"line_start":853,"line_end":853,"column_start":16,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4876},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":500888,"byte_end":500897,"line_start":901,"line_end":901,"column_start":23,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4887},"to":{"krate":0,"index":1974}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":502125,"byte_end":502129,"line_start":961,"line_end":961,"column_start":6,"column_end":10},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":505711,"byte_end":505719,"line_start":1072,"line_end":1072,"column_start":6,"column_end":14},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":527872,"byte_end":527880,"line_start":1663,"line_end":1663,"column_start":24,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4923},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":529304,"byte_end":529312,"line_start":1716,"line_end":1716,"column_start":19,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4923},"to":{"krate":0,"index":2924}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":531511,"byte_end":531519,"line_start":1769,"line_end":1769,"column_start":29,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4923},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/comp.rs","byte_start":531658,"byte_end":531666,"line_start":1775,"line_end":1775,"column_start":16,"column_end":24},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4923},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539202,"byte_end":539208,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539367,"byte_end":539373,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4942},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539547,"byte_end":539548,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2310},"to":{"krate":0,"index":2530}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539759,"byte_end":539760,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2313},"to":{"krate":0,"index":2534}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":539974,"byte_end":539975,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2316},"to":{"krate":0,"index":2532}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540180,"byte_end":540181,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2319},"to":{"krate":0,"index":2536}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540392,"byte_end":540393,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2322},"to":{"krate":0,"index":2540}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540680,"byte_end":540681,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2325},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":540959,"byte_end":540960,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2328},"to":{"krate":0,"index":2542}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":541269,"byte_end":541270,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2331},"to":{"krate":0,"index":2544}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":548685,"byte_end":548710,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2333},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":549016,"byte_end":549041,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":549453,"byte_end":549467,"line_start":510,"line_end":510,"column_start":6,"column_end":20},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628582,"byte_end":628588,"line_start":2615,"line_end":2615,"column_start":6,"column_end":12},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628741,"byte_end":628753,"line_start":2622,"line_end":2622,"column_start":21,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5144},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":628864,"byte_end":628876,"line_start":2631,"line_end":2631,"column_start":6,"column_end":18},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":630766,"byte_end":630777,"line_start":2691,"line_end":2691,"column_start":6,"column_end":17},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/context.rs","byte_start":631311,"byte_end":631322,"line_start":2710,"line_end":2710,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5153},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636128,"byte_end":636137,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5168},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636209,"byte_end":636218,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636377,"byte_end":636386,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5168},"to":{"krate":2,"index":3147}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/derive.rs","byte_start":636520,"byte_end":636529,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5168},"to":{"krate":2,"index":3173}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":640237,"byte_end":640241,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/enum_ty.rs","byte_start":647134,"byte_end":647145,"line_start":250,"line_end":250,"column_start":6,"column_end":17},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":649107,"byte_end":649119,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":651265,"byte_end":651273,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":652254,"byte_end":652262,"line_start":143,"line_end":143,"column_start":24,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5274},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653152,"byte_end":653155,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":653371,"byte_end":653374,"line_start":195,"line_end":195,"column_start":26,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5283},"to":{"krate":22,"index":116}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":658572,"byte_end":658583,"line_start":347,"line_end":347,"column_start":6,"column_end":17},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":666837,"byte_end":666845,"line_start":575,"line_end":575,"column_start":29,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5274},"to":{"krate":0,"index":3811}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/function.rs","byte_start":669038,"byte_end":669049,"line_start":640,"line_end":640,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5304},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/int.rs","byte_start":670914,"byte_end":670921,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":676038,"byte_end":676054,"line_start":111,"line_end":111,"column_start":6,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":676394,"byte_end":676411,"line_start":130,"line_end":130,"column_start":10,"column_end":27},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":676648,"byte_end":676665,"line_start":140,"line_end":140,"column_start":23,"column_end":40},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2940},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":677095,"byte_end":677096,"line_start":159,"line_end":159,"column_start":29,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2954},"to":{"krate":0,"index":3406}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":677371,"byte_end":677375,"line_start":174,"line_end":174,"column_start":26,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":3406}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":677594,"byte_end":677602,"line_start":186,"line_end":186,"column_start":26,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5426},"to":{"krate":0,"index":3406}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":678000,"byte_end":678001,"line_start":203,"line_end":203,"column_start":31,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2964},"to":{"krate":0,"index":2919}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":678313,"byte_end":678314,"line_start":216,"line_end":216,"column_start":31,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2967},"to":{"krate":0,"index":2921}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":678930,"byte_end":678931,"line_start":240,"line_end":240,"column_start":27,"column_end":28},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2971},"to":{"krate":0,"index":2931}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":679123,"byte_end":679127,"line_start":249,"line_end":249,"column_start":24,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2931}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":679271,"byte_end":679273,"line_start":255,"line_end":255,"column_start":20,"column_end":22},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2978},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":679524,"byte_end":679528,"line_start":269,"line_end":269,"column_start":16,"column_end":20},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681430,"byte_end":681434,"line_start":315,"line_end":315,"column_start":25,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2530}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681575,"byte_end":681579,"line_start":321,"line_end":321,"column_start":27,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2534}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681721,"byte_end":681725,"line_start":327,"line_end":327,"column_start":24,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2532}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":681861,"byte_end":681865,"line_start":333,"line_end":333,"column_start":24,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2536}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682007,"byte_end":682011,"line_start":339,"line_end":339,"column_start":30,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2540}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682164,"byte_end":682168,"line_start":345,"line_end":345,"column_start":29,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682312,"byte_end":682316,"line_start":351,"line_end":351,"column_start":22,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2542}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":682447,"byte_end":682451,"line_start":357,"line_end":357,"column_start":23,"column_end":27},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2544}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":684828,"byte_end":684832,"line_start":422,"line_end":422,"column_start":24,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5381},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":684900,"byte_end":684904,"line_start":428,"line_end":428,"column_start":6,"column_end":10},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":706512,"byte_end":706513,"line_start":1059,"line_end":1059,"column_start":22,"column_end":23},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3068},"to":{"krate":0,"index":2924}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":706845,"byte_end":706849,"line_start":1074,"line_end":1074,"column_start":19,"column_end":23},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2924}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":707266,"byte_end":707267,"line_start":1088,"line_end":1088,"column_start":23,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3076},"to":{"krate":0,"index":1498}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":707912,"byte_end":707916,"line_start":1111,"line_end":1111,"column_start":20,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":1498}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708147,"byte_end":708148,"line_start":1121,"line_end":1121,"column_start":23,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3085},"to":{"krate":0,"index":1777}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708427,"byte_end":708431,"line_start":1132,"line_end":1132,"column_start":20,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":1777}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708575,"byte_end":708576,"line_start":1138,"line_end":1138,"column_start":33,"column_end":34},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3091},"to":{"krate":0,"index":2927}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":708892,"byte_end":708896,"line_start":1151,"line_end":1151,"column_start":30,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2927}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":709174,"byte_end":709175,"line_start":1161,"line_end":1161,"column_start":22,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3096},"to":{"krate":0,"index":2929}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":709452,"byte_end":709456,"line_start":1174,"line_end":1174,"column_start":19,"column_end":23},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2929}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":709766,"byte_end":709770,"line_start":1187,"line_end":1187,"column_start":24,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":710325,"byte_end":710326,"line_start":1212,"line_end":1212,"column_start":32,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3105},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":710582,"byte_end":710586,"line_start":1222,"line_end":1222,"column_start":29,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":710744,"byte_end":710752,"line_start":1228,"line_end":1228,"column_start":29,"column_end":37},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5426},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":711982,"byte_end":711986,"line_start":1268,"line_end":1268,"column_start":26,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":3813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":733184,"byte_end":733188,"line_start":1865,"line_end":1865,"column_start":28,"column_end":32},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2919}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":733819,"byte_end":733823,"line_start":1886,"line_end":1886,"column_start":28,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":2921}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item.rs","byte_start":735292,"byte_end":735303,"line_start":1938,"line_end":1938,"column_start":10,"column_end":21},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":736790,"byte_end":736798,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/item_kind.rs","byte_start":739738,"byte_end":739746,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5426},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":741234,"byte_end":741240,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/layout.rs","byte_start":742948,"byte_end":742954,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":745323,"byte_end":745329,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":746077,"byte_end":746083,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5481},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/module.rs","byte_start":746356,"byte_end":746362,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5481},"to":{"krate":0,"index":3811}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":748702,"byte_end":748715,"line_start":66,"line_end":66,"column_start":6,"column_end":19},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":753764,"byte_end":753774,"line_start":209,"line_end":209,"column_start":6,"column_end":16},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/objc.rs","byte_start":756378,"byte_end":756391,"line_start":305,"line_end":305,"column_start":16,"column_end":29},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5489},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":760377,"byte_end":760382,"line_start":102,"line_end":102,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":763934,"byte_end":763955,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":767070,"byte_end":767091,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":2924}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/template.rs","byte_start":768343,"byte_end":768364,"line_start":330,"line_end":330,"column_start":16,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5508},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":769248,"byte_end":769252,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":769445,"byte_end":769449,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5515},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":776363,"byte_end":776370,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3100},"to":{"krate":0,"index":3463}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":776881,"byte_end":776886,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5586},"to":{"krate":0,"index":3463}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":778128,"byte_end":778135,"line_start":310,"line_end":310,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2997},"to":{"krate":0,"index":3475}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":778343,"byte_end":778346,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"kind":{"Impl":{"id":242}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":3475}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":778523,"byte_end":778531,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":3475}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":779110,"byte_end":779111,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":780717,"byte_end":780730,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":781571,"byte_end":781584,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/traversal.rs","byte_start":782153,"byte_end":782166,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":785082,"byte_end":785086,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":795445,"byte_end":795449,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":2924}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":795936,"byte_end":795940,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":3406}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":796166,"byte_end":796174,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5618},"to":{"krate":0,"index":3406}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":796555,"byte_end":796559,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":797290,"byte_end":797298,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5618},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":797720,"byte_end":797728,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":800244,"byte_end":800248,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":800406,"byte_end":800414,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5618},"to":{"krate":0,"index":3399}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":804323,"byte_end":804327,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/ty.rs","byte_start":828121,"byte_end":828125,"line_start":1223,"line_end":1223,"column_start":16,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":831440,"byte_end":831443,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":832402,"byte_end":832405,"line_start":95,"line_end":95,"column_start":24,"column_end":27},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5707},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/ir/var.rs","byte_start":835809,"byte_end":835812,"line_start":200,"line_end":200,"column_start":29,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5707},"to":{"krate":0,"index":3811}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846437,"byte_end":846442,"line_start":32,"line_end":32,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":3811}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/parse.rs","byte_start":846878,"byte_end":846883,"line_start":44,"line_end":44,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":3813}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/regex_set.rs","byte_start":849167,"byte_end":849175,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":851429,"byte_end":851434,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/time.rs","byte_start":852536,"byte_end":852541,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5743},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853161,"byte_end":853181,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853376,"byte_end":853381,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":9553},"to":{"krate":0,"index":3883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/callbacks.rs","byte_start":853384,"byte_end":853394,"line_start":26,"line_end":26,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":8538},"to":{"krate":0,"index":3883}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":3796,"byte_end":3809,"line_start":133,"line_end":133,"column_start":6,"column_end":19},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":4699,"byte_end":4712,"line_start":165,"line_end":165,"column_start":18,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5767},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":6996,"byte_end":7003,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":63189,"byte_end":63203,"line_start":1827,"line_end":1827,"column_start":35,"column_end":49},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":8538}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":63213,"byte_end":63227,"line_start":1829,"line_end":1829,"column_start":6,"column_end":20},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":64715,"byte_end":64729,"line_start":1874,"line_end":1874,"column_start":18,"column_end":32},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":70437,"byte_end":70445,"line_start":2036,"line_end":2036,"column_start":6,"column_end":14},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/guilhem/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.57.0/src/lib.rs","byte_start":85251,"byte_end":85265,"line_start":2491,"line_end":2491,"column_start":36,"column_end":50},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5992},"to":{"krate":0,"index":3883}}]}